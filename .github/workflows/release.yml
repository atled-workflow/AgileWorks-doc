name: Create and Deploy Release Branch to Main

on:
  create:
    # ブランチが作成されたときにトリガー
    branches:
      - release/*

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  copy_and_push_to_main:
    runs-on: ubuntu-latest

    steps:
      # リポジトリをチェックアウト（mainブランチを取得）
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main  # mainブランチを対象にする

      # 新しいブランチ名を取得
      - name: Extract branch name
        id: branch_name
        run: echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # 新しいディレクトリを作成してファイルをコピー
      - name: Copy api/main to new release directory
        run: |
          NEW_DIR="api/${{ env.branch_name }}"
          cp -r api/main "$NEW_DIR"

      # 必要なファイルが正しくコピーされているか確認
      - name: List files in new directory
        run: ls -al "api/${{ env.branch_name }}"

      # 新しいディレクトリをコミットしてmainブランチにプッシュ
      - name: Commit and push new release directory to main
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add "api/${{ env.branch_name }}"
          git commit -m "Add API documentation for release ${{ env.branch_name }}"
          git push origin main

      # 新しいディレクトリを作成してファイルをコピー
      - name: Create and copy to new release directory in contents
        run: |
          NEW_DIR="./contents/api/${{ env.branch_name }}"
          mkdir -p "$NEW_DIR"  # コピー先ディレクトリを作成
          cp -r api/main/* "$NEW_DIR"
      
      # Swagger-UIファイルをチェックアウトして必要なものをコピー
      - name: Checkout swagger-ui
        uses: actions/checkout@v4
        with:
          repository: swagger-api/swagger-ui
          ref: 'v4.15.5'
          path: swagger-ui
          sparse-checkout: dist
      # Swagger-UIをtest用にコピー
      - name: Inject Swagger static files for test
        run: |
          mkdir -p ./_site/api/${{ env.branch_name }}
          cp -r ./swagger-ui/dist/* ./_site/api/${{ env.branch_name }}

      # 既存のGitHub Pagesを保持するための設定
      - name: Checkout existing Pages content
        uses: actions/checkout@v4
        with:
          repository: atled-workflow/AgileWorks-doc
          ref: gh-pages
          path: existing-pages

      # 既存のコンテンツをマージ
      - name: Merge existing Pages content
        run: |
          cp -r ./existing-pages/* ./_site/

      # GitHub Pages用のデプロイ
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
