name: Convert OpenAPI3 to Swagger2 for Release and Deploy Swagger UI

on:
  push:
    branches:
      - "release/**" # `release/`で始まるブランチが作成されたときトリガー

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  convert_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # リポジトリをクローン
      - name: Checkout repository
        uses: actions/checkout@v4

      # ブランチ名を取得し、`release/`を取り除いたディレクトリ名を環境変数に保存
      - name: Extract release version
        id: vars
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          RELEASE_DIR=${BRANCH_NAME#release/}
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          echo "RELEASE_DIR=${RELEASE_DIR}" >> $GITHUB_ENV

      # `/api/main`ディレクトリをコピーしてリリース用ディレクトリを作成
      - name: Copy /api/main to release directory
        run: |
          cp -R api/main api/${{ env.RELEASE_DIR }}

      - name: Commit and push changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add api/${{ env.branch_name#release/ }}
          git commit -m "Add /api/${{ env.branch_name#release/ }} directory for release"
          git push origin ${{ env.branch_name }}
      
      # 必要な依存関係をインストール
      - name: Install dependencies
        run: npm ci

      # OpenAPI3仕様ドキュメントをフラット化
      - name: Flatten the OpenAPI3 document
        run: npx openapi-flattener -s api/${{ env.RELEASE_DIR }}/openapi.yaml -o api/${{ env.RELEASE_DIR }}/openapi_flat.yaml

      # OpenAPI3からSwagger2へ変換
      - name: Convert OpenAPI3 to Swagger2
        run: npx api-spec-converter --from=openapi_3 --to=swagger_2 --syntax=yaml api/${{ env.RELEASE_DIR }}/openapi_flat.yaml > api/${{ env.RELEASE_DIR }}/swagger.yaml

      # Swagger-UIファイルをチェックアウトして必要なものをコピー
      - name: Checkout swagger-ui
        uses: actions/checkout@v4
        with:
          repository: swagger-api/swagger-ui
          ref: 'v4.15.5'
          path: swagger-ui
          sparse-checkout: dist
      - name: Inject Swagger static files
        run: cp -n ./swagger-ui/dist/* ./contents/api/${{ env.RELEASE_DIR }}

      # GitHub Pages用にマニュアルをビルドしてデプロイ
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./contents/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
