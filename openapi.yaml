openapi: 3.1.0
info:
  title: '[AW]R3系 WebAPIテストケース整理'
  version: 1.0.0
servers:
  - url: https://sample.atled.jp/AgileWorks/Broker
  
security:
  - bearerAuth: []
tags:
  - name: 共通
  - name: 書類API
  - name: ワークフローAPI
  - name: 組織API
  - name: サイトAPI
  - name: マスタAPI
  - name: フォーム管理API
  - name: 公開API

paths:
  /WebApi/Model?name={model_name}.{model_model}:
    get:
      tags:
        - 共通
      summary: モデルオブジェクト取得
      description: 
        指定のモデルオブジェクトを初期化した状態で取得します。
      operationId: model
      parameters:
        - $ref: "#/components/parameters/model_name"
        - $ref: "#/components/parameters/model_model"
      responses:
        "200":
          description: 詳細は各サービス実行APIのリクエストボディを参照してください。
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
            
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name={service_name}.{service_service}&method={service_method}:
    post:
      tags:
        - 共通
      summary: サービス実行
      description: 
        AgileWorksの各サービスを実行します。
      operationId: service
      parameters:
        - $ref: "#/components/parameters/service_name"
        - $ref: "#/components/parameters/service_service"
        - $ref: "#/components/parameters/service_method"
      responses:
        "200":
          description: すべてのサービス実行APIは共通でcommon.ResponseModel型のフィールドがレスポンスボディに含まれます。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/resultStatus"
              example:
                value:
                  resultStatus: 
                    status: SUCCESS
                    messageList: 
                      entries: []
                    text: 
                    code: 
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
            
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Download?s={download_s}:
    get:
      tags:
        - 共通
      summary: ダウンロード
      description: 
        AgileWorks上にアップロードされている各ファイルをダウンロードします。
      operationId: download
      parameters:
        - $ref: "#/components/parameters/download_s"
      responses:
        "200":
          description: |
            取得したファイル名は、Content-Disposition レスポンスヘッダに以下の形式で格納されます。<br>
            ・ファイル名が全て ASCII 文字で構成される場合<br>
            attachment;filename="<ファイル名>"<br>
            ・ファイル名に ASCII 以外の文字を含む場合<br>
            attachment;filename="<URL エンコードされたファイル名>"
          content:
            application/octet-stream:
              example:
                "ファイルの内容（バイナリデータ）" 
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=getDocHeader:
    post:
      tags:
        - 書類API
      summary: 書類情報取得
      description: 
        書類の各情報を取得します。
      operationId: getDocHeader
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/GetDocHeaderResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
            
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=getDoc:
    post:
      tags:
        - 書類API
      summary: 書類データ取得
      description: 
        書類データを取得します。
      operationId: getDoc
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/DocResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
          
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=prepareDocRequest:
    post:
      tags:
        - 書類API
      summary: 新規書類データ作成
      description: 
        初期状態の書類データを作成します。
      operationId: prepareDocRequest
      requestBody:
        $ref: "#/components/requestBodies/PrepareDocRequestRequest"
      responses:
        "200":
          $ref: "#/components/responses/DocResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=addDoc:
    post:
      tags:
        - 書類API
      summary: 新規書類データ保存
      description: 
        新規に作成した書類データを保存します。<br>
        「新規書類データ作成API」で取得したdocの値を雛形として、書類の各フィールドに値をセットし、本APIにより書類データの保存を行います。<br>
        本APIで保存した書類データを画面から参照できるようにするには、さらに、「下書き保存API」あるいは「書類作成 / 申請API」を実行する必要があります。
      operationId: addDoc
      requestBody:
        $ref: "#/components/requestBodies/AddDocRequest"
      responses:
        "200":
          $ref: "#/components/responses/DocResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=updateDoc:
    post:
      tags:
        - 書類API
      summary: 書類データ更新
      description: 
        初期状態の書類データを作成します。<br>
        「書類データ取得API」または「新規書類データ保存API」で取得したdocに対し、フィールドの値を変更し、本APIにより書類データを更新することができます。
      operationId: updateDoc
      requestBody:
        $ref: "#/components/requestBodies/UpdateDocRequest"
      responses:
        "200":
          $ref: "#/components/responses/DocResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=hardDeleteDoc:
    post:
      tags:
        - 書類API
      summary: 書類物理削除
      description: 
        論理削除済みの書類を物理削除します。<br>
        論理削除を行う場合は「書類論理削除API」を参照してください。
      operationId: hardDeleteDoc
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=selectDoc:
    post:
      tags:
        - 書類API
      summary: 書類検索
      description: 
        指定した条件に合致する書類の一覧を取得します。
      operationId: selectDoc
      requestBody:
        $ref: "#/components/requestBodies/SelectDocRequest"
      responses:
        "200":
          $ref: "#/components/responses/SelectDocResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=getDocPdf:
    post:
      tags:
        - 書類API
      summary: 書類PDFファイル取得
      description: 
        書類のPDFファイルを生成し、ダウンロードします。
      operationId: getDocPdf
      requestBody:
        $ref: "#/components/requestBodies/GetDocPdfRequest"
      responses:
        "200":
          $ref: "#/components/responses/GetDocPdfResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=listDocComment:
    post:
      tags:
        - 書類API
      summary: 書類コメント一覧取得
      description: 
        書類のコメント一覧を取得します。
      operationId: listDocComment
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/ListDocCommentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=addDocComment:
    post:
      tags:
        - 書類API
      summary: 書類メモ追加
      description: 
        書類のメモを追加します。
      operationId: addDocComment
      requestBody:
        $ref: "#/components/requestBodies/AddDocCommentRequest"
      responses:
        "200":
          $ref: "#/components/responses/AddDocCommentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=deleteDocComment:
    post:
      tags:
        - 書類API
      summary: 書類コメント / メモ削除
      description: 
        書類のコメント / メモを削除します。
      operationId: deleteDocComment
      requestBody:
        $ref: "#/components/requestBodies/DeleteDocCommentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=addDocAttachment:
    post:
      tags:
        - 書類API
      summary: 書類添付情報追加
      description: 
        書類の添付情報を追加します。
      operationId: addDocAttachement
      requestBody:
        $ref: "#/components/requestBodies/AddDocAttachmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DocAttachmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=updateDocAttachment:
    post:
      tags:
        - 書類API
      summary: 書類添付情報更新
      description: 
        書類の添付情報を更新します。
      operationId: updateDocAttachement
      requestBody:
        $ref: "#/components/requestBodies/UpdateDocAttachmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DocAttachmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=listDocAttachment:
    post:
      tags:
        - 書類API
      summary: 書類添付情報一覧取得
      description: 
        書類の添付情報一覧を取得します。
      operationId: listDocAttachement
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/ListDocAttachmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=deleteDocAttachment:
    post:
      tags:
        - 書類API
      summary: 書類添付情報削除
      description: 
        書類の添付情報を削除します。
      operationId: deleteDocAttachement
      requestBody:
        $ref: "#/components/requestBodies/DeleteDocAttachmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=getDocReferencee:
    post:
      tags:
        - 書類API
      summary: 参照元関連書類情報取得
      description: 
        参照元の関連書類情報を取得します。
      operationId: getDocReferencee
      requestBody:
        $ref: "#/components/requestBodies/docId2"
      responses:
        "200":
          $ref: "#/components/responses/GetDocReferenceeResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=listDocReferencer:
    post:
      tags:
        - 書類API
      summary: 参照先関連書類情報一覧取得
      description: 
        参照先の関連書類情報の一覧を取得します。
      operationId: listDocReferencer
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/ListDocReferencerResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=addDocReference:
    post:
      tags:
        - 書類API
      summary: 関連書類追加
      description: 
        書類の関連付けを追加します。
      operationId: addDocReference
      requestBody:
        $ref: "#/components/requestBodies/DocReferenceRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=deleteDocReference:
    post:
      tags:
        - 書類API
      summary: 関連書類削除
      description: 
        書類の関連付けを削除します。
      operationId: deleteDocReference
      requestBody:
        $ref: "#/components/requestBodies/DocReferenceRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=doc.Doc&method=openDoc:
    post:
      tags:
        - 書類API
      summary: 書類表示
      description: 
        書類を表示するHTMLをダウンロードします。
      operationId: openDoc
      requestBody:
        $ref: "#/components/requestBodies/OpenDocRequest"
      responses:
        "200":
          $ref: "#/components/responses/TextHtmlResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=countWorkflowMessage:
    post:
      tags:
        - ワークフローAPI
      summary: 回付情報件数取得
      description: |
        回付情報の件数を取得します。
      operationId: countWorkflowMessage
      requestBody:
        $ref: "#/components/requestBodies/CountWorkflowMessageRequest"
      responses:
        "200":
          $ref: "#/components/responses/CountResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=countListWorkflowMessage:
    post:
      tags:
        - ワークフローAPI
      summary: 回付情報件数一覧取得
      description: |
        回付情報の件数の一覧を取得します。
      operationId: countListWorkflowMessage
      requestBody:
        $ref: "#/components/requestBodies/CountListWorkflowMessageRequest"
      responses:
        "200":
          $ref: "#/components/responses/CountListWorkflowMessageResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=selectWorkflowMessage:
    post:
      tags:
        - ワークフローAPI
      summary: 回付情報検索
      description: |
        回付情報の一覧を検索します。
      operationId: selectWorkflowMessage
      requestBody:
        $ref: "#/components/requestBodies/SelectWorkflowMessageRequest"
      responses:
        "200":
          $ref: "#/components/responses/SelectWorkflowMessageResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=draft:
    post:
      tags:
        - ワークフローAPI
      summary: 書類下書き保存
      description: |
        書類を下書き保存します。
      operationId: draft
      requestBody:
        $ref: "#/components/requestBodies/DraftRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=start:
    post:
      tags:
        - ワークフローAPI
      summary: 書類作成/申請
      description: |
        書類を作成または申請します。
      operationId: start
      requestBody:
        $ref: "#/components/requestBodies/StartRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=approve:
    post:
      tags:
        - ワークフローAPI
      summary: 書類承認
      description: |
        書類を承認します。
      operationId: approve
      requestBody:
        $ref: "#/components/requestBodies/ApproveRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=delete:
    post:
      tags:
        - ワークフローAPI
      summary: 書類論理削除
      description: |
        書類を論理削除します。
      operationId: delete
      requestBody:
        $ref: "#/components/requestBodies/DeleteRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=remand:
    post:
      tags:
        - ワークフローAPI
      summary: 書類差戻し
      description: |
        書類を差戻します。
      operationId: remand
      requestBody:
        $ref: "#/components/requestBodies/RemandRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=retract:
    post:
      tags:
        - ワークフローAPI
      summary: 書類引戻し
      description: |
        書類を引戻します。
      operationId: retract
      requestBody:
        $ref: "#/components/requestBodies/RetractRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=reject:
    post:
      tags:
        - ワークフローAPI
      summary: 書類却下
      description: |
        書類を却下します。
      operationId: reject
      requestBody:
        $ref: "#/components/requestBodies/RejectRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=getWorkflowInfo:
    post:
      tags:
        - ワークフローAPI
      summary: 回付情報取得
      description: |
        回付情報を取得します。
      operationId: getWorkflowInfo
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/GetWorkflowInfoResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=findWorkflowTask:
    post:
      tags:
        - ワークフローAPI
      summary: 回付情報タスク検索
      description: |
        回付情報タスクを検索します。
      operationId: findWorkflowTask
      requestBody:
        $ref: "#/components/requestBodies/FindWorkflowTaskRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindWorkflowTaskResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=listWorkflowJournal:
    post:
      tags:
        - ワークフローAPI
      summary: 回付履歴一覧取得
      description: |
        回付履歴の一覧を取得します。
      operationId: listWorkflowJournal
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/ListWorkflowJournalResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=listElectJournal:
    post:
      tags:
        - ワークフローAPI
      summary: 処理者変更履歴一覧取得
      description: |
        処理者変更履歴の一覧を取得します。
      operationId: listElectJournal
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/ListElectJournalResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=workflow.Workflow&method=listShareJournal:
    post:
      tags:
        - ワークフローAPI
      summary: 共有履歴一覧取得
      description: |
        共有履歴の一覧を取得します。
      operationId: listShareJournal
      requestBody:
        $ref: "#/components/requestBodies/docId"
      responses:
        "200":
          $ref: "#/components/responses/ListShareJournalResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addUser:
    post:
      tags:
        - 組織API
      summary: ユーザー作成
      description: |
        ユーザーを作成します。
      operationId: AddUser
      requestBody:
        $ref: "#/components/requestBodies/AddUserRequest"
      responses:
        "200":
          $ref: "#/components/responses/UserResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
            
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findUser:
    post:
      tags:
        - 組織API
      summary: ユーザー参照
      description: |
        指定されたパラメータのユーザーを参照します。<br>
        ユーザーの参照には、基準日を指定する必要があります。<br>
        指定した基準日が適用期間内に含まれるユーザーを参照します。<br>
        また、columnValueConditionListで検索条件を指定できます。
      operationId: FindUser
      requestBody:
        $ref: "#/components/requestBodies/FindUserRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindUserResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
            
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateUser:
    post:
      tags:
        - 組織API
      summary: ユーザー更新
      description:
        ユーザーを更新します。
      operationId: UpdateUser
      requestBody:
        $ref: "#/components/requestBodies/UpdateUserRequest"
      responses:
        "200":
          $ref: "#/components/responses/UserResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
          
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteUser:
    post:
      tags:
        - 組織API
      summary: ユーザー削除
      description:
        ユーザーを削除します。
      operationId: DeleteUser
      requestBody:
        $ref: "#/components/requestBodies/DeleteUserRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
            
 # --------------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disableUser:
    post:
      tags:
        - 組織API
      summary: ユーザー適用終了
      description:
        ユーザーを適用終了します。
      operationId: DisableUser
      requestBody:
        $ref: "#/components/requestBodies/DisableUserRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisableUserResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"

 # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addUnit:
    post:
      tags:
        - 組織API
      summary: 組織作成
      description:
        組織を作成します。
      operationId: addUnit
      requestBody:
        $ref: "#/components/requestBodies/AddUnitRequest"
      responses:
        "200":
          $ref: "#/components/responses/UnitResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findUnit:
    post:
      tags:
        - 組織API
      summary: 組織参照
      description:
        組織を参照します。
      operationId: findUnit
      requestBody:
        $ref: "#/components/requestBodies/FindUnitRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindUnitResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateUnit:
    post:
      tags:
        - 組織API
      summary: 組織更新
      description:
        組織を更新します。
      operationId: updateUnit
      requestBody:
        $ref: "#/components/requestBodies/UpdateUnitRequest"
      responses:
        "200":
          $ref: "#/components/responses/UnitResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteUnit:
    post:
      tags:
        - 組織API
      summary: 組織削除
      description:
        組織を削除します。
      operationId: deleteUnit
      requestBody:
        $ref: "#/components/requestBodies/DeleteUnitRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disableUnit:
    post:
      tags:
        - 組織API
      summary: 組織適用終了
      description:
        組織を適用終了します。
      operationId: disableUnit
      requestBody:
        $ref: "#/components/requestBodies/DisableUnitRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisableUnitResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addSectionRole:
    post:
      tags:
        - 組織API
      summary: セクションロール作成
      description:
        セクションロールを作成します。
      operationId: addSectionRole
      requestBody:
        $ref: "#/components/requestBodies/AddSectionRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/SectionRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findSectionRole:
    post:
      tags:
        - 組織API
      summary: セクションロール参照
      description:
        セクションロールを参照します。
      operationId: findSectionRole
      requestBody:
        $ref: "#/components/requestBodies/FindSectionRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindSectionRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateSectionRole:
    post:
      tags:
        - 組織API
      summary: セクションロール更新
      description:
        セクションロールを更新します。
      operationId: updateSectionRole
      requestBody:
        $ref: "#/components/requestBodies/UpdateSectionRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/SectionRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteSectionRole:
    post:
      tags:
        - 組織API
      summary: セクションロール削除
      description:
        セクションロールを削除します。
      operationId: deleteSectionRole
      requestBody:
        $ref: "#/components/requestBodies/DeleteSectionRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addSectionRoleGroup:
    post:
      tags:
        - 組織API
      summary: セクションロールグループ作成
      description:
        セクションロールグループを作成します。
      operationId: addSectionRoleGroup
      requestBody:
        $ref: "#/components/requestBodies/AddSectionRoleGroupRequest"
      responses:
        "200":
          $ref: "#/components/responses/SectionRoleGroupResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findSectionRoleGroup:
    post:
      tags:
        - 組織API
      summary: セクションロールグループ参照
      description:
        セクションロールグループを参照します。
      operationId: findSectionRoleGroup
      requestBody:
        $ref: "#/components/requestBodies/FindSectionRoleGroupRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindSectionRoleGroupResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateSectionRoleGroup:
    post:
      tags:
        - 組織API
      summary: セクションロールグループ更新
      description:
        セクションロールグループを更新します。
      operationId: updateSectionRoleGroup
      requestBody:
        $ref: "#/components/requestBodies/UpdateSectionRoleGroupRequest"
      responses:
        "200":
          $ref: "#/components/responses/SectionRoleGroupResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteSectionRoleGroup:
    post:
      tags:
        - 組織API
      summary: セクションロールグループ削除
      description:
        セクションロールグループを削除します。
      operationId: deleteSectionRoleGroup
      requestBody:
        $ref: "#/components/requestBodies/DeleteSectionRoleGroupRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addUnitAppointment:
    post:
      tags:
        - 組織API
      summary: 組織所属作成
      description:
        組織所属を作成します。
      operationId: addUnitAppointment
      requestBody:
        $ref: "#/components/requestBodies/AddUnitAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/UnitAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findUnitAppointment:
    post:
      tags:
        - 組織API
      summary: 組織所属参照
      description:
        組織所属を参照します。
      operationId: findUnitAppointment
      requestBody:
        $ref: "#/components/requestBodies/FindUnitAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindUnitAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateUnitAppointment:
    post:
      tags:
        - 組織API
      summary: 組織所属更新
      description:
        組織所属を更新します。
      operationId: updateUnitAppointment
      requestBody:
        $ref: "#/components/requestBodies/UpdateUnitAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/UnitAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteUnitAppointment:
    post:
      tags:
        - 組織API
      summary: 組織所属削除
      description:
        組織所属を削除します。
      operationId: deleteUnitAppointment
      requestBody:
        $ref: "#/components/requestBodies/DeleteUnitAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disableUnitAppointment:
    post:
      tags:
        - 組織API
      summary: 組織所属適用終了
      description:
        組織所属を適用終了します。
      operationId: disableUnitAppointment
      requestBody:
        $ref: "#/components/requestBodies/DisableUnitAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisableUnitAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addProxyApplyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理申請作成
      description:
        代理申請を作成します。
      operationId: addProxyApplyAppointment
      requestBody:
        $ref: "#/components/requestBodies/AddProxyApplyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ProxyApplyAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findProxyApplyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理申請参照
      description:
        代理申請を参照します。
      operationId: findProxyApplyAppointment
      requestBody:
        $ref: "#/components/requestBodies/FindProxyApplyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindProxyApplyAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateProxyApplyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理申請更新
      description:
        代理申請を更新します。
      operationId: updateProxyApplyAppointment
      requestBody:
        $ref: "#/components/requestBodies/UpdateProxyApplyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ProxyApplyAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteProxyApplyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理申請削除
      description:
        代理申請を削除します。
      operationId: deleteProxyApplyAppointment
      requestBody:
        $ref: "#/components/requestBodies/DeleteProxyApplyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disableProxyApplyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理申請適用終了
      description:
        代理申請を適用終了します。
      operationId: disableProxyApplyAppointment
      requestBody:
        $ref: "#/components/requestBodies/DisableProxyApplyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisableProxyApplyAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addProxyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理承認作成
      description:
        代理承認を作成します。
      operationId: addProxyAppointment
      requestBody:
        $ref: "#/components/requestBodies/AddProxyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ProxyAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findProxyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理承認参照
      description:
        代理承認を参照します。
      operationId: findProxyAppointment
      requestBody:
        $ref: "#/components/requestBodies/FindProxyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindProxyAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateProxyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理承認更新
      description:
        代理承認を更新します。
      operationId: updateProxyAppointment
      requestBody:
        $ref: "#/components/requestBodies/UpdateProxyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ProxyAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteProxyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理承認削除
      description:
        代理承認を削除します。
      operationId: deleteProxyAppointment
      requestBody:
        $ref: "#/components/requestBodies/DeleteProxyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disableProxyAppointment:
    post:
      tags:
        - 組織API
      summary: 代理承認適用終了
      description:
        代理承認を適用終了します。
      operationId: disableProxyAppointment
      requestBody:
        $ref: "#/components/requestBodies/DisableProxyAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisableProxyAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addDelegationAppointment:
    post:
      tags:
        - 組織API
      summary: 権限委譲作成
      description:
        権限委譲を作成します。
      operationId: addDelegationAppointment
      requestBody:
        $ref: "#/components/requestBodies/AddDelegationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DelegationAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findDelegationAppointment:
    post:
      tags:
        - 組織API
      summary: 権限委譲参照
      description:
        権限委譲を参照します。
      operationId: findDelegationAppointment
      requestBody:
        $ref: "#/components/requestBodies/FindDelegationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindDelegationAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateDelegationAppointment:
    post:
      tags:
        - 組織API
      summary: 権限委譲更新
      description:
        権限委譲を更新します。
      operationId: updateDelegationAppointment
      requestBody:
        $ref: "#/components/requestBodies/UpdateDelegationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DelegationAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteDelegationAppointment:
    post:
      tags:
        - 組織API
      summary: 権限委譲削除
      description:
        権限委譲を削除します。
      operationId: deleteDelegationAppointment
      requestBody:
        $ref: "#/components/requestBodies/DeleteDelegationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disableDelegationAppointment:
    post:
      tags:
        - 組織API
      summary: 権限委譲適用終了
      description:
        権限委譲を適用終了します。
      operationId: disableDelegationAppointment
      requestBody:
        $ref: "#/components/requestBodies/DisableDelegationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisableDelegationAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addDeprivationAppointment:
    post:
      tags:
        - 組織API
      summary: 引上げ権限作成
      description:
        引上げ権限を作成します。
      operationId: addDeprivationAppointment
      requestBody:
        $ref: "#/components/requestBodies/AddDeprivationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DeprivationAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findDeprivationAppointment:
    post:
      tags:
        - 組織API
      summary: 引上げ権限参照
      description:
        引上げ権限を参照します。
      operationId: findDeprivationAppointment
      requestBody:
        $ref: "#/components/requestBodies/FindDeprivationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindDeprivationAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateDeprivationAppointment:
    post:
      tags:
        - 組織API
      summary: 引上げ権限更新
      description:
        引上げ権限を更新します。
      operationId: updateDeprivationAppointment
      requestBody:
        $ref: "#/components/requestBodies/UpdateDeprivationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DeprivationAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteDeprivationAppointment:
    post:
      tags:
        - 組織API
      summary: 引上げ権限削除
      description:
        引上げ権限を削除します。
      operationId: deleteDeprivationAppointment
      requestBody:
        $ref: "#/components/requestBodies/DeleteDeprivationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disableDeprivationAppointment:
    post:
      tags:
        - 組織API
      summary: 引上げ権限適用終了
      description:
        引上げ権限を適用終了します。
      operationId: disableDeprivationAppointment
      requestBody:
        $ref: "#/components/requestBodies/DisableDeprivationAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisableDeprivationAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addPrivateRole:
    post:
      tags:
        - 組織API
      summary: プライベートロール作成
      description:
        プライベートロールを作成します。
      operationId: addPrivateRole
      requestBody:
        $ref: "#/components/requestBodies/AddPrivateRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/PrivateRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findPrivateRole:
    post:
      tags:
        - 組織API
      summary: プライベートロール参照
      description:
        プライベートロールを参照します。
      operationId: findPrivateRole
      requestBody:
        $ref: "#/components/requestBodies/FindPrivateRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindPrivateRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updatePrivateRole:
    post:
      tags:
        - 組織API
      summary: プライベートロール更新
      description:
        プライベートロールを更新します。
      operationId: updatePrivateRole
      requestBody:
        $ref: "#/components/requestBodies/UpdatePrivateRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/PrivateRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deletePrivateRole:
    post:
      tags:
        - 組織API
      summary: プライベートロール削除
      description:
        プライベートロールを削除します。
      operationId: deletePrivateRole
      requestBody:
        $ref: "#/components/requestBodies/DeletePrivateRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addPrivateRoleAppointment:
    post:
      tags:
        - 組織API
      summary: プライベートロール所属作成
      description:
        プライベートロール所属を作成します。
      operationId: addPrivateRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/AddPrivateRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/PrivateRoleAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findPrivateRoleAppointment:
    post:
      tags:
        - 組織API
      summary: プライベートロール所属参照
      description:
        プライベートロール所属を参照します。
      operationId: findPrivateRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/FindPrivateRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindPrivateRoleAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updatePrivateRoleAppointment:
    post:
      tags:
        - 組織API
      summary: プライベートロール所属更新
      description:
        プライベートロール所属を更新します。
      operationId: updatePrivateRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/UpdatePrivateRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/PrivateRoleAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deletePrivateRoleAppointment:
    post:
      tags:
        - 組織API
      summary: プライベートロール所属削除
      description:
        プライベートロール所属を削除します。
      operationId: deletePrivateRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/DeletePrivateRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disablePrivateRoleAppointment:
    post:
      tags:
        - 組織API
      summary: プライベートロール所属適用終了
      description:
        プライベートロール所属を適用終了します。
      operationId: disablePrivateRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/DisablePrivateRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisablePrivateRoleAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addUniversalRole:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール作成
      description:
        ユニバーサルロールを作成します。
      operationId: addUniversalRole
      requestBody:
        $ref: "#/components/requestBodies/AddUniversalRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/UniversalRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findUniversalRole:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール参照
      description:
        ユニバーサルロールを参照します。
      operationId: findUniversalRole
      requestBody:
        $ref: "#/components/requestBodies/FindUniversalRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindUniversalRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateUniversalRole:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール更新
      description:
        ユニバーサルロールを更新します。
      operationId: updateUniversalRole
      requestBody:
        $ref: "#/components/requestBodies/UpdateUniversalRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/UniversalRoleResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteUniversalRole:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール削除
      description:
        ユニバーサルロールを削除します。
      operationId: deleteUniversalRole
      requestBody:
        $ref: "#/components/requestBodies/DeleteUniversalRoleRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=addUniversalRoleAppointment:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール所属作成
      description:
        ユニバーサルロール所属を作成します。
      operationId: addUniversalRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/AddUniversalRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/UniversalRoleAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=findUniversalRoleAppointment:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール所属参照
      description:
        ユニバーサル所属を参照します。
      operationId: findUniversalRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/FindUniversalRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindUniversalRoleAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=updateUniversalRoleAppointment:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール所属更新
      description:
        ユニバーサルロール所属を更新します。
      operationId: updateUniversalRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/UpdateUniversalRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/UniversalRoleAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
 # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=deleteUniversalRoleAppointment:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール所属削除
      description:
        ユニバーサルロール所属を削除します。
      operationId: deleteUniversalRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/DeleteUniversalRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/ResultStatusResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
 
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=org.Org&method=disableUniversalRoleAppointment:
    post:
      tags:
        - 組織API
      summary: ユニバーサルロール所属適用終了
      description:
        ユニバーサルロール所属を適用終了します。
      operationId: disableUniversalRoleAppointment
      requestBody:
        $ref: "#/components/requestBodies/DisableUniversalRoleAppointmentRequest"
      responses:
        "200":
          $ref: "#/components/responses/DisableUniversalRoleAppointmentResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=site.Site&method=findProject:
    post:
      tags:
        - サイトAPI
      summary: 業務カテゴリ一覧取得
      description:
        業務カテゴリ一覧を取得します。
      operationId: findProject
      requestBody:
        $ref: "#/components/requestBodies/FindProjectRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindProjectResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=usermaster.UserMaster&method=importTinyUserMaster:
    post:
      tags:
        - マスタAPI
      summary: 外部マスタ(標準)取込
      description:
        外部マスタ(標準)をインポートします。
      operationId: importTinyUserMaster
      requestBody:
        $ref: "#/components/requestBodies/ImportTinyUserMasterRequest"
      responses:
        "200":
          $ref: "#/components/responses/CountResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=usermaster.UserMaster&method=exportTinyUserMaster:
    post:
      tags:
        - マスタAPI
      summary: 外部マスタ(標準)取得
      description:
        外部マスタ(標準)をエクスポートします。
      operationId: exportTinyUserMaster
      requestBody:
        $ref: "#/components/requestBodies/ExportUserMasterRequest"
      responses:
        "200":
          $ref: "#/components/responses/CsvResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=usermaster.UserMaster&method=importUserMaster:
    post:
      tags:
        - マスタAPI
      summary: 外部マスタ(拡張)取込
      description:
        外部マスタ(拡張)をインポートします。
      operationId: importUserMaster
      requestBody:
        $ref: "#/components/requestBodies/ImportUserMasterRequest"
      responses:
        "200":
          $ref: "#/components/responses/CountResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=usermaster.UserMaster&method=exportUserMaster:
    post:
      tags:
        - マスタAPI
      summary: 外部マスタ(拡張)取得
      description:
        外部マスタ(拡張)をエクスポートします。
      operationId: exportUserMaster
      requestBody:
        $ref: "#/components/requestBodies/ExportUserMasterRequest"
      responses:
        "200":
          $ref: "#/components/responses/CsvResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=form.Form&method=listComponentMasterWindow:
    post:
      tags:
        - フォーム管理API
      summary: マスター参照コンポーネント一覧取得
      description:
        マスター参照コンポーネント一覧を取得します。
      operationId: listComponentMasterWindow
      responses:
        "200":
          $ref: "#/components/responses/ListComponentMasterWindowResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=form.Form&method=listComponentAutoNumber:
    post:
      tags:
        - フォーム管理API
      summary: 自動採番コンポーネント一覧取得
      description:
        自動採番コンポーネント一覧を取得します。
      operationId: listComponentAutoNumber
      responses:
        "200":
          $ref: "#/components/responses/ListComponentAutoNumberResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=form.Form&method=listForm:
    post:
      tags:
        - フォーム管理API
      summary: 登録フォーム一覧取得
      description:
        登録フォーム一覧を取得します。
      operationId: listForm
      requestBody:
        $ref: "#/components/requestBodies/ListFormRequest"
      responses:
        "200":
          $ref: "#/components/responses/ListFormResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=form.Form&method=findFormDefinition:
    post:
      tags:
        - フォーム管理API
      summary: フォーム定義情報取得
      description:
        フォーム定義情報を取得します。
      operationId: findFormDefinition
      requestBody:
        $ref: "#/components/requestBodies/FindFormDefinitionRequest"
      responses:
        "200":
          $ref: "#/components/responses/FindFormDefinitionResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
  # --------------------------------------------------------------------------------------------------
  /WebApi/Service?name=publication.Publication&method=listPublicFolderInfo:
    post:
      tags:
        - 公開API
      summary: 公開フォルダ・公開フォーム取得
      description:
        公開フォルダ・公開フォーム一覧を取得します。
      operationId: listPublicFolderInfo
      requestBody:
        $ref: "#/components/requestBodies/ListPublicFolderInfoRequest"
      responses:
        "200":
          $ref: "#/components/responses/ListPublicFolderInfoResponses200"
        "400":
          $ref: "#/components/responses/ErrorResponses400"
        "401":
          $ref: "#/components/responses/ErrorResponses401"
        "404":
          $ref: "#/components/responses/ErrorResponses404"
        "500":
          $ref: "#/components/responses/ErrorResponses500"
        "503":
          $ref: "#/components/responses/ErrorResponses503"
  
 # --------------------------------------------------------------------------------------------------

# -----------------------------------------------
# コンポーネントの定義
# -----------------------------------------------

components:

      
    # -----------------------------------------------
    # リクエスト components/requestBodies
    # -----------------------------------------------

  requestBodies:
    docId:
      content:
        application/json:
          schema:
            description: 書類ID
            type: integer
            example: 999
    
    docId2:
      content:
        application/json:
          schema:
            description: 書類ID
            type: integer
            example: 998
    
    PrepareDocRequestRequest:
      content:
        application/json:
          schema:
            required:
              - applyUnitCode
              - applyUserCode
              - formCode
              - ruleCode
            allOf:
              - $ref: "#/components/schemas/PrepareDocRequestRequest"
          example:
            applyUnitCode: unit01
            applyUserCode: user01
            stepCode: 
            referenceDocId: 
            formCode: form01
            ruleCode: rule01
            criterionDate: 2024-10-31 00:00:00 JST
    
    AddDocRequest:
      content:
        application/json:
          schema:
            required:
              - publicFormId
              - docData
              - formCode
            allOf:
              - $ref: "#/components/schemas/AddDocRequest"
          example:
            publicFormId: 222
            docData:
              entryList:
                entries:
                  - fieldType: TEXTFIELD
                    fieldId: textfield1
                    dataType: STRING
                    dataValue:
                      entryList:
                        entries: []
                      value: 
                    name: 文字フィールド１
                  - fieldType: INTEGERFIELD
                    fieldId: integerfield1
                    dataType: INT
                    dataValue:
                      entryList:
                        entries: []
                      value: 
                    name: 整数フィールド１
            id: 
            formCode: form01
            criterionDate: 2024-10-31 00:00:00 JST
            adminNo: 
            listNames:
              listName1: 
              listName2: 
              listName3: 
              listName4: 
              listName5: 
              listName6: 
              listName7: 
              listName8: 
              listName9: 
              listName10: 
              listName11: 
              listName12: 
              listName13: 
              listName14: 
              listName15: 
              listName16: 
              listName17: 
              listName18: 
              listName19: 
              listName20: 
            version: 
            owner:
              code: 
              type: 
    
    UpdateDocRequest:
      content:
        application/json:
          schema:
            required:
              - publicFormId
              - docData
              - id
              - formCode
              - criterionDate
              - adminNo
              - listNames
              - version
              - owner
            allOf:
              - $ref: "#/components/schemas/UpdateDocRequest"
          example:
            publicFormId: 222
            docData:
              entryList:
                entries:
                  - fieldType: TEXTFIELD
                    fieldId: textfield1
                    dataType: STRING
                    dataValue:
                      entryList:
                        entries: []
                      value: update
                    name: 文字フィールド１
                  - fieldType: INTEGERFIELD
                    fieldId: integerfield1
                    dataType: INT
                    dataValue:
                      entryList:
                        entries: []
                      value: 11
                    name: 整数フィールド１
            id: 999
            formCode: form01
            criterionDate: 2024-10-31 00:00:00 JST
            adminNo: 
            listNames:
              listName1: 
              listName2: 
              listName3: 
              listName4: 
              listName5: 
              listName6: 
              listName7: 
              listName8: 
              listName9: 
              listName10: 
              listName11: 
              listName12: 
              listName13: 
              listName14: 
              listName15: 
              listName16: 
              listName17: 
              listName18: 
              listName19: 
              listName20: 
            version: 1.0.0
            owner:
              code: 
              type: 
    
    SelectDocRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SelectDocRequest"
          example:
            docView: 
              formCode: form01
              columnList:
                entries:
                  - type: DOC_ID
                  - type: FIELD
                    fieldId: textfield1
            condition:
              fieldValueConditionList:
                entries:
                  - type: FIELD
                    fieldId: textfield
                    compareOperatorType: LIKE
                    value: t
              relativeConditionList:
                entries: []
              logicalOperatirType: AND
              workflowState: ACTIVE
              dateCondition:
                from: 2024-10-31 00:00:00 JST
                type: APPLY
              formCode: form01
    
    GetDocPdfRequest:
      content:
        application/json:
          schema:
            required:
              - instructionList
            allOf:
              - $ref: "#/components/schemas/GetDocPdfRequest"
          example:
            instructionList:
              entries:
                - docId: 999
                  isInsertTrail: true
    
    AddDocCommentRequest:
      content:
        application/json:
          schema:
            required:
              - docId
              - comment
              - operationInfo
            allOf:
              - $ref: "#/components/schemas/AddDocCommentRequest"
          example:
            docId: 999
            comment: comment
            operationInfo:
              registrant:
                userCode: user01
    
    DeleteDocCommentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: doc.DocCommentModel
            properties:
              id:
                description: |
                  コメントID<br>
                  *「書類メモ追加API」または「書類コメント/メモ一覧取得API」で取得したコメントのIDを指定
                type: integer
                example: 9999
    
    AddDocAttachmentRequest:
      description: 添付書類タイプがファイルの場合、アップロードファイルは multipart/form-data の２つ目に設定します。
      content:
        application/json:
          schema:
            required:
              - docId
              - type
            allOf:
              - $ref: "#/components/schemas/AddDocAttachmentRequest"
          example:
            docId: 999
            type: URL
            name: urlname
            url: https://atled.jp/AgileWorks/Broker/Picus
        multipart/form-data:
          example:
            docId: 999
            type: FILE
            explanation: 説明
    
    UpdateDocAttachmentRequest:
      description: 添付書類タイプがファイルの場合、アップロードファイルは multipart/form-data の２つ目に設定します。
      content:
        application/json:
          schema:
            required:
              - id
              - docId
              - type
            allOf:
              - $ref: "#/components/schemas/UpdateDocAttachmentRequest"
          example:
            id: 9999
            docId: 999
            type: URL
            name: urlname
            url: https://atled.jp/AgileWorks/Broker/Picus
        multipart/form-data:
          example:
            id: 9999
            docId: 999
            type: FILE
            explanation: 説明
    
    DeleteDocAttachmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: doc.DocAttachmentModel
            properties:
              id:
                description: |
                  添付ID<br>
                  *「書類添付情報一覧取得API」で取得した書類添付IDを指定
                type: integer
                example: 9999
    
    DocReferenceRequest:
      content:
        application/json:
          schema:
            required:
              - docId
              - refDocId
            type: object
            pattern: doc.DocReferenceModel
            properties:
              docId:
                description: 書類ID(参照先関連書類ID)
                type: integer
                example: 999
              refDocId:
                description: 関連書類ID(参照元関連書類ID)
                type: integer
                example: 998
    
    OpenDocRequest:
      content:
        application/json:
          schema:
            description: |
              いずれかを必ず指定する。<br>
              両方指定された場合、書類IDを優先する。
            type: object
            pattern: doc.DocHeaderModel
            properties:
              docId:
                description: 書類ID
                type: integer
                example: 999
              adminNo:
                description: 書類管理番号
                type: string
                example: 100
    
    CountWorkflowMessageRequest:
      content:
        application/json:
          schema:
            required:
              - condition
            type: object
            pattern: workflow.CountWorkflowMessageRequestModel
            properties:
              condition:
                description: 回付情報件数の取得条件
                allOf:
                  - $ref: "#/components/schemas/WorkflowMessageRequest"
          example:
            condition:
              userCode: user01
              workflowMessageType: APPROVE_REQUEST
    
    CountListWorkflowMessageRequest:
      content:
        application/json:
          schema:
            required:
              - conditionList
            type: object
            pattern: workflow.CountListWorkflowMessageRequestModel
            properties:
              conditionList:
                description: 回付情報件数の取得条件のリスト
                type: object
                pattern: workflow.WorkflowMessageConditionModel
                required:
                  - entries
                properties:
                  entries:
                    description: 回付情報件数の取得条件
                    allOf:
                      - $ref: "#/components/schemas/WorkflowMessageRequest"
          example:
            conditionList:
              entries:
                - userCode: user01
                  workflowMessageType: APPROVE_REQUEST
                - userCode: user01
                  workflowMessageType: CONFIRM_REQUEST
    
    SelectWorkflowMessageRequest:
      content:
        application/json:
          schema:
            required:
              - condition
            type: object
            pattern: workflow.SelectWorkflowMessageConditionModel
            properties:
              condition:
                description: 回付情報の検索条件
                type: object
                pattern: workflow.CountWorkflowMessageRequestModel
                properties:
                  formCode:
                    description: フォームコード
                    type: string
                allOf:
                  - $ref: "#/components/schemas/WorkflowMessageRequest"
          example:
            conditionList:
              entries:
                - userCode: user01
                  workflowMessageType: APPROVE_REQUEST
                - userCode: user01
                  workflowMessageType: CONFIRM_REQUEST
    
    DraftRequest:
      content:
        application/json:
          schema:
            required:
              - docId
              - applyUnitCode
              - applyUserCode
              - formCode
              - ruleCode
            allOf:
              - $ref: "#/components/schemas/DraftRequest"
          example:
            docId: 999
            criterionDate: 2024-10-31 00:00:00 JST
            applyUnitCode: unit01
            applyUserCode: user01
            formCode: form01
            ruleCode: rule01
    
    StartRequest:
      content:
        application/json:
          schema:
            required:
              - docId
              - applyUnitCode
              - applyUserCode
              - formCode
              - ruleCode
            type: object
            pattern: workflow.StartRequestModel
            properties:
              operateUserCode:
                description: 処理者ユーザーコード
                type: string
              comment:
                description: コメント
                type: string
            allOf:
              - $ref: "#/components/schemas/DraftRequest"
          example:
            docId: 999
            criterionDate: 2024-10-31 00:00:00 JST
            applyUnitCode: unit01
            applyUserCode: user01
            operateUserCode: user01
            formCode: form01
            ruleCode: rule01
            comment: 申請
    
    ApproveRequest:
      content:
        application/json:
          schema:
            required:
              - docId
              - ruleStepCode
            allOf:
              - $ref: "#/components/schemas/ApproveRequest"
          example:
            docId: 999
            operatorCode: user002
            ruleStepCode: STEP3
            comment: 承認
    
    DeleteRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: workflow.DeleteRequestModel
            properties:
              id:
                description: 書類ID
                type: integer
                example: 999
    
    RemandRequest:
      content:
        application/json:
          schema:
            required:
              - docId
              - ruleStepCode
              - comment
              - remandRuleStepCode
            allOf:
              - $ref: "#/components/schemas/RemandRequest"
          example:
            docId: 999
            operatorCode: user002
            ruleStepCode: STEP3
            comment: 差戻し
            remandRuleStepCode: STEP2
    
    RetractRequest:
      content:
        application/json:
          schema:
            required:
              - docId
              - ruleStepCode
            allOf:
              - $ref: "#/components/schemas/RetractRequest"
          example:
            docId: 999
            operatorCode: user001
            ruleStepCode: STEP2
    
    RejectRequest:
      content:
        application/json:
          schema:
            required:
              - docId
              - ruleStepCode
              - comment
            allOf:
              - $ref: "#/components/schemas/RejectRequest"
          example:
            docId: 999
            operatorCode: user002
            ruleStepCode: STEP3
            comment: 却下
    
    FindWorkflowTaskRequest:
      content:
        application/json:
          schema:
            required:
              - condition
            type: object
            pattern: workflow.FindWorkflowTaskRequestModel
            properties:
              condition:
                description: 回付情報タスクの検索条件
                type: object
                pattern: workflow.WorkflowTaskConditionModel
                properties:
                  docId:
                    description: 書類ID
                    type: integer
                  ruleStepCode:
                    description: ステップコード
                    type: string
                  ruleStepType:
                    description: |
                      ステップ種別<br>
                      指定可能な値<br>
                      |パラメータ|説明|
                      |CREATE|作成ステップ|
                      |APPLY|申請ステップ|
                      |APPROVE|承認ステップ|
                      |CONFIRM|報告ステップ|
                      |READ|閲覧ステップ|
          example:
            condition:
              docId: 999
              ruleStepCode: STEP1
              ruleStepType: APPLY
    
    AddUserRequest:
      content:
        application/json:
          schema:
            required:
              - code
              - loginId
              - name
              - password
            allOf:
              - $ref: "#/components/schemas/AddUserRequest"
          example:
            availableDateFrom: 1900-01-01 00:00:00 JST
            availableDateTo: 2060-12-31 00:00:00 JST
            code: user01
            displayLanguage: ja
            importCode: user01
            isAccountLock: false
            isForceChangePassword: true
            kana: テラサキケイイチ
            localeName: ja
            localizedName: ''
            loginId: user01
            mailAddress: user01@example.com
            name: 寺崎啓一
            password: user01_Pw
            remarks: 備考
            reserveItems:
              reserveItem1: a
              reserveItem2: b
              reserveItem3: c
              reserveItem4: d
              reserveItem5: e
              reserveItem6: f
              reserveItem7: g
              reserveItem8: h
              reserveItem9: i
              reserveItem10: j
              reserveItem11: k
              reserveItem12: l
              reserveItem13: m
              reserveItem14: n
              reserveItem15: o
              reserveItem16: p
              reserveItem17: q
              reserveItem18: r
              reserveItem19: s
              reserveItem20: t
            stampName: 寺崎(啓)
            validityDateFrom: 1900-01-01 00:00:00 JST
            validityDateTo: 2060-12-31 00:00:00 JST
              
    FindUserRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUserRequest"
          example:
            condition:
              code: user01
              loginId: 
              name: 
              isAccountLock: false
              unitCode: 
              sectionRoleCode:
              universalRoleCode:
              reserveItem1: 
              reserveItem2: 
              reserveItem3: 
              reserveItem4: 
              reserveItem5: 
              reserveItem6: 
              reserveItem7: 
              reserveItem8: 
              reserveItem9: 
              reserveItem10: 
              columnValueConditionList:
                entries:
                  - column: ReserveItem1
                    compareOperatorType: NOT_LIKE
                    value: A
                logicalOperator: AND
              criterionDate: 2024-10-31 00:00:00 JST
    
    UpdateUserRequest:
      content:
        application/json:
          schema:
            required:
              - code
              - id
              - loginId
              - name
            type: object
            properties:
              id:
                description: |
                  更新対象ユーザーのID<br>
                  *「ユーザー作成API」または「ユーザー参照API」で取得した値を指定
                type: integer
              criterionDate:
                description: 基準日
                type: string
            allOf:
              - $ref: "#/components/schemas/AddUserRequest"
          example:
            id: 999
            availableDateFrom: 1900-01-01 00:00:00 JST
            availableDateTo: 2060-12-31 00:00:00 JST
            code: user01
            criterionDate: 2024-10-31 00:00:00 JST
            displayLanguage: ja
            importCode: user01
            isAccountLock: false
            isForceChangePassword: true
            kana: テラサキケイイチ
            localeName: ja
            localizedName: ''
            loginId: user01
            mailAddress: user01@example.com
            name: 寺崎啓一
            password: user01_Pw
            remarks: 備考
            reserveItems:
              reserveItem1: a
              reserveItem2: b
              reserveItem3: c
              reserveItem4: d
              reserveItem5: e
              reserveItem6: f
              reserveItem7: g
              reserveItem8: h
              reserveItem9: i
              reserveItem10: j
              reserveItem11: k
              reserveItem12: l
              reserveItem13: m
              reserveItem14: n
              reserveItem15: o
              reserveItem16: p
              reserveItem17: q
              reserveItem18: r
              reserveItem19: s
              reserveItem20: t
            stampName: 寺崎(啓)
            validityDateFrom: 1900-01-01 00:00:00 JST
            validityDateTo: 2060-12-31 00:00:00 JST
    
    DeleteUserRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.UserModel
            properties:
              id:
                description: |
                  削除対象ユーザーのID<br>
                  *「ユーザー作成API」または「ユーザー参照API」で取得した値を指定
                type: integer
                example: 999
              criterionDate:
                description: 削除用基準日
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-10-31 00:00:00 JST
    
    DisableUserRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.UserModel
            properties:
              id:
                description: |
                  適用終了対象ユーザーのID<br>
                  *「ユーザー作成API」または「ユーザー参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: 適用終了日
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    AddUnitRequest:
      content:
        application/json:
          schema:
            required:
              - code
              - name
            allOf:
              - $ref: "#/components/schemas/AddUnitRequest"
          example:
            code: unit02
            importCode: unit02
            parentCode: unit01
            name: 組織2
            localizedName: 組織2
            localeName: auto
            officialName: 組織2正式名称
            kana: ソシキ2セイシキメイショウ
            remarks: 備考
            validityDateFrom: 1900-01-01 00:00:00 JST
            validityDateTo: 2060-12-31 00:00:00 JST
            availableDateFrom: 1900-01-01 00:00:00 JST
            availableDateTo: 2060-12-31 00:00:00 JST
            reserveItems:
              reserveItem1: item1
              reserveItem2: item2
              reserveItem3: item3
              reserveItem4: item4
              reserveItem5: item5
              reserveItem6: item6
              reserveItem7: item7
              reserveItem8: item8
              reserveItem9: item9
              reserveItem10: item10
              reserveItem11: item11
              reserveItem12: item12
              reserveItem13: item13
              reserveItem14: item14
              reserveItem15: item15
              reserveItem16: item16
              reserveItem17: item17
              reserveItem18: item18
              reserveItem19: item19
              reserveItem20: item20
    
    FindUnitRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUnitRequest"
          example:
            condition:
              code: unit02
              name: 
              parentCode: 
              importCode: 
              columnValueConditionList:
                entries:
                  - column: NAME
                    compareOperatorType: LIKE
                    value: 組織
                  - column: AvailableDateFrom
                    compareOperatorType: LESS_EQUAL
                    value: 2020-01-01 00:00:00 JST
                logicalOperator: AND
              criterionDate: 2024-10-31 00:00:00 JST
    
    UpdateUnitRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - code
              - parentCode
              - name
              - validityDateFrom
            type: object
            properties:
              id:
                description: |
                  更新対象組織のID<br>
                  *「組織作成API」または「組織参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddUnitRequest"
          example:
            id: 999
            code: unit02
            importCode: unit02
            parentCode: unit01
            name: 組織2
            localizedName: 組織2
            localeName: auto
            officialName: 組織2正式名称
            kana: ソシキ2セイシキメイショウ
            remarks: 備考
            validityDateFrom: 1900-01-01 00:00:00 JST
            validityDateTo: 2060-12-31 00:00:00 JST
            availableDateFrom: 1900-01-01 00:00:00 JST
            availableDateTo: 2060-12-31 00:00:00 JST
            reserveItems:
              reserveItem1: item1
              reserveItem2: item2
              reserveItem3: item3
              reserveItem4: item4
              reserveItem5: item5
              reserveItem6: item6
              reserveItem7: item7
              reserveItem8: item8
              reserveItem9: item9
              reserveItem10: item10
              reserveItem11: item11
              reserveItem12: item12
              reserveItem13: item13
              reserveItem14: item14
              reserveItem15: item15
              reserveItem16: item16
              reserveItem17: item17
              reserveItem18: item18
              reserveItem19: item19
              reserveItem20: item20
    
    DeleteUnitRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - code
            type: object
            pattern: org.UnitModel
            properties:
              id:
                description: |
                  削除対象組織のID<br>
                  *「組織作成API」または「組織参照API」で取得した値を指定
                type: integer
                example: 999
              code:
                description: 削除対象組織のコード
                type: string
                example: unit02
              criterionDate:
                description: |
                  基準日<br>
                  *nullの場合は現在日
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-10-31 00:00:00 JST
    
    DisableUnitRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.UnitModel
            properties:
              id:
                description: |
                  適用終了対象組織のID<br>
                  *「組織作成API」または「組織参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: |
                  適用終了日<br>
                  *null の場合は 2060/12/31
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    AddSectionRoleRequest:
      content:
        application/json:
          schema:
            required:
              - code
              - name
            allOf:
              - $ref: "#/components/schemas/AddSectionRoleRequest"
          example:
            code: srole01
            importCode: srole01
            name: 課長
            explanation: 備考
            folderCode: 
            rank: 1
    
    FindSectionRoleRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindSectionRoleRequest"
          example:
            condition:
              code: srole01
              name: 
              userCode: 
              unitCode: 
              columnValueConditionList:
                entries:
                  - column: RANK
                    compareOperatorType: GREATER_THAN
                    value: 0
                logicalOperator: AND
              criterionDate: 2024-10-31 00:00:00 JST
    
    UpdateSectionRoleRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - code
              - name
            type: object
            properties:
              id:
                description: |
                  更新対象セクションロールのID<br>
                  *「セクションロール作成API」または「セクションロール参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddSectionRoleRequest"
          example:
            id: 999
            code: srole01
            importCode: srole01
            name: 課長
            explanation: 備考
            folderCode: 
            rank: 1
    
    DeleteSectionRoleRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.SectionRoleModel
            properties:
              id:
                description: |
                  削除対象セクションロールのID<br>
                  *「セクションロール作成API」または「セクションロール参照API」で取得した値を指定
                type: integer
                example: 999
    
    AddSectionRoleGroupRequest:
      content:
        application/json:
          schema:
            required:
              - code
              - name
            allOf:
              - $ref: "#/components/schemas/AddSectionRoleGroupRequest"
          example:
            code: srolegroup01
            name: 取締役
            sortNo: 1
            explanation: 説明
            roleCodeList:
              entries:
                - code: srole01
                - code: srole02
    
    FindSectionRoleGroupRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindSectionRoleGroupRequest"
          example:
            condition:
              code: srole01
              name: 
              roleCode: 
              columnValueConditionList:
                entries:
                  - column: SectionRoleCode
                    compareOperatorType: EQUAL
                    value: srole01
                logicalOperator: AND
    
    UpdateSectionRoleGroupRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - code
              - name
            type: object
            properties:
              id:
                description: |
                  更新対象セクションロールグループのID<br>
                  *「セクションロールグループ作成API」または「セクションロールグループ参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddSectionRoleGroupRequest"
          example:
            id: 999
            code: srolegroup01
            name: 取締役
            sortNo: 1
            explanation: 説明
            roleCodeList:
              entries:
                - code: srole01
                - code: srole02
    
    DeleteSectionRoleGroupRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.SectionRoleGroupModel
            properties:
              id:
                description: |
                  削除対象セクションロールグループのID<br>
                  *「セクションロールグループ作成API」または「セクションロールグループ参照API」で取得した値を指定
                type: integer
                example: 999
    
    AddUnitAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - unitCode
              - userCode
            allOf:
              - $ref: "#/components/schemas/AddUnitAppointmentRequest"
          example:
            unitCode: unit01
            userCode: user01
            sectionRoleCode: srole01
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    FindUnitAppointmentRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUnitAppointmentRequest"
          example:
            condition:
              userCode: user01
              unitCode: unit01 
              unitDirection: ESCALATE
              sectionRoleCode: srole01 
              isMainUnit: false
              columnValueConditionList:
                entries:
                  - column: UserName
                    compareOperatorType: LIKE
                    value: 寺崎
                logicalOperator: AND
              criterionDate: 2024-10-31 00:00:00 JST
    
    UpdateUnitAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - unitCode
              - userCode
            allOf:
              - $ref: "#/components/schemas/UpdateUnitAppointmentRequest"
          example:
            id: 999
            unitCode: unit01
            userCode: user01
            sectionRoleCode: srole01
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    DeleteUnitAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.UnitAppointmentModel
            properties:
              id:
                description: |
                  削除対象組織所属のID<br>
                  *「組織所属作成API」または「組織所属参照API」で取得した値を指定
                type: integer
                example: 999
              criterionDate:
                description: |
                  削除用基準日<br>
                  *null の場合は現在日
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-10-31 00:00:00 JST
    
    DisableUnitAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.UnitAppointmentModel
            properties:
              id:
                description: |
                  適用終了対象組織所属のID<br>
                  *「組織所属作成API」または「組織所属参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: |
                  適用終了日<br>
                  *null の場合は適用終了日を組織の適用終了日とユーザーの適用終了日のうち早い方の日付に設定
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    AddProxyApplyAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - principalUserCode
              - proxyUserCode
            allOf:
              - $ref: "#/components/schemas/AddProxyApplyAppointmentRequest"
          example:
            principalUserCode: user01
            principalUnitCode: unit01
            proxyUserCode: user02
            targetFormList:
              entries:
                - formCode: form01
            targetRuleList:
              entries:
                - ruleCode: rule01
            isDisplayCreateMenu: true
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    FindProxyApplyAppointmentRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindProxyApplyAppointmentRequest"
          example:
            condition:
              principalUnitCode: unit01
              principalUserCode: user01
              proxyUserCode: user02
              targetFormCode: form01
              targetRuleCode: rule01
              criterionDate: 2024-10-31 00:00:00 JST
              isDisplayCreateMenu: true
    
    UpdateProxyApplyAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - principalUserCode
              - proxyUserCode
            type: object
            properties:
              id:
                description: |
                  更新対象代理申請のID<br>
                  *「代理申請作成API」または「代理申請参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddProxyApplyAppointmentRequest"
          example:
            id: 999
            principalUserCode: user01
            principalUnitCode: unit01
            proxyUserCode: user02
            targetFormList:
              entries:
                - formCode: form01
            targetRuleList:
              entries:
                - ruleCode: rule01
            isDisplayCreateMenu: true
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    DeleteProxyApplyAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.ProxyApplicationAppointmentModel
            properties:
              id:
                description: |
                  削除対象代理申請のID<br>
                  *「代理申請作成API」または「代理申請参照API」で取得した値を指定
                type: integer
                example: 999
    
    DisableProxyApplyAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.ProxyApplicationAppointmentModel
            properties:
              id:
                description: |
                  適用終了対象代理申請のID<br>
                  *「代理申請作成API」または「代理申請参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: |
                  適用終了日<br>
                  *null の場合は 2060/12/31 に設定
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    AddProxyAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - principalUserCode
              - proxyUserCode
            allOf:
              - $ref: "#/components/schemas/AddProxyAppointmentRequest"
          example:
            principalUserCode: user01
            principalUnitCode: unit01
            proxyUserCode: user02
            targetFormList:
              entries:
                - formCode: form01
            targetRuleList:
              entries:
                - ruleCode: rule01
            isSendNotification: true
            isDisplayTodoMenu: true
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    FindProxyAppointmentRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindProxyAppointmentRequest"
          example:
            condition:
              principalUnitCode: unit01
              principalUserCode: user01
              proxyUserCode: user02
              targetFormCode: form01
              targetRuleCode: rule01
              criterionDate: 2024-10-31 00:00:00 JST
              isSendNotification: true
              isDisplayTodoMenu: true
    
    UpdateProxyAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - principalUserCode
              - proxyUserCode
            type: object
            properties:
              id:
                description: |
                  更新対象代理承認のID<br>
                  *「代理承認作成API」または「代理承認参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddProxyAppointmentRequest"
          example:
            id: 999
            principalUserCode: user01
            principalUnitCode: unit01
            proxyUserCode: user02
            targetFormList:
              entries:
                - formCode: form01
            targetRuleList:
              entries:
                - ruleCode: rule01
            isSendNotification: true
            isDisplayTodoMenu: true
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    DeleteProxyAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.ProxyAppointmentModel
            properties:
              id:
                description: |
                  削除対象代理承認のID<br>
                  *「代理承認作成API」または「代理承認参照API」で取得した値を指定
                type: integer
                example: 999
    
    DisableProxyAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.ProxyAppointmentModel
            properties:
              id:
                description: |
                  適用終了対象代理承認のID<br>
                  *「代理承認作成API」または「代理承認参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: |
                  適用終了日<br>
                  *null の場合は 2060/12/31 に設定
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    AddDelegationAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - fromUserCode
              - toUserCode
            allOf:
              - $ref: "#/components/schemas/AddDelegationAppointmentRequest"
          example:
            fromUserCode: user01
            fromUnitCode: unit01
            toUserCode: user02
            targetFormList:
              entries:
                - formCode: form01
            targetRuleList:
              entries:
                - ruleCode: rule01
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            targetUnitPolicy: FROM
            criterionDate: 2024-10-31 00:00:00 JST
    
    FindDelegationAppointmentRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindDelegationAppointmentRequest"
          example:
            condition:
              fromUnitCode: unit01
              fromUserCode: user01
              toUserCode: user02
              targetFormCode: form01
              targetRuleCode: rule01
              criterionDate: 2024-10-31 00:00:00 JST
    
    UpdateDelegationAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - fromUserCode
              - toUserCode
            type: object
            properties:
              id:
                description: |
                  更新対象権限委譲のID<br>
                  *「権限委譲作成API」または「権限委譲参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddDelegationAppointmentRequest"
          example:
            id: 999
            fromUserCode: user01
            fromUnitCode: unit01
            toUserCode: user02
            targetFormList:
              entries:
                - formCode: form01
            targetRuleList:
              entries:
                - ruleCode: rule01
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            targetUnitPolicy: FROM
            criterionDate: 2024-10-31 00:00:00 JST
    
    DeleteDelegationAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.DelegationAppointmentModel
            properties:
              id:
                description: |
                  削除対象権限委譲のID<br>
                  *「権限委譲作成API」または「権限委譲参照API」で取得した値を指定
                type: integer
                example: 999
    
    DisableDelegationAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.DelegationAppointmentModel
            properties:
              id:
                description: |
                  適用終了対象権限委譲のID<br>
                  *「権限委譲作成API」または「権限委譲参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: |
                  適用終了日<br>
                  *null の場合は 2060/12/31 に設定
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    AddDeprivationAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - userCode
            allOf:
              - $ref: "#/components/schemas/AddDeprivationAppointmentRequest"
          example:
            userCode: user01
            targetFormList:
              entries:
                - formCode: form01
            targetRuleList:
              entries:
                - ruleCode: rule01
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    FindDeprivationAppointmentRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindDeprivationAppointmentRequest"
          example:
            condition:
              userCode: user01
              targetFormCode: form01
              targetRuleCode: rule01
              criterionDate: 2024-10-31 00:00:00 JST
    
    UpdateDeprivationAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - userCode
            type: object
            properties:
              id:
                description: |
                  更新対象引上げ権限のID<br>
                  *「引上げ権限作成API」または「引上げ権限参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddDeprivationAppointmentRequest"
          example:
            id: 999
            userCode: user01
            targetFormList:
              entries:
                - formCode: form01
            targetRuleList:
              entries:
                - ruleCode: rule01
            availableDateFrom: 1900-01-01 00:00:00 JST
            avalableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    DeleteDeprivationAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.DeprivationAppointmentModel
            properties:
              id:
                description: |
                  削除対象引上げ権限のID<br>
                  *「引上げ権限作成API」または「引上げ権限参照API」で取得した値を指定
                type: integer
                example: 999
    
    DisableDeprivationAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.DeprivationAppointmentModel
            properties:
              id:
                description: |
                  適用終了対象引上げ権限のID<br>
                  *「引上げ権限作成API」または「引上げ権限参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: |
                  適用終了日<br>
                  *null の場合は 2060/12/31 に設定
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    AddPrivateRoleRequest:
      content:
        application/json:
          schema:
            required:
              - code
              - name
              - folderCode
            allOf:
              - $ref: "#/components/schemas/AddPrivateRoleRequest"
          example:
            code: prole01
            importCode: prole01
            name: プライベートロール
            explanation: プライベートロール
            folderCode: proleFolder
            isWarnIfCandidateNotAssigned: false
            candidateList:
              entries:
                - type: USER
                  userCode: user01
                - type: ROLE
                  roleCode: srole01
                  roletype: SECTION
            guidance:
              subject: 件名
              text: 本文
    
    FindPrivateRoleRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindPrivateRoleRequest"
          example:
            condition:
              code: prole01
              name: プライベートロール
              columnValueConditionList: 
                entries:
                  - column: Name
                    compareOperator: LIKE
                    value: プライベート
                logicalOperator: AND
    
    UpdatePrivateRoleRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - code
              - name
              - folderCode
            type: object
            properties:
              id:
                description: |
                  更新対象プライベートロールのID<br>
                  *「プライベートロール作成API」または「プライベートロール参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddPrivateRoleRequest"
          example:
            id: 999
            code: prole01
            importCode: prole01
            name: プライベートロール
            explanation: プライベートロール
            folderCode: proleFolder
            isWarnIfCandidateNotAssigned: false
            candidateList:
              entries:
                - type: USER
                  userCode: user01
                - type: ROLE
                  roleCode: srole01
                  roletype: SECTION
            guidance:
              subject: 件名
              text: 本文
    
    DeletePrivateRoleRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.PrivateRoleModel
            properties:
              id:
                description: |
                  削除対象プライベートロールのID<br>
                  *「プライベートロール作成API」または「プライベートロール参照API」で取得した値を指定
                type: integer
                example: 999
    
    AddPrivateRoleAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - userCode
              - privateRoleCode
              - candidateCode
            allOf:
              - $ref: "#/components/schemas/AddPrivateRoleAppointmentRequest"
          example:
            userCode: user01
            privateRoleCode: prole01
            candidateCode: user02
            availableDateFrom: 1900-01-01 00:00:00 JST
            availableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    FindPrivateRoleAppointmentRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindPrivateRoleAppointmentRequest"
          example:
            condition:
              userCode: user01
              roleCode: prole01
              candidateCode: user02
              columnValueConditionList:
                entries:
                  - column: CandidateCode
                    compareOperator: LIKE
                    value: u
                logicalOperator: AND
              criterionDate: 2024-10-31 00:00:00 JST
    
    UpdatePrivateRoleAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - userCode
              - privateRoleCode
              - candidateCode
            allOf:
              - $ref: "#/components/schemas/UpdatePrivateRoleAppointmentRequest"
          example:
            id: 999
            userCode: user01
            privateRoleCode: prole01
            candidateCode: user02
            availableDateFrom: 1900-01-01 00:00:00 JST
            availableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    DeletePrivateRoleAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.PrivateRoleAppointmentModel
            properties:
              id:
                description: |
                  削除対象プライベートロール所属のID<br>
                  *「プライベートロール所属作成API」または「プライベートロール所属参照API」で取得した値を指定
                type: integer
                example: 999
    
    DisablePrivateRoleAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.PrivateRoleAppointmentModel
            properties:
              id:
                description: |
                  適用終了対象プライベートロール所属のID<br>
                  *「プライベートロール所属作成API」または「プライベートロール所属参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: |
                  適用終了日<br>
                  *null の場合は 2060/12/31 に設定
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    AddUniversalRoleRequest:
      content:
        application/json:
          schema:
            required:
              - code
              - name
              - folderCode
            allOf:
              - $ref: "#/components/schemas/AddUniversalRoleRequest"
          example:
            code: urole01
            importCode: urole01
            name: ユニバーサルロール
            explanation: ユニバーサルロール
            folderCode: 
    
    FindUniversalRoleRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUniversalRoleRequest"
          example:
            condition:
              code: urole01
              name: ユニバーサルロール
              columnValueConditionList: 
                entries:
                  - column: Name
                    ompareOperator: LIKE
                    value: ユニバーサル
                logicalOperator: AND
    
    UpdateUniversalRoleRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - code
              - name
              - folderCode
            type: object
            properties:
              id:
                description: |
                  更新対象ユニバーサルロールのID<br>
                  *「ユニバーサルロール作成API」または「ユニバーサルロール参照API」で取得した値を指定
                type: integer
            allOf:
              - $ref: "#/components/schemas/AddUniversalRoleRequest"
          example:
            id: 999
            code: urole01
            importCode: urole01
            name: ユニバーサルロール
            explanation: ユニバーサルロール
            folderCode: 
    
    DeleteUniversalRoleRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.UniversalRoleModel
            properties:
              id:
                description: |
                  削除対象ユニバーサルロールのID<br>
                  *「ユニバーサルロール作成API」または「ユニバーサルロール参照API」で取得した値を指定
                type: integer
                example: 999
    
    AddUniversalRoleAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - userCode
              - universalRoleCode
            allOf:
              - $ref: "#/components/schemas/AddUniversalRoleAppointmentRequest"
          example:
            userCode: user01
            universalRoleCode: urole01
            availableDateFrom: 1900-01-01 00:00:00 JST
            availableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    FindUniversalRoleAppointmentRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUniversalRoleAppointmentRequest"
          example:
            condition:
              userCode: user01
              roleCode: urole01
              columnValueConditionList:
                entries:
                  - column: UserName
                    ompareOperator: LIKE
                    value: u
                logicalOperator: AND
              criterionDate: 2024-10-31 00:00:00 JST
    
    UpdateUniversalRoleAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
              - userCode
              - universalRoleCode
            type: object
            pattern: org.UniversalRoleAppointmentModel
            properties:
              id:
                description: |
                  更新対象ユニバーサルロール所属のID<br>
                  *「ユニバーサルロール所属作成API」または「ユニバーサルロール所属参照API」で取得した値を指定
                type: integer
              userCode:
                description: |
                  ユーザーコード<br>
                  *変更不可
                type: string
              universalRoleCode:
                description: |
                  ユニバーサルロールコード<br>
                  *変更不可
                type: string
              availableDateFrom:
                description: 適用開始日
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
              availableDateTo:
                description: 適用終了日
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
              criterionDate:
                description: 基準日
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
          example:
            id: 999
            userCode: user01
            universalRoleCode: urole01
            availableDateFrom: 1900-01-01 00:00:00 JST
            availableDateTo: 2060-12-31 00:00:00 JST
            criterionDate: 2024-10-31 00:00:00 JST
    
    DeleteUniversalRoleAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.UniversalRoleAppointmentModel
            properties:
              id:
                description: |
                  削除対象ユニバーサルロール所属のID<br>
                  *「ユニバーサルロール所属作成API」または「ユニバーサルロール所属参照API」で取得した値を指定
                type: integer
                example: 999
    
    DisableUniversalRoleAppointmentRequest:
      content:
        application/json:
          schema:
            required:
              - id
            type: object
            pattern: org.UniversalRoleAppointmentModel
            properties:
              id:
                description: |
                  適用終了対象ユニバーサルロール所属のID<br>
                  *「ユニバーサルロール所属作成API」または「ユニバーサルロール所属参照API」で取得した値を指定
                type: integer
                example: 999
              availableDateTo:
                description: |
                  適用終了日<br>
                  *null の場合は 2060/12/31 に設定
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-12-31 00:00:00 JST
    
    ImportTinyUserMasterRequest:
      content:
        application/json:
          schema:
            required:
              - schemaName
              - table
            type: object
            pattern: usermaster.importUserMasterRequestModel
            properties:
              schemaName:
                description: |
                  スキーマ名<br>
                  *外部マスタのスキーマ名(初期値：agileworks_user)
                type: string
                example: agileworks_user
              strategy:
                description: |
                  取込形式<br>
                  FULLSET：全件取込<br>
                  SUBSET：差分取込
                example: FULLSET
              table:
                description: テーブル名
                type: string
                example: sample$aw
              data:
                description: |
                  CSVデータ<br>
                  *文字コードはUTF-8固定
                type: string
                example: title1,title2,title3
    
    ExportUserMasterRequest:
      content:
        application/json:
          schema:
            required:
              - code
            type: object
            pattern: usermaster.ExportUserMasterRequestModel
            properties:
              code:
                description: コード
                type: string
                example: sample
    
    ImportUserMasterRequest:
      content:
        application/json:
          schema:
            required:
              - schemaName
              - table
            type: object
            pattern: usermaster.importUserMasterRequestModel
            properties:
              schemaName:
                description: |
                  スキーマ名<br>
                  *外部マスタのスキーマ名(初期値：agileworks_user、省略可)
                type: string
                example: agileworks_user
              strategy:
                description: |
                  取込形式<br>
                  FULLSET：全件取込<br>
                  SUBSET：差分取込<br>
                  *FULLSETのみ対応し、SUBSETを指定してもFULLSETとしてインポートする
                example: FULLSET
              table:
                description: テーブル名
                type: string
                example: sample$aw
              data:
                description: |
                  CSVデータ<br>
                  *文字コードはUTF-8固定
                type: string
                example: title1,title2,title3
    
    FindProjectRequest:
      content:
        application/json:
          schema:
            required:
              - userCode
              - content
            type: object
            pattern: site.FindProjectRequestModel
            properties:
              userCode:
                description: ユーザーコード
                type: string
                example: user01
              content:
                description: |
                  コンテンツ<br>
                  *FormMan
    
    ListFormRequest:
      content:
        application/json:
          schema:
            required:
              - criterionDate
            type: object
            pattern: form.ListFormRequestModel
            properties:
              criterionDate:
                description: 基準日
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-10-31 00:00:00 JST
    
    FindFormDefinitionRequest:
      content:
        application/json:
          schema:
            required:
              - formCode
            type: object
            pattern: form.findFormDefinitionRequestModel
            properties:
              formCode:
                description: フォームコード
                type: string
                example: form01
              ruleCode:
                description: |
                  ルールコード<br>
                  *未指定の場合は、レスポンスの項目ルールは空。
                type: string
                example: rule01
              criterionDate:
                description: |
                  基準日<br>
                  *未指定の場合は、当日日付でレスポンスの」回付ルール情報を取得
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-10-31 00:00:00 JST
    
    ListPublicFolderInfoRequest:
      content:
        application/json:
          schema:
            required:
              - userCode
            type: object
            pattern: publication.ListPublicFolderInfoRequestModel
            properties:
              userCode:
                description: ユーザーコード
                type: string
                example: user01
              criterionDate:
                description: |
                  基準日<br>
                  *未指定の場合は現在日付
                type: string
                pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                example: 2024-10-31 00:00:00 JST
    
  # -----------------------------------------------
  # レスポンス components/responses
  # -----------------------------------------------

  responses:
    ErrorResponses400:
      description: "Error response(Bad Request)"
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                example: 400
              error_message:
                type: string
                example: "{エラーメッセージ}"

    ErrorResponses401:
      description: "Error response(Unauthorized)"
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                example: 401
              error_message:
                type: string
                example: "{エラーメッセージ}"

    ErrorResponses404:
      description: "Error response(Not Found)"
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                example: 404
              error_message:
                type: string
                example: "{エラーメッセージ}"

    ErrorResponses500:
      description: "Error response(Internal Server Error)"
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                example: 500
              error_message:
                type: string
                example: "{エラーメッセージ}"

    ErrorResponses503:
      description: "Error response(Service unavailable)"
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                example: 503
              error_message:
                type: string
                example: "{エラーメッセージ}"
                
    ResultStatusResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            type: object
            pattern: common.ResponseModel
            properties:
              resultStatus:
                allOf:
                  - $ref: "#/components/schemas/resultStatus"
          examples:
            正常:
              value:
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              value: 
               resultStatus:
                 status: FAIL
                 messageList: 
                   entries: []
                 text: 公開APIの実行時にエラーが発生しました。
                 code: APIPAP_W0003

    # --------------------------------------------------------------------------------------------------

    GetDocHeaderResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/GetDocHeaderResponse"
          examples:
            正常:
              value:
                docHeader:
                  owner:
                    type: "UNIT"
                    code: unit01
                  id: 999
                  version: 1.0.0
                  listNames:
                    listNames1: 
                    listNames2: 
                    listNames3: 
                    listNames4: 
                    listNames5: 
                    listNames6: 
                    listNames7: 
                    listNames8: 
                    listNames9: 
                    listNames10: 
                    listNames11: 
                    listNames12: 
                    listNames13: 
                    listNames14: 
                    listNames15: 
                    listNames16: 
                    listNames17: 
                    listNames18: 
                    listNames19: 
                    listNames20: 
                  formCode: form01
                  criterionDate: 2024-10-31 00:00:00 JST
                  adminNo: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                docHeader:
                  owner:
                    type: 
                    code: 
                  id: 
                  version: 
                  listNames:
                    listNames1: 
                    listNames2: 
                    listNames3: 
                    listNames4: 
                    listNames5: 
                    listNames6: 
                    listNames7: 
                    listNames8: 
                    listNames9: 
                    listNames10: 
                    listNames11: 
                    listNames12: 
                    listNames13: 
                    listNames14: 
                    listNames15: 
                    listNames16: 
                    listNames17: 
                    listNames18: 
                    listNames19: 
                    listNames20: 
                  formCode: 
                  criterionDate: 
                  adminNo: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: 指定された書類は存在しません。
                        code: AWPDOC0004
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DocResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DocResponse"
          examples:
            正常:
              value:
                doc:
                  docData:
                    entryList:
                      entries:
                        - name: 文字フィールド1
                          fieldType: TEXTFIELD
                          fieldId: textfield1
                          dataType: STRING
                          dataValue:
                            value: update
                            entryList:
                              entries: []
                        - name: 整数フィールド1
                          fieldType: INTEGERFIELD
                          fieldId: integerfield1
                          dataType: INT
                          dataValue:
                            value: 11
                            entryList:
                              entries: []
                    publicFormId: 222
                    owner:
                      type: UNIT
                      code: unit01
                    id: 999
                    version: 1.0.0
                    listNames:
                      listNames1: 
                      listNames2: 
                      listNames3: 
                      listNames4: 
                      listNames5: 
                      listNames6: 
                      listNames7: 
                      listNames8: 
                      listNames9: 
                      listNames10: 
                      listNames11: 
                      listNames12: 
                      listNames13: 
                      listNames14: 
                      listNames15: 
                      listNames16: 
                      listNames17: 
                      listNames18: 
                      listNames19: 
                      listNames20: 
                    formCode: form01
                    criterionDate: 2024-10-31 00:00:00 JST
                    adminNo: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                doc:
                  docData:
                    entryList:
                      entries: []
                  publicFormId: 
                  owner:
                    type: 
                    code: 
                  id: 
                  version: 
                  listNames:
                    listNames1: 
                    listNames2: 
                    listNames3: 
                    listNames4: 
                    listNames5: 
                    listNames6: 
                    listNames7: 
                    listNames8: 
                    listNames9: 
                    listNames10: 
                    listNames11: 
                    listNames12: 
                    listNames13: 
                    listNames14: 
                    listNames15: 
                    listNames16: 
                    listNames17: 
                    listNames18: 
                    listNames19: 
                    listNames20: 
                  formCode: 
                  criterionDate: 
                  adminNo: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    AddDocResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DocResponse"
          examples:
            正常:
              value:
                doc:
                  docData:
                    entryList:
                      entries:
                        - name: 文字フィールド1
                          fieldType: TEXTFIELD
                          fieldId: textfield1
                          dataType: STRING
                          dataValue:
                            value: 
                            entryList:
                              entries: []
                        - name: 整数フィールド1
                          fieldType: INTEGERFIELD
                          fieldId: integerfield1
                          dataType: INT
                          dataValue:
                            value: 
                            entryList:
                              entries: []
                    publicFormId: 222
                    owner:
                      type: 
                      code: 
                    id: 999
                    version: 0.0.0
                    listNames:
                      listNames1: 
                      listNames2: 
                      listNames3: 
                      listNames4: 
                      listNames5: 
                      listNames6: 
                      listNames7: 
                      listNames8: 
                      listNames9: 
                      listNames10: 
                      listNames11: 
                      listNames12: 
                      listNames13: 
                      listNames14: 
                      listNames15: 
                      listNames16: 
                      listNames17: 
                      listNames18: 
                      listNames19: 
                      listNames20: 
                    formCode: form01
                    criterionDate: 
                    adminNo: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータ / リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    SelectDocResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SelectDocResponse"
          examples:
            正常:
              value:
                resultSet:
                  recordList:
                    entries:
                      - index: 
                        entryList:
                          entries:
                            - name: 
                              value: 11
                            - name: textfield1
                              value: update
                      - index: 
                        entryList:
                          entries:
                            - name:
                              value: 12
                            - name: textfield1
                              value: delete
                  fieldList:
                    entries:
                      - name: DOC_ID
                        type: LONG
                      - name: textfield1
                        type: STRING
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                resultSet:
                  recordList:
                    entries: []
                  fieldList:
                    entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    GetDocPdfResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            description: |
              PDFファイルの内容<br>
              *バイナリデータ
          examples:
            正常:
              value:
                "{PDFファイルの内容(バイナリデータ)}"
            パラメータが不正:
              value:
                docPdf:
                  file:
                    name: 
                    key:
                    id: 
                    size: 
                    contentType: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListDocCommentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListDocCommentResponse"
          examples:
            正常:
              value:
                docCommentList:
                  entries:
                    - id: 9999
                      comment: comment
                      ruleStepHeader:
                        name: 申請
                        type: APPLY
                        index: 1
                        code: STEP1
                      effectorType: 
                      operatorInfo:
                        registrationDate: 2024-10-31 00:00:00 JST
                        modifyDate: 2024-10-31 12:00:00 JST
                        registrantOfShared:
                          userName: 
                          unitName: 
                          unitCode: 
                          roleName: 
                          userCode: 
                          roleCode: 
                        modifierOfShared:
                          userName: 
                          unitName: 
                          unitCode: 
                          roleName: 
                          userCode: 
                          roleCode: 
                        modifier:
                          userName: ユーザー01
                          unitName: 組織01
                          unitCode: unit01
                          roleName: 
                          userCode: user01
                          roleCode: 
                        registrant:
                          userName: ユーザー01
                          unitName: 組織01
                          unitCode: unit01
                          roleName: 
                          userCode: user01
                          roleCode: 
                      docId: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                docCommentList:
                  entries: [] 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    AddDocCommentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/AddDocCommentResponse"
          examples:
            正常:
              value:
                docComment:
                  id: 9999
                  comment: comment
                  ruleStepHeader:
                    name: 申請
                    type: APPLY
                    index: 1
                    code: STEP1
                  effectorType: 
                  operatorInfo:
                    registrationDate: 2024-10-31 00:00:00 JST
                    modifyDate: 2024-10-31 12:00:00 JST
                    registrantOfShared:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    modifierOfShared:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    modifier:
                      userName: ユーザー01
                      unitName: 組織01
                      unitCode: unit01
                      roleName: 
                      userCode: user01
                      roleCode: 
                    registrant:
                      userName: ユーザー01
                      unitName: 組織01
                      unitCode: unit01
                      roleName: 
                      userCode: user01
                      roleCode: 
                  docId: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                docComment:
                  id: 
                  comment: 
                  ruleStepHeader:
                    name: 
                    type: 
                    index: 
                    code: 
                  effectorType: 
                  operatorInfo:
                    registrationDate: 
                    modifyDate: 
                    registrantOfShared:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    modifierOfShared:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    modifier:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    registrant: 
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                  docId: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DocAttachmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DocAttachmentResponse"
          examples:
            正常:
              value:
                docAttachment:
                  name: 見積書
                  id: 9999
                  type: URL
                  size: 
                  path: 
                  explanation: 
                  ruleStepHeader:
                    name: 
                    type: 
                    index: 
                    code: 
                  storageFile:
                    name: 
                    key: 
                    id: 
                    size: 
                    contentType: 
                  url: https://ateled.jp/AgileWorks/Broker/Picus
                  operationInfo:
                    registrationDate: 2024-10-31 00:00:00 JST
                    modifyDate: 2024-10-31 00:00:00 JST
                    registrantOfShared:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    modifierOfShared:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    modifier:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    registrant: 
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                  docId: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                docAttachment:
                  name: 見積書
                  id: 
                  type: 
                  size: 
                  path: 
                  explanation: 
                  ruleStepHeader:
                    name: 
                    type: 
                    index: 
                    code: 
                  storageFile:
                    name: 
                    key: 
                    id: 
                    size: 
                    contentType: 
                  url: 
                  operationInfo:
                    registrationDate: 
                    modifyDate: 
                    registrantOfShared:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    modifierOfShared:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    modifier:
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                    registrant: 
                      userName: 
                      unitName: 
                      unitCode: 
                      roleName: 
                      userCode: 
                      roleCode: 
                  docId: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListDocAttachmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListDocAttachmentResponse"
          examples:
            正常:
              value:
                docAttachmentList:
                  entries:
                    - name: 見積書
                      id: 9999
                      type: URL
                      size: 
                      path: 
                      explanation: 
                      ruleStepHeader:
                        name: 
                        type: 
                        index: 
                        code: 
                      storageFile:
                        name: 
                        key: 
                        id: 
                        size: 
                        contentType: 
                      url: https://ateled.jp/AgileWorks/Broker/Picus
                      operationInfo:
                        registrationDate: 2024-10-31 00:00:00 JST
                        modifyDate: 2024-10-31 00:00:00 JST
                        registrantOfShared:
                          userName: 
                          unitName: 
                          unitCode: 
                          roleName: 
                          userCode: 
                          roleCode: 
                        modifierOfShared:
                          userName: 
                          unitName: 
                          unitCode: 
                          roleName: 
                          userCode: 
                          roleCode: 
                        modifier:
                          userName: 
                          unitName: 
                          unitCode: 
                          roleName: 
                          userCode: 
                          roleCode: 
                        registrant: 
                          userName: 
                          unitName: 
                          unitCode: 
                          roleName: 
                          userCode: 
                          roleCode: 
                      docId: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                docAttachmentList:
                  entries: []
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    GetDocReferenceeResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            type: object
            pattern: doc.DocReferenceeResponseModel
            allOf:
              - $ref: "#/components/schemas/GetDocHeaderResponse"
          examples:
            正常:
              value:
                docHeader:
                  owner:
                    type: "UNIT"
                    code: unit01
                  id: 999
                  version: 1.0.0
                  listNames:
                    listNames1: 
                    listNames2: 
                    listNames3: 
                    listNames4: 
                    listNames5: 
                    listNames6: 
                    listNames7: 
                    listNames8: 
                    listNames9: 
                    listNames10: 
                    listNames11: 
                    listNames12: 
                    listNames13: 
                    listNames14: 
                    listNames15: 
                    listNames16: 
                    listNames17: 
                    listNames18: 
                    listNames19: 
                    listNames20: 
                  formCode: form01
                  criterionDate: 2024-10-31 00:00:00 JST
                  adminNo: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                docHeader:
                  owner:
                    type: 
                    code: 
                  id: 
                  version: 
                  listNames:
                    listNames1: 
                    listNames2: 
                    listNames3: 
                    listNames4: 
                    listNames5: 
                    listNames6: 
                    listNames7: 
                    listNames8: 
                    listNames9: 
                    listNames10: 
                    listNames11: 
                    listNames12: 
                    listNames13: 
                    listNames14: 
                    listNames15: 
                    listNames16: 
                    listNames17: 
                    listNames18: 
                    listNames19: 
                    listNames20: 
                  formCode: 
                  criterionDate: 
                  adminNo: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: 指定された書類は存在しません。
                        code: AWPDOC0004
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListDocReferencerResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListDocReferencerResponse"
          examples:
            正常:
              value:
                docHeaderList:
                  entries:
                    owner:
                      type: "UNIT"
                      code: unit01
                    id: 998
                    version: 1.0.1
                    listNames:
                      listNames1: 
                      listNames2: 
                      listNames3: 
                      listNames4: 
                      listNames5: 
                      listNames6: 
                      listNames7: 
                      listNames8: 
                      listNames9: 
                      listNames10: 
                      listNames11: 
                      listNames12: 
                      listNames13: 
                      listNames14: 
                      listNames15: 
                      listNames16: 
                      listNames17: 
                      listNames18: 
                      listNames19: 
                      listNames20: 
                    formCode: form01
                    criterionDate: 2024-10-31 00:00:00 JST
                    adminNo: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                docHeaderList:
                  entries:
                    owner:
                      type: 
                      code: 
                    id: 
                    version: 
                    listNames:
                      listNames1: 
                      listNames2: 
                      listNames3: 
                      listNames4: 
                      listNames5: 
                      listNames6: 
                      listNames7: 
                      listNames8: 
                      listNames9: 
                      listNames10: 
                      listNames11: 
                      listNames12: 
                      listNames13: 
                      listNames14: 
                      listNames15: 
                      listNames16: 
                      listNames17: 
                      listNames18: 
                      listNames19: 
                      listNames20: 
                    formCode: 
                    criterionDate: 
                    adminNo: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    TextHtmlResponses200:
      description: Successful response
      content:
        text/html: {}
        application/json:
          examples:
            リクエストが不正:
              value:
                html: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            存在しないパラメータを指定:
              $ref: "#/components/examples/response_errorRequest"
    
    CountResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            type: object
            pattern: common.CountResponseModel
            properties:
              count:
                description: 件数
                type: integer
              resultStatus:
                allOf:
                  - $ref: "#/components/schemas/resultStatus"
          examples:
            正常:
              value:
                count: 1
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                count: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    CountListWorkflowMessageResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            type: object
            pattern: workflow.CountListResponseModel
            properties:
              countList:
                description: 指定した回付情報の件数の一覧
                type: object
                pattern: workflow.CountListModel
                properties:
                  entries:
                    description: 書類情報
                    type: array
                    items:
                      type: object
                      pattern: workflow.CountModel
                      properties:
                        count:
                          description: 指定した回付情報の件数
                          type: integer
              resultStatus:
                allOf:
                  - $ref: "#/components/schemas/resultStatus"
          examples:
            正常:
              value:
                countList:
                  entries:
                    - count: 1
                    - count: 2
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                countList:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    SelectWorkflowMessageResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SelectWorkflowMessageResponse"
          examples:
            正常:
              value:
                resultSet:
                  fieldList:
                    entries:
                      - name: APPLY_UNIT_NAME
                        type: STRING
                      - name: APPLY_USER_NAME
                        type: STRING
                      - name: APPLY_DATE
                        type: DATETIME
                      - name: DOC_LISTNAME3
                        type: STRING
                      - name: FORM_NAME
                        type: STRING
                      - name: RULE_NAME
                        type: STRING
                      - name: FLOW_CURRENTSTEP_NAME
                        type: TEXT
                      - name: FLOW_STATUS
                        type: STRING
                      - name: DOC_ADMIN_NO
                        type: STRING
                      - name: DOC_ID
                        type: LONG
                      - name: DOC_EXIST_COMMENT
                        type: BOOLEAN
                      - name: DOC_EXIST_ATTACHMENT
                        type: BOOLEAN
                  recordList:
                    entries:
                      - index: 
                        entryList:
                          entries:
                            - name: ApplyUnitName
                              value: 組織
                            - name: ApplyUserName
                              value: user01
                            - name: ApplyDate
                              value: 2024-10-31 00:00:00 JST
                            - name: DocListName3
                              value: 
                            - name: FormName
                              value: フォーム
                            - name: RuleName
                              value: ルール
                            - name: FlowCurrentStepName
                              value: 承認
                            - name: FlowStatus
                              value: 回付中
                            - name: DocAdminNo
                              value: 
                            - name: DocId
                              value: 999
                            - name: DocExistComment
                              value: true
                            - name: DocExistAttachment
                              value: false
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                resultSet:
                  fieldList:
                    entries: []
                  recordList:
                    entries: []
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    GetWorkflowInfoResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/GetWorkflowInfoResponse"
          examples:
            正常:
              value:
                workflowInfo:
                  createOperator:
                    userName: 
                    userCode: 
                    roleCode: 
                    unitCode: 
                    unitName: 
                    roleName: 
                  currentRulesStepHeaderList:
                    entries:
                      - name: 承認
                        type: APPROVE
                        index: 2
                        code: STEP2
                  applyOperator:
                    userName: ユーザー１
                    userCode: user01
                    roleCode: 
                    unitCode: unit01
                    unitName: 組織１
                    roleName: 
                  formName: フォーム
                  criterionDate: 2024-10-31 00:00:00 JST
                  createDate: 2024-10-30 12:00:00 JST
                  lastOperator:
                    userName: ユーザー１
                    userCode: user01
                    roleCode: 
                    unitCode: unit01
                    unitName: 組織１
                    roleName: 
                  docId: 999
                  approvedDate: 
                  applyDate: 2024-10-30 13:00:00 JST
                  formCode: form01
                  workflowState: ACTIVE
                  proxyApplyOperator:
                    userName: 
                    userCode: 
                    roleCode: 
                    unitCode: 
                    unitName: 
                    roleName: 
                  ruleCode: rule01
                  ruleName: ルール１
                  lastOperateDate: 2024-10-30 13:00:00 JST 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                workflowInfo:
                  createOperator:
                    userName: 
                    userCode: 
                    roleCode: 
                    unitCode: 
                    unitName: 
                    roleName: 
                  currentRulesStepHeaderList:
                    entries: []
                  applyOperator:
                    userName: 
                    userCode: 
                    roleCode: 
                    unitCode: 
                    unitName: 
                    roleName: 
                  formName: 
                  criterionDate: 
                  createDate: 
                  lastOperator:
                    userName: 
                    userCode: 
                    roleCode: 
                    unitCode: 
                    unitName: 
                    roleName: 
                  docId: 
                  approvedDate: 
                  applyDate: 
                  formCode: 
                  workflowState: 
                  proxyApplyOperator:
                    userName: 
                    userCode: 
                    roleCode: 
                    unitCode: 
                    unitName: 
                    roleName: 
                  ruleCode: 
                  ruleName: 
                  lastOperateDate:  
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindWorkflowTaskResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindWorkflowTaskResponse"
          examples:
            正常:
              value:
                workflowTaskList:
                  entries:
                    - state: DONE
                      reserveItems:
                        reserveItem1: 
                        reserveItem2: 
                        reserveItem3: 
                        reserveItem4: 
                        reserveItem5: 
                        reserveItem6: 
                        reserveItem7: 
                        reserveItem8: 
                        reserveItem9: 
                        reserveItem10: 
                      operator:
                        userName: ユーザー１
                        userCode: user01
                        roleCode: 
                        unitCode: unit01
                        unitName: 組織１
                        roleName: 
                      ruleEffector:
                        name: 申請
                        type: APPLY
                      isProxy: false
                      effectDate: 2024-10-31 00:00:00 JST
                      deprivedRuleStepHeader:
                        name: 
                        type: 
                        index: 
                        code: 
                      ruleStepHeader:
                        name: 申請
                        type: APPLY
                        index: 1
                        code: STEP1
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                workflowTaskList:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListWorkflowJournalResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListWorkflowJournalResponse"
          examples:
            正常:
              value:
                workflowJournalList:
                  entries:
                    - comment: 
                      createDate: 2024-10-31 00:00:00 JST
                      leadTime: 9999
                      docId: 999
                      operator:
                        userName: ユーザー1
                        userCode: user01
                        roleCode: 
                        unitCode: unit01
                        unitName: 組織１
                        roleName: 
                      ruleEffector:
                        name: 申請
                        type: APPLY
                      ruleStepHeader:
                        name: 申請
                        type: APPLY
                        index: 1
                        code: STEP1
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                workflowJournalList:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListElectJournalResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListElectJournalResponse"
          examples:
            正常:
              value:
                electJournalList:
                  entries:
                    - createDate: 2024-10-31 00:00:00 JST
                      addedOperator:
                        userName: ユーザー1
                        userCode: user01
                        roleCode: 
                        unitCode: unit01
                        unitName: 組織１
                        roleName: 
                      actionType: ADD
                      eventType: ADMIN_SELECT
                      docId: 999
                      deletedOperator:
                        userName: 
                        userCode: 
                        roleCode: 
                        unitCode: 
                        unitName: 
                        roleName: 
                      ruleStepHeader:
                        name: 承認
                        type: APPROVE
                        index: 2
                        code: STEP2
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                electJournalList:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListShareJournalResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListShareJournalResponse"
          examples:
            正常:
              value:
                shareJournalList:
                  entries:
                    - createDate: 2024-10-31 00:00:00 JST
                      addedOperator:
                        userName: ユーザー2
                        userCode: user02
                        roleCode: 
                        unitCode: 
                        unitName: 
                        roleName: 
                      actionType: ADD
                      docId: 999
                      deletedOperator:
                        userName: 
                        userCode: 
                        roleCode: 
                        unitCode: 
                        unitName: 
                        roleName: 
                      sharedOperator:
                        userName: ユーザー1
                        userCode: user01
                        roleCode: 
                        unitCode: unit01
                        unitName: 組織１
                        roleName: 
                      workflowShareOperatorType: RECIVER
                      ruleStepHeader:
                        name: 承認
                        type: APPROVE
                        index: 2
                        code: STEP2
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                electJournalList:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    UserResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UserResponse"
          examples:
            正常:
              value:
                user:
                  name: 寺崎啓一
                  id: 999
                  displayLanguage: ja
                  localeName: ja
                  localizedName: ""
                  password: 
                  reserveItems:
                    reserveItem1: a
                    reserveItem2: b
                    reserveItem3: c
                    reserveItem4: d
                    reserveItem5: e
                    reserveItem6: f
                    reserveItem7: g
                    reserveItem8: h
                    reserveItem9: i
                    reserveItem10: j
                    reserveItem11: k
                    reserveItem12: l
                    reserveItem13: m
                    reserveItem14: n
                    reserveItem15: o
                    reserveItem16: p
                    reserveItem17: q
                    reserveItem18: r
                    reserveItem19: s
                    reserveItem20: t
                  validityDateTo: 2060-12-31 00:00:00 JST
                  loginId: user01
                  code: user01
                  kana: テラサキケイイチ
                  availableDateTo: 2060-12-31 00:00:00 JST
                  criterionDate: 2024-10-31 00:00:00 JST
                  stampName: 寺崎(啓)
                  mailAddress: user01@example.com
                  remarks: 備考
                  importCode: user01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  validityDateFrom: 1900-01-01 00:00:00 JST
                  isNeedStampImage: 
                  isForceChangePassword: true
                  isAccountLock: false
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                user:
                  name: 
                  id: 
                  displayLanguage: 
                  localeName: 
                  localizedName: 
                  password: 
                  reserveItems:
                    reserveItem1: 
                    reserveItem2: 
                    reserveItem3: 
                    reserveItem4: 
                    reserveItem5: 
                    reserveItem6: 
                    reserveItem7: 
                    reserveItem8: 
                    reserveItem9: 
                    reserveItem10: 
                    reserveItem11: 
                    reserveItem12: 
                    reserveItem13: 
                    reserveItem14: 
                    reserveItem15: 
                    reserveItem16: 
                    reserveItem17: 
                    reserveItem18: 
                    reserveItem19: 
                    reserveItem20: 
                  validityDateTo: 
                  loginId: 
                  code: 
                  kana: 
                  availableDateTo: 
                  criterionDate: 
                  stampName: 
                  mailAddress: 
                  remarks: 
                  importCode: 
                  availableDateFrom: 
                  validityDateFrom: 
                  isNeedStampImage: 
                  isForceChangePassword: 
                  isAccountLock: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindUserResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUserResponse"
          examples:
            正常:
              value:
                userList:
                  entries:
                    - name: 寺崎啓一
                      id: 999
                      displayLanguage: ja
                      localeName: ja
                      localizedName: ""
                      password: 
                      reserveItems:
                        reserveItem1: a
                        reserveItem2: b
                        reserveItem3: c
                        reserveItem4: d
                        reserveItem5: e
                        reserveItem6: f
                        reserveItem7: g
                        reserveItem8: h
                        reserveItem9: i
                        reserveItem10: j
                        reserveItem11: k
                        reserveItem12: l
                        reserveItem13: m
                        reserveItem14: n
                        reserveItem15: o
                        reserveItem16: p
                        reserveItem17: q
                        reserveItem18: r
                        reserveItem19: s
                        reserveItem20: t
                      validityDateTo: 2060-12-31 00:00:00 JST
                      loginId: user01
                      code: user01
                      kana: テラサキケイイチ
                      availableDateTo: 2060-12-31 00:00:00 JST
                      criterionDate: 2024-10-31 00:00:00 JST
                      stampName: 寺崎(啓)
                      mailAddress: user01@example.com
                      remarks: 備考
                      importCode: user01
                      availableDateFrom: 1900-01-01 00:00:00 JST
                      validityDateFrom: 1900-01-01 00:00:00 JST
                      isNeedStampImage: 
                      isForceChangePassword: true
                      isAccountLock: false
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                userList:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisableUserResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UserResponse"
          examples:
            正常:
              value:
                user:
                  name: 寺崎啓一
                  id: 999
                  displayLanguage: ja
                  localeName: ja
                  localizedName: ""
                  password: 
                  reserveItems:
                    reserveItem1: a
                    reserveItem2: b
                    reserveItem3: c
                    reserveItem4: d
                    reserveItem5: e
                    reserveItem6: f
                    reserveItem7: g
                    reserveItem8: h
                    reserveItem9: i
                    reserveItem10: j
                    reserveItem11: k
                    reserveItem12: l
                    reserveItem13: m
                    reserveItem14: n
                    reserveItem15: o
                    reserveItem16: p
                    reserveItem17: q
                    reserveItem18: r
                    reserveItem19: s
                    reserveItem20: t
                  validityDateTo: 2024-12-31 00:00:00 JST
                  loginId: user01
                  code: user01
                  kana: テラサキケイイチ
                  availableDateTo: 2024-12-31 00:00:00 JST
                  criterionDate: 2024-10-31 00:00:00 JST
                  stampName: 寺崎(啓)
                  mailAddress: user01@example.com
                  remarks: 備考
                  importCode: user01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  validityDateFrom: 1900-01-01 00:00:00 JST
                  isNeedStampImage: 
                  isForceChangePassword: true
                  isAccountLock: false
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                user:
                  name: 
                  id: 
                  displayLanguage: 
                  localeName: 
                  localizedName: 
                  password: 
                  reserveItems:
                    reserveItem1: 
                    reserveItem2: 
                    reserveItem3: 
                    reserveItem4: 
                    reserveItem5: 
                    reserveItem6: 
                    reserveItem7: 
                    reserveItem8: 
                    reserveItem9: 
                    reserveItem10: 
                    reserveItem11: 
                    reserveItem12: 
                    reserveItem13: 
                    reserveItem14: 
                    reserveItem15: 
                    reserveItem16: 
                    reserveItem17: 
                    reserveItem18: 
                    reserveItem19: 
                    reserveItem20: 
                  validityDateTo: 
                  loginId: 
                  code: 
                  kana: 
                  availableDateTo: 
                  criterionDate: 
                  stampName: 
                  mailAddress: 
                  remarks: 
                  importCode: 
                  availableDateFrom: 
                  validityDateFrom: 
                  isNeedStampImage: 
                  isForceChangePassword: 
                  isAccountLock: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    UnitResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UnitResponse"
          examples:
            正常:
              value:
                unit:
                  name: 組織2
                  id: 999
                  localeName: auto
                  localizedName: 組織2
                  officialName: 組織2正式名称
                  kana: ソシキ2セイシキメイショウ
                  code: unit02
                  reserveItems:
                    reserveItem1: item1
                    reserveItem2: item2
                    reserveItem3: item3
                    reserveItem4: item4
                    reserveItem5: item5
                    reserveItem6: item6
                    reserveItem7: item7
                    reserveItem8: item8
                    reserveItem9: item9
                    reserveItem10: item10
                    reserveItem11: item11
                    reserveItem12: item12
                    reserveItem13: item13
                    reserveItem14: item14
                    reserveItem15: item15
                    reserveItem16: item16
                    reserveItem17: item17
                    reserveItem18: item18
                    reserveItem19: item19
                    reserveItem20: item20
                  availableDateTo: 2060-12-31 00:00:00 JST
                  validityDateTo: 2060-12-31 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                  remarks: 備考
                  importCode: unit02
                  parentCode: unit01
                  validityDateFrom: 1900-01-01 00:00:00 JST
                  availableDateFrom: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                unit:
                  name: 
                  id: 
                  localeName: 
                  localizedName: 
                  officialName: 
                  kana: 
                  code: 
                  reserveItems:
                    reserveItem1: 
                    reserveItem2: 
                    reserveItem3: 
                    reserveItem4: 
                    reserveItem5: 
                    reserveItem6: 
                    reserveItem7: 
                    reserveItem8: 
                    reserveItem9: 
                    reserveItem10: 
                    reserveItem11: 
                    reserveItem12: 
                    reserveItem13: 
                    reserveItem14: 
                    reserveItem15: 
                    reserveItem16: 
                    reserveItem17: 
                    reserveItem18: 
                    reserveItem19: 
                    reserveItem20: 
                  availableDateTo: 
                  validityDateTo: 
                  criterionDate: 
                  remarks: 
                  importCode: 
                  parentCode: 
                  validityDateFrom: 
                  availableDateFrom: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindUnitResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUnitResponse"
          examples:
            正常:
              value:
                unitList:
                  entries:
                    - name: 組織2
                      id: 999
                      localeName: auto
                      localizedName: 組織2
                      officialName: 組織2正式名称
                      kana: ソシキ2セイシキメイショウ
                      code: unit02
                      reserveItems:
                        reserveItem1: item1
                        reserveItem2: item2
                        reserveItem3: item3
                        reserveItem4: item4
                        reserveItem5: item5
                        reserveItem6: item6
                        reserveItem7: item7
                        reserveItem8: item8
                        reserveItem9: item9
                        reserveItem10: item10
                        reserveItem11: item11
                        reserveItem12: item12
                        reserveItem13: item13
                        reserveItem14: item14
                        reserveItem15: item15
                        reserveItem16: item16
                        reserveItem17: item17
                        reserveItem18: item18
                        reserveItem19: item19
                        reserveItem20: item20
                      availableDateTo: 2060-12-31 00:00:00 JST
                      validityDateTo: 2060-12-31 00:00:00 JST
                      criterionDate: 1900-01-01 00:00:00 JST
                      remarks: 備考
                      importCode: unit02
                      parentCode: unit01
                      validityDateFrom: 1900-01-01 00:00:00 JST
                      availableDateFrom: 1900-01-01 00:00:00 JST
                  resultStatus: 
                    status: SUCCESS
                    messageList: 
                      entries: []
                    text: 
                    code: 
            パラメータが不正:
              value:
                unitList:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisableUnitResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UnitResponse"
          examples:
            正常:
              value:
                unit:
                  name: 組織2
                  id: 999
                  localeName: auto
                  localizedName: 組織2
                  officialName: 組織2正式名称
                  kana: ソシキ2セイシキメイショウ
                  code: unit02
                  reserveItems:
                    reserveItem1: item1
                    reserveItem2: item2
                    reserveItem3: item3
                    reserveItem4: item4
                    reserveItem5: item5
                    reserveItem6: item6
                    reserveItem7: item7
                    reserveItem8: item8
                    reserveItem9: item9
                    reserveItem10: item10
                    reserveItem11: item11
                    reserveItem12: item12
                    reserveItem13: item13
                    reserveItem14: item14
                    reserveItem15: item15
                    reserveItem16: item16
                    reserveItem17: item17
                    reserveItem18: item18
                    reserveItem19: item19
                    reserveItem20: item20
                  availableDateTo: 2024-12-31 00:00:00 JST
                  validityDateTo: 2024-12-31 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                  remarks: 備考
                  importCode: unit02
                  parentCode: unit01
                  validityDateFrom: 1900-01-01 00:00:00 JST
                  availableDateFrom: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                unit:
                  name: 
                  id: 
                  localeName: 
                  localizedName: 
                  officialName: 
                  kana: 
                  code: 
                  reserveItems:
                    reserveItem1: 
                    reserveItem2: 
                    reserveItem3: 
                    reserveItem4: 
                    reserveItem5: 
                    reserveItem6: 
                    reserveItem7: 
                    reserveItem8: 
                    reserveItem9: 
                    reserveItem10: 
                    reserveItem11: 
                    reserveItem12: 
                    reserveItem13: 
                    reserveItem14: 
                    reserveItem15: 
                    reserveItem16: 
                    reserveItem17: 
                    reserveItem18: 
                    reserveItem19: 
                    reserveItem20: 
                  availableDateTo: 
                  validityDateTo: 
                  criterionDate: 
                  remarks: 
                  importCode: 
                  parentCode: 
                  validityDateFrom: 
                  availableDateFrom: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    SectionRoleResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SectionRoleResponse"
          examples:
            正常:
              value:
                sectionRole:
                  rank: 1
                  name: 課長
                  explanation: 備考
                  code: srole01
                  importCode: srole01
                  folderCode: 
                  id: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                sectionRole:
                  rank: 
                  name: 
                  explanation: 
                  code: 
                  importCode: 
                  folderCode: 
                  id: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindSectionRoleResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindSectionRoleResponse"
          examples:
            正常:
              value:
                sectionRoleList:
                  entries:
                    - rank: 1
                      name: 課長
                      explanation: 備考
                      code: srole01
                      importCode: srole01
                      folderCode: 
                      id: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                sectionRoleList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    SectionRoleGroupResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/SectionRoleGroupResponse"
          examples:
            正常:
              value:
                sectionRoleGroup:
                  name: 取締役
                  id: 999
                  explanation: 説明
                  code: srolegroup01
                  sortNo: 1
                  roleCodeList:
                    entries:
                      - code: srole01
                      - code: srole02 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                sectionRoleGroup:
                  name: 
                  id: 
                  explanation: 
                  code: 
                  roleCodeList:
                    entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindSectionRoleGroupResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindSectionRoleGroupResponse"
          examples:
            正常:
              value:
                sectionRoleGroupList:
                  entries:
                    - name: 取締役
                      id: 999
                      explanation: 説明
                      code: srolegroup01
                      sortNo: 1
                      roleCodeList:
                        entries:
                          - code: srole01
                          - code: srole02
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                sectionRoleGroupList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    UnitAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UnitAppointmentResponse"
          examples:
            正常:
              value:
                unitAppointment:
                  id: 999
                  userCode: user01
                  unitCode: unit01
                  sectionRoleCode: srole01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  availableDateTo: 2060-12-31 00:00:00 JST
                  sortNo: 
                  criterionDate: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                unitAppointment:
                  id: 
                  userCode: 
                  unitCode: 
                  sectionRoleCode: 
                  availableDateFrom: 
                  availableDateTo: 
                  sortNo: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindUnitAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUnitAppointmentResponse"
          examples:
            正常:
              value:
                unitAppointmentList:
                  entries:
                    - id: 999
                      userCode: user01
                      unitCode: unit01
                      sectionRoleCode: srolegroup01
                      availableDateFrom: 1900-01-01 00:00:00 JST
                      availableDateTo: 2060-12-31 00:00:00 JST
                      sortNo: 1
                      criterionDate: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                unitAppointmentList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisableUnitAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UnitAppointmentResponse"
          examples:
            正常:
              value:
                unitAppointment:
                  id: 999
                  userCode: user01
                  unitCode: unit01
                  sectionRoleCode: srole01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  availableDateTo: 2024-12-31 00:00:00 JST
                  sortNo: 
                  criterionDate: 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                unitAppointment:
                  id: 
                  userCode: 
                  unitCode: 
                  sectionRoleCode: 
                  availableDateFrom: 
                  availableDateTo: 
                  sortNo: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ProxyApplyAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ProxyApplyAppointmentResponse"
          examples:
            正常:
              value:
                proxyApplicationAppointment:
                  id: 999
                  targetFormList:
                    entries:
                      - formCode: form01
                  targetRuleList:
                    entries:
                      - ruleCode: rule01
                  isDisplayCreateMenu: true
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  principalUnitCode: unit01
                  principalUserCode: user01
                  proxyUserCode: user02
                  availableDateTo: 2060-12-31 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                proxyApplicationAppointment:
                  id: 
                  targetFormList:
                    entries: []
                  targetRuleList:
                    entries: []
                  isDisplayCreateMenu: 
                  availableDateFrom: 
                  principalUnitCode: 
                  principalUserCode: 
                  proxyUserCode: 
                  availableDateTo: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindProxyApplyAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindProxyApplyAppointmentResponse"
          examples:
            正常:
              value:
                proxyApplicationAppointmentList:
                  entries:
                    - id: 999
                      targetFormList:
                        entries:
                          - formCode: form01
                      targetRuleList:
                        entries:
                          - ruleCode: rule01
                      isDisplayCreateMenu: true
                      availableDateFrom: 1900-01-01 00:00:00 JST
                      principalUnitCode: unit01
                      principalUserCode: user01
                      proxyUserCode: user01
                      availableDateTo: 2060-12-31 00:00:00 JST
                      criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                proxyApplicationAppointmentList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisableProxyApplyAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ProxyApplyAppointmentResponse"
          examples:
            正常:
              value:
                proxyApplicationAppointment:
                  id: 999
                  targetFormList:
                    entries:
                      - formCode: form01
                  targetRuleList:
                    entries:
                      - ruleCode: rule01
                  isDisplayCreateMenu: true
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  principalUnitCode: unit01
                  principalUserCode: user01
                  proxyUserCode: user02
                  availableDateTo: 2024-12-31 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                proxyApplicationAppointment:
                  id: 
                  targetFormList:
                    entries: []
                  targetRuleList:
                    entries: []
                  isDisplayCreateMenu: 
                  availableDateFrom: 
                  principalUnitCode: 
                  principalUserCode: 
                  proxyUserCode: 
                  availableDateTo: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ProxyAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ProxyAppointmentResponse"
          examples:
            正常:
              value:
                proxyAppointment:
                  id: 999
                  targetFormList:
                    entries:
                      - formCode: form01
                  targetRuleList:
                    entries:
                      - ruleCode: rule01
                  availableDateTo: 2060-12-31 00:00:00 JST
                  isDisplayTodoMenu: true
                  principalUnitCode: unit01
                  principalUserCode: user01
                  isSendNotification: true
                  proxyUserCode: user02
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                proxyAppointment:
                  id: 
                  targetFormList:
                    entries: []
                  targetRuleList:
                    entries: []
                  availableDateFrom: 
                  isDisplayTodoMenu: 
                  principalUnitCode: 
                  principalUserCode: 
                  isSendNotification: 
                  proxyUserCode: 
                  availableDateTo: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindProxyAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindProxyAppointmentResponse"
          examples:
            正常:
              value:
                proxyAppointmentList:
                  entries:
                    - id: 999
                      targetFormList:
                        entries:
                          - formCode: form01
                      targetRuleList:
                        entries:
                          - ruleCode: rule01
                      availableDateTo: 2060-12-31 00:00:00 JST
                      isDisplayTodoMenu: true
                      isSendNotification: true
                      principalUnitCode: unit01
                      principalUserCode: user01
                      availableDateFrom: 1900-01-01 00:00:00 JST
                      criterionDate: 1900-01-01 00:00:00 JST
                      proxyUserCode: user01
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                proxyAppointmentList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisableProxyAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ProxyAppointmentResponse"
          examples:
            正常:
              value:
                proxyAppointment:
                  id: 999
                  targetFormList:
                    entries:
                      - formCode: form01
                  targetRuleList:
                    entries:
                      - ruleCode: rule01
                  availableDateTo: 2024-12-31 00:00:00 JST
                  isDisplayTodoMenu: true
                  principalUnitCode: unit01
                  principalUserCode: user01
                  isSendNotification: true
                  proxyUserCode: user02
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                proxyAppointment:
                  id: 
                  targetFormList:
                    entries: []
                  targetRuleList:
                    entries: []
                  availableDateFrom: 
                  isDisplayTodoMenu: 
                  principalUnitCode: 
                  principalUserCode: 
                  isSendNotification: 
                  proxyUserCode: 
                  availableDateTo: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DelegationAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DelegationAppointmentResponse"
          examples:
            正常:
              value:
                delegationAppointment:
                  id: 999
                  targetFormList:
                    entries:
                      - formCode: form01
                  targetRuleList:
                    entries:
                      - ruleCode: rule01
                  availableDateTo: 2060-12-31 00:00:00 JST
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                  fromUserCode: user01
                  toUserCode: user02
                  fromUnitCode: unit01
                  taskUnitPolicy: FROM
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                delegationAppointment:
                  id: 
                  targetFormList:
                    entries: []
                  targetRuleList:
                    entries: []
                  availableDateTo: 
                  availableDateFrom: 
                  criterionDate: 
                  fromUserCode: 
                  toUserCode: 
                  fromUnitCode: 
                  taskUnitPolicy: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindDelegationAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindDelegationAppointmentResponse"
          examples:
            正常:
              value:
                delegationAppointmentList:
                  entries:
                    - id: 999
                      targetFormList:
                        entries:
                          - formCode: form01
                      targetRuleList:
                        entries:
                          - ruleCode: rule01
                      availableDateTo: 2060-12-31 00:00:00 JST
                      availableDateFrom: 1900-01-01 00:00:00 JST
                      criterionDate: 1900-01-01 00:00:00 JST
                      fromUserCode: user01
                      toUserCode: user01
                      fromUnitCode: unit01
                      taskUnitPolicy: FROM
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                delegationAppointmentList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisableDelegationAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DelegationAppointmentResponse"
          examples:
            正常:
              value:
                delegationAppointment:
                  id: 999
                  targetFormList:
                    entries:
                      - formCode: form01
                  targetRuleList:
                    entries:
                      - ruleCode: rule01
                  availableDateTo: 2024-12-31 00:00:00 JST
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                  fromUserCode: user01
                  toUserCode: user02
                  fromUnitCode: unit01
                  taskUnitPolicy: FROM
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                delegationAppointment:
                  id: 
                  targetFormList:
                    entries: []
                  targetRuleList:
                    entries: []
                  availableDateTo: 
                  availableDateFrom: 
                  criterionDate: 
                  fromUserCode: 
                  toUserCode: 
                  fromUnitCode: 
                  taskUnitPolicy: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DeprivationAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeprivationAppointmentResponse"
          examples:
            正常:
              value:
                deprivationAppointment:
                  id: 999
                  targetFormList:
                    entries:
                      - formCode: form01
                  targetRuleList:
                    entries:
                      - ruleCode: rule01
                  availableDateTo: 2060-12-31 00:00:00 JST
                  userCode: user01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                deprivationAppointment:
                  id: 
                  targetFormList:
                    entries: []
                  targetRuleList:
                    entries: []
                  availableDateTo: 
                  userCode: 
                  availableDateFrom: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindDeprivationAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindDeprivationAppointmentResponse"
          examples:
            正常:
              value:
                deprivationAppointmentList:
                  entries:
                    - id: 999
                      availableDateTo: 2060-12-31 00:00:00 JST
                      criterionDate: 1900-01-01 00:00:00 JST
                      userCode: user01
                      availableDateFrom: 1900-01-01 00:00:00 JST
                      targetFormList:
                        entries:
                          - formCode: form01
                      targetRuleList:
                        entries:
                          - ruleCode: rule01
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                deprivationAppointmentList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisableDeprivationAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/DeprivationAppointmentResponse"
          examples:
            正常:
              value:
                deprivationAppointment:
                  id: 999
                  targetFormList:
                    entries:
                      - formCode: form01
                  targetRuleList:
                    entries:
                      - ruleCode: rule01
                  availableDateTo: 2024-12-31 00:00:00 JST
                  userCode: user01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                deprivationAppointment:
                  id: 
                  targetFormList:
                    entries: []
                  targetRuleList:
                    entries: []
                  availableDateTo: 
                  userCode: 
                  availableDateFrom: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    PrivateRoleResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PrivateRoleResponse"
          examples:
            正常:
              value:
                privateRole:
                  candidateList:
                    entries:
                      - type: USER
                        roleGroupCode: 
                        userCode: user01
                        roleCode: 
                        unitCode: 
                        roleType: 
                        criterionDate: 2024-10-31 00:00:00 JST
                      - type: ROLE
                        roleGroupCode: 
                        userCode: 
                        roleCode: srole01
                        unitCode: 
                        roleType: SECTION
                        criterionDate: 2024-10-31 00:00:00 JST
                  guidance:
                    text: 本文
                    subject: 件名
                  isWarnIfCandidateNotAssigned: 
                  name: プライベートロール
                  explanation: プライベートロール
                  code: prole01
                  folderCode: proleFolder
                  importCode: prole01
                  id: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                privateRole:
                  candidateList:
                    entries: []
                  guidance:
                    text: 
                    subject: 
                  isWarnIfCandidateNotAssigned: 
                  name: 
                  explanation: 
                  code: 
                  folderCode: 
                  importCode: 
                  id: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindPrivateRoleResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindPrivateRoleResponse"
          examples:
            正常:
              value:
                privateRoleList:
                  entries:
                    candidateList:
                      entries:
                        - type: USER
                          roleGroupCode: 
                          userCode: user01
                          roleCode: 
                          unitCode: 
                          roleType: 
                          criterionDate: 2024-10-31 00:00:00 JST
                        - type: ROLE
                          roleGroupCode: 
                          userCode: 
                          roleCode: srole01
                          unitCode: 
                          roleType: SECTION
                          criterionDate: 2024-10-31 00:00:00 JST
                    guidance:
                      text: 本文
                      subject: 件名
                    isWarnIfCandidateNotAssigned: 
                    name: プライベートロール
                    explanation: プライベートロール
                    code: prole01
                    folderCode: proleFolder
                    importCode: prole01
                    id: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            該当するプライベートロールがない:
              value:
                privateRoleList:
                  entries: [] 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    PrivateRoleAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PrivateRoleAppointmentResponse"
          examples:
            正常:
              value:
                privateRoleAppointment:
                  id: 999
                  criterionDate: 1900-01-01 00:00:00 JST
                  userCode: user01
                  availableDateTo: 2060-12-31 00:00:00 JST
                  privateRoleCode: prole01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  candidateCode: user02
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                privateRoleAppointment:
                  id: 
                  criterionDate: 
                  userCode: 
                  availableDateTo: 
                  privateRoleCode: 
                  availableDateFrom: 
                  candidateCode: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindPrivateRoleAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindPrivateRoleAppointmentResponse"
          examples:
            正常:
              value:
                privateRoleAppointmentList:
                  entries:
                    - id: 999
                      criterionDate: 1900-01-01 00:00:00 JST
                      userCode: user01
                      availableDateTo: 2060-12-31 00:00:00 JST
                      privateRoleCode: prole01
                      availableDateFrom: 1900-01-01 00:00:00 JST
                      candidateCode: user02
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                privateRoleAppointmentList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisablePrivateRoleAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/PrivateRoleAppointmentResponse"
          examples:
            正常:
              value:
                privateRoleAppointment:
                  id: 999
                  criterionDate: 1900-01-01 00:00:00 JST
                  userCode: user01
                  availableDateTo: 2024-12-31 00:00:00 JST
                  privateRoleCode: prole01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  candidateCode: user02
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                privateRoleAppointment:
                  id: 
                  criterionDate: 
                  userCode: 
                  availableDateTo: 
                  privateRoleCode: 
                  availableDateFrom: 
                  candidateCode: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    UniversalRoleResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UniversalRoleResponse"
          examples:
            正常:
              value:
                universalRole: 
                  name: ユニバーサルロール
                  explanation: ユニバーサルロール
                  code: urole01
                  folderCode: 
                  importCode: urole01
                  id: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                universalRole: 
                  name: 
                  explanation: 
                  code: 
                  folderCode: 
                  importCode: 
                  id: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindUniversalRoleResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUniversalRoleResponse"
          examples:
            正常:
              value:
                universalRoleList:
                  entries:
                    - name: ユニバーサルロール
                      explanation: ユニバーサルロール
                      code: urole01
                      folderCode: 
                      importCode: urole01
                      id: 999
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            該当するプライベートロールがない:
              value:
                universalRoleList:
                  entries: [] 
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    UniversalRoleAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UniversalRoleAppointmentResponse"
          examples:
            正常:
              value:
                universalRoleAppointment:
                  id: 999
                  universalRoleCode: urole01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  userCode: user01
                  availableDateTo: 2060-12-31 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                universalRoleAppointment:
                  id: 
                  universalRoleCode: 
                  availableDateFrom: 
                  userCode: 
                  availableDateTo: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindUniversalRoleAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindUniversalRoleAppointmentResponse"
          examples:
            正常:
              value:
                universalRoleAppointmentList:
                  entries:
                    - id: 999
                      criterionDate: 1900-01-01 00:00:00 JST
                      userCode: user01
                      availableDateTo: 2060-12-31 00:00:00 JST
                      privateRoleCode: prole01
                      availableDateFrom: 1900-01-01 00:00:00 JST
                      candidateCode: user02
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                privateRoleAppointmentList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    DisableUniversalRoleAppointmentResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/UniversalRoleAppointmentResponse"
          examples:
            正常:
              value:
                universalRoleAppointment:
                  id: 999
                  universalRoleCode: urole01
                  availableDateFrom: 1900-01-01 00:00:00 JST
                  userCode: user01
                  availableDateTo: 2024-12-31 00:00:00 JST
                  criterionDate: 1900-01-01 00:00:00 JST
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                universalRoleAppointment:
                  id: 
                  universalRoleCode: 
                  availableDateFrom: 
                  userCode: 
                  availableDateTo: 
                  criterionDate: 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    CsvResponses200:
      description: Successful response
      content:
        application/json:
          examples:
            正常:
              value:
                "CSVファイルの内容(バイナリデータ)"
            パラメータが不正:
              value:
                userMasterCsv:
                  storageFile:
                    name:
                    key:
                    id:
                    size:
                    contentType:
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindProjectResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindProjectResponse"
          examples:
            正常:
              value:
                projectList:
                  entries:
                    - name: test_業務カテゴリ
                      code: test_Gyoumu
                    - name: test2
                      code: test2
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                projectList:
                  entries: [] 
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListComponentMasterWindowResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListComponentMasterWindowResponse"
          examples:
            正常:
              value:
                masterWindow:
                  entries:
                    - name: 製品管理
                      id: 100001
                      code: seihin
                      componentList:
                        entries:
                          - name: チケット優先度
                            id: 1
                            code: emerg
                            masterData: 製品指摘優先度マスタ
                            column:
                              entries:
                                - name: ランク
                                  columnName: RANK
                                - name: 備考
                                  columnName: REMARKS
                          - name: 担当者
                            id: 1
                            code: shozoku
                            masterData: 所属マスタ
                            column:
                              entries:
                                - name: ユーザーコード
                                  columnName: userCode
                                - name: ユーザー名
                                  columnName: userName
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListComponentAutoNumberResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListComponentAutoNumberResponse"
          examples:
            正常:
              value:
                autoNumber:
                  entries:
                    - name: 製品管理
                      id: 100001
                      code: seihin
                      componentList:
                        entries:
                          - name: 傷害調査
                            id: 1
                            code: investment
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListFormResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListFormResponse"
          examples:
            正常:
              value:
                formProject:
                  entries:
                    - name: public
                      id: 100001
                      form:
                        entries:
                          - name: test
                            id: 999
                            type: TEMPLATE
                            version: 1.0
                            fieldList:
                              entries: []
                            explanation: 
                            minorVersion: 0
                            majorVersion: 1
                            code: test
                            projectCode: #public
                            isForcAutoCalc: true
                            isReferenceOnly: false
                            isInsertTrailRequired: false
                            validityDateTo: 2060-12-31 00:00:00 JST
                            xwfFileName: test.xwf
                            latestVersion: 1.0
                            trailFormCode: 
                            insertTrailPosition: 
                            validityDateFrom: 1900-01-01 00:00:00 JST
                            tableName:
                              entries:
                                - name: aw1
                                - name: aw2
                            isInsertTrail: false
                            pageCount: 1
                      code: #public
                      formCount: 1
                    - name: 採番テスト
                      id: 100010
                      form:
                        entries:
                          - name: レイヤ
                            id: 998
                            type: MAIN
                            version: 1.2
                            fieldList:
                              entries: []
                            explanation: 
                            minorVersion: 2
                            majorVersion: 1
                            code: lay
                            projectCode: saiban
                            isForcAutoCalc: true
                            isReferenceOnly: false
                            isInsertTrailRequired: false
                            validityDateTo: 2060-12-31 00:00:00 JST
                            xwfFileName: lay.xwf
                            latestVersion: 1.2
                            trailFormCode: 
                            insertTrailPosition: BACK
                            validityDateFrom: 1900-01-01 00:00:00 JST
                            tableName:
                              entries:
                                - name: aw3
                            isInsertTrail: true
                            pageCount: 1
                      code: soumu
                      formCount: 1
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                formProject:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    FindFormDefinitionResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/FindFormDefinitionResponse"
          examples:
            正常:
              value:
                form:
                  code: test
                  name: test
                  rule:
                    entries:
                      - code: rule01
                        name: ルール
                        ruleField:
                          entries:
                            - ruleStepName: 申請
                              ruleStepCode: snisei
                              stepField:
                                entries:
                                  - fieldName: 文字フィールド１
                                    id: textfield1
                                    disable: true
                                    invisible: false
                                    necessary: true
                  pages:
                    entries:
                      - fields:
                        entries:
                          - name: 文字フィールド
                            fieldNo: 1
                            fieldId: apply_date
                            fieldTypeNo: 9
                            fieldType: TEXTFIELD
                            dataType: STRING
                            length: 4000
                            tagName: 申請日
                            groupIdName: ""
                            maxRows: 0
                            isRequired: false
                            isEditable: false
                            isDisabled: false
                            isComma: false
                            defaultValue: ""
                            lookupvalue: 
                            dateformat: 
                            fieldList:
                              entries: []
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                form:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
    ListPublicFolderInfoResponses200:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ListPublicFolderInfoResponse"
          examples:
            正常:
              value:
                publicFolderList:
                  entries:
                    - name: 総務・勤怠管理
                      id: 1
                      code: soumu
                      publicFormList:
                        entries:
                          - formCode: B01
                            formName: B01身上報告書
                            ruleCode: soumu
                            ruleName: 総務汎用ルール
                          - formCode: B02
                            formName: B02届出事項変更届
                            ruleCode: soumu
                            ruleName: 総務汎用ルール
                      publicFolderList:
                        entries:
                          - name: 勤怠
                            id: 3
                            code: kintai
                            publicFormList:
                              entries:
                                - formCode: A083
                                  formName: A083休暇届
                                  ruleCode: soumu
                                  ruleName: 総務汎用ルール
                            publicFolderList:
                              entries: []
                    - name: 財務・経理
                      id: 2
                      code: zaimukanri
                      publicFormList:
                        entries:
                          - formCode: shutyo_seisan
                            formName: 出張仮払精算書
                            ruleCode: shutyo_seisan
                            ruleName: 出張清算フロー
                      publicFolderList:
                        entries: []
                resultStatus: 
                  status: SUCCESS
                  messageList: 
                    entries: []
                  text: 
                  code: 
            パラメータが不正:
              value:
                publicFolderList:
                  entries: []
                resultStatus: 
                  status: FAIL
                  messageList: 
                    entries: 
                      - text: "{エラーメッセージ}"
                        code: "{エラーコード}"
                  text: サービス実行時にエラーが発生しました。
                  code: AWPCMN0000
            リクエストが不正:
              $ref: "#/components/examples/response_errorRequest"
    
  # -----------------------------------------------
  # スキーマ components/schemas
  # -----------------------------------------------

  schemas:
    
    listNames:
      description: 件名項目
      type: object
      pattern: doc.DocListNamesModel
      properties:
        listNames1:
          type: string
        listNames2:
          type: string
        listNames3:
          type: string
        listNames4:
          type: string
        listNames5:
          type: string
        listNames6:
          type: string
        listNames7:
          type: string
        listNames8:
          type: string
        listNames9:
          type: string
        listNames10:
          type: string
        listNames11:
          type: string
        listNames12:
          type: string
        listNames13:
          type: string
        listNames14:
          type: string
        listNames15:
          type: string
        listNames16:
          type: string
        listNames17:
          type: string
        listNames18:
          type: string
        listNames19:
          type: string
        listNames20:
          type: string
    
    reserveItems:
      description: 拡張項目
      type: object
      pattern: org.ReserveItemsModel
      properties:
        reserveItem1:
          type: string
        reserveItem2:
          type: string
        reserveItem3:
          type: string
        reserveItem4:
          type: string
        reserveItem5:
          type: string
        reserveItem6:
          type: string
        reserveItem7:
          type: string
        reserveItem8:
          type: string
        reserveItem9:
          type: string
        reserveItem10:
          type: string
        reserveItem11:
          type: string
        reserveItem12:
          type: string
        reserveItem13:
          type: string
        reserveItem14:
          type: string
        reserveItem15:
          type: string
        reserveItem16:
          type: string
        reserveItem17:
          type: string
        reserveItem18:
          type: string
        reserveItem19:
          type: string
        reserveItem20:
          type: string
    
    compareOperatorType:
      description: |
        比較演算子<br>
        指定可能な値<br>
        |パラメータ|説明|
        |----|----|
        |EQUAL|～と等しい|
        |LESS_THAN|～より小さい|
        |LESS_EQUAL|～以下|
        |GREATER_THAN|～より大きい|
        |GREATER_EQUAL|～以上|
        |NOT_EQUAL|～と異なる|
        |LIKE|～を含む|
        |NOT_LIKE|～を含まない|
        |START_WITH|～から始まる|
        |END_WITH|～で終わる|
        |BETWEEN|～と～の間|
        |EMPTY|未入力|
        |NOT_EMPTY|入力されている|
    
    enumDataType:
      description: |
        データ型<br>
        |パラメータ|説明|
        |----|----|
        |BOOLEAN|真偽値|
        |DATE|日付|
        |DATETIME|日時|
        |DECIMAL|整数|
        |INT|整数値(int)|
        |LONG|整数値(long)|
        |STRING|文字列|
        |TEXT|テキスト|
    
    targetFormList:
      description: 対象フォーム一覧
      type: object
      pattern: org.TargetFormListModel
      properties:
        entries:
          description: フォームコードのリスト
          type: array
          items:
            type: object
            pattern: org.TargetFormModel
            properties:
              formCode:
                description: フォームコード
                type: string
    targetRuleList:
      description: 対象回付ルール一覧
      type: object
      pattern: org.TargetRuleListModel
      properties:
        entries:
          description: 回付ルールコードのリスト
          type: array
          items:
            type: object
            pattern: org.TargetRuleModel
            properties:
              ruleCode:
                description: 回付ルールコード
                type: string
    
    resultStatus:
      description: APIの実行結果
      type: object
      pattern: common.ResultStatusModel
      properties:
        status:
          description: 結果ステータス
          type: string
        messageList:
          description: メッセージ詳細
          type: object
          pattern: common.MessageModel
          properties:
            entries:
              type: array
              items:
                type: object
                properties:
                  text:
                    description: 結果説明
                    type: string
                  code:
                    description: 結果コード
                    type: string
        text:
          description: 結果説明
          type: string
        code:
          description: 結果コード
          type: string
    
    PrepareDocRequestRequest:
      type: object
      pattern: doc.PrepareDocRequestModel
      properties:
        applyUnitCode:
          description: 申請組織コード
          type: string
        applyUserCode:
          description: 申請ユーザーコード
          type: string
        stepCode:
          description: |
            ステップコード<br>
            *nullを指定
          type: string
        referenceDocId:
          description: 参照元書類ID
          type: integer
        formCode:
          description: フォームコード
          type: string
        ruleCode:
          description: 回付ルールコード
          type: string
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    AddDocRequest:
      type: object
      pattern: doc.DocModel
      properties:
        publicFormId:
          description: |
            公開フォームID<br>
            *「新規書類データ作成API」で取得した値を指定
          type: string
        docData:
          description: |
            書類データ<br>
            *「新規書類データ作成API」で取得した値に対し、任意の値を指定
          type: object
          pattern: doc.DocDataModel
          required:
            - entryList
          properties:
            entryList:
              description: 各フィールドのデータ
              type: object
              pattern: doc.DocDataEntryModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - fieldType
                      - fieldId
                      - dataType
                    properties:
                      name:
                        description: |
                          フィールド名<br>
                          *「新規書類データ作成API」で取得した値を指定
                        type: string
                      fieldType:
                        description: |
                          フィールドタイプ<br>
                          *「新規書類データ作成API」で取得した値を指定
                        type: string
                      fieldId:
                        description: |
                          フィールドID<br>
                          *「新規書類データ作成API」で取得した値を指定
                        type: string
                      dataType:
                        description: |
                          データタイプ<br>
                          *「新規書類データ作成API」で取得した値を指定
                        type: string
                      dataValue:
                        description: |
                          フィールドの値<br>
                          *任意の値を指定
                        type: object
                        pattern: doc.DocDataValueModel
                        properties:
                          value:
                            description: |
                              フィールドの値<br>
                              *任意の値を指定<br>
                              *通常フィールドの場合のみ
                          entryList:
                            description: |
                              表明細フィールドのリスト<br>
                              *任意の値を指定<br>
                              *表明細フィールドの場合のみ
                            type: object
                            pattern: doc.DocDataEntryModel
        id:
          description: |
            書類ID<br>
            *nullを指定
          type: integer
        formCode:
          description: |
            フォームコード<br>
            *「新規書類データ作成API」で取得した値を指定
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        adminNo:
          description: |
            書類管理番号<br>
            *nullを指定
          type: string
        listNames:
          description: |
            件名項目<br>
            *「新規書類データ作成API」で取得した値を指定
          type: object
          pattern: doc.DocListNamesModel
        version:
          description: |
            書類バージョン<br>
            *nullを指定
          type: string
        owner:
          description: |
            書類オーナー<br>
            *nullを指定
          type: object
          pattern: doc.DocOwnerModel
    
    UpdateDocRequest:
      type: object
      pattern: doc.DocModel
      properties:
        publicFormId:
          description: |
            公開フォームID<br>
            *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
          type: string
        docData:
          description: |
            書類データ<br>
            *「書類データ取得API」または「新規書類データ保存API」で取得した値に対し、任意の値を指定
          type: object
          pattern: doc.DocDataModel
          required:
            - entryList
          properties:
            entryList:
              description: 各フィールドのデータ
              type: object
              pattern: doc.DocDataEntryModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - fieldType
                      - fieldId
                      - dataType
                    properties:
                      name:
                        description: |
                          フィールド名<br>
                          *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
                        type: string
                      fieldType:
                        description: |
                          フィールドタイプ<br>
                          *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
                        type: string
                      fieldId:
                        description: |
                          フィールドID<br>
                          *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
                        type: string
                      dataType:
                        description: |
                          データタイプ<br>
                          *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
                        type: string
                      dataValue:
                        description: |
                          フィールドの値<br>
                          *任意の値を指定
                        type: object
                        pattern: doc.DocDataValueModel
                        properties:
                          value:
                            description: |
                              フィールドの値<br>
                              *任意の値を指定<br>
                              *通常フィールドの場合のみ
                          entryList:
                            description: |
                              表明細フィールドのリスト<br>
                              *任意の値を指定<br>
                              *表明細フィールドの場合のみ
                            type: object
                            pattern: doc.DocDataEntryModel
        id:
          description: |
            書類ID<br>
            *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
          type: integer
        formCode:
          description: |
            フォームコード<br>
            **「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        adminNo:
          description: |
            書類管理番号<br>
            *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
          type: string
        listNames:
          description: |
            件名項目<br>
            *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
          type: object
          pattern: doc.DocListNamesModel
        version:
          description: |
            書類バージョン<br>
            *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
          type: string
        owner:
          description: |
            書類オーナー<br>
            *「書類データ取得API」または「新規書類データ保存API」で取得した値を指定
          type: object
          pattern: doc.DocOwnerModel
    
    SelectDocRequest:
      type: object
      pattern: doc.SelectDocRequestModel
      properties:
        docView:
          description: 一覧のビュー定義
          type: object
          pattern: doc.DocViewModel
          properties:
            formCode:
              description: フォームコード
              type: string
            groupFormFieldId:
              description: 表明細フィールドID
              type: string
            columnList:
              description: 列項目リスト
              type: object
              pattern: doc.DocViewColumnModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    properties:
                      type: 
                        description: |
                          列項目タイプ<br>
                          指定可能な値<br>
                          |パラメータ|値|
                          |----|----|
                          |FIELD|書類のフィールド|
                          |GROUP_FIELD|書類の表明細フィールド|
                          |DOC_ID|書類ID|
                          |DOC_ADMIN_NO|書類管理番号|
                          |DOC_LISTNAME1～20|件名項目１～２０|
                          |DOC_FULL_VERSION|書類バージョン|
                          |DOC_EXIST_ATTACHMENT|添付有無|
                          |DOC_EXIST_COMMENT|コメント有無|
                          |DOC_REFERENCE_STATUS|関連書類有無|
                          |FORM_CODE|フォームコード|
                          |FORM_NAME|フォーム名|
                          |FORM_STATUS|フォームバージョン|
                          |RULE_CODE|回付ルールコード|
                          |RULE_NAME|回付ルール名|
                          |FLOW_STATUS|書類状態|
                          |FLOW_CURRENTSTEP_NAME|現在のステップ|
                          |FLOW_CRITERION_DATE|基準日|
                          |FLOW_FIX_DATE|承認完了日時|
                          |CREATOR_UNIT_CODE|作成者組織コード|
                          |CREATOR_UNIT_NAME|作成者組織名|
                          |CREATOR_ROLE_CODE|作成者ロールコード|
                          |CREATOR_ROLE_NAME|作成者ロール名|
                          |CREATOR_USER_CODE|作成者コード|
                          |CREATOR_USER_NAME|作成者名|
                          |CREATE_DATE|作成日時|
                          |APPLY_UNIT_CODE|申請者組織コード|
                          |APPLY_UNIT_NAME|申請者組織名|
                          |APPLY_ROLE_CODE|申請者ロールコード|
                          |APPLY_ROLE_NAME|申請者ロール名|
                          |APPLY_USER_CODE|申請者コード|
                          |APPLY_USER_NAME|申請者名|
                          |APPLY_DATE|申請日時|
                          |LASTOPERATOR_UNIT_CODE|最終処理者組織コード|
                          |LASTOPERATOR_UNIT_NAME|最終処理者組織名|
                          |LASTOPERATOR_ROLE_CODE|最終処理者ロールコード|
                          |LASTOPERATOR_ROLE_NAME|最終処理者ロール名|
                          |LASTOPERATOR_USER_CODE|最終処理者コード|
                          |LASTOPERATOR_USER_NAME|最終処理者名|
                          |LASTOPERATOR_DATE|最終処理日時|
                      fieldId:
                        description: フィールドID
                        type: string
        condition:
          description: 書類の検索条件
          type: object
          pattern: doc.SelectDocConditionModel
          properties:
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
            userCode:
              description: ユーザーコード
              type: string
            docid:
              description: 書類ID
              type: integer
            adminNo:
              description: 書類管理番号
              type: string
            formCode:
              description: フォームコード
              type: string
            ruleCode:
              description: 回付ルールコード
              type: string
            ruleStepCode:
              description: 回付ルールステップコード
              type: string
            workflowState:
              description: |
                書類状態<br>
                指定可能な値<br>
                |パラメータ|説明|
                |----|----|
                |PREPARE|下書き|
                |ACTIVE|回付中|
                |APPROVED|承認完了|
                |REJECTED|却下|
                |CANCELED|取り下げ|
                |DELETED|削除|
            listNameKeyword:
              description: 件名キーワード
              type: string
            dateCondition:
              description: 日付条件
              type: object
              pattern: doc.DateConditionModel
              properties:
                type:
                  description: |
                    日付タイプ<br>
                    指定可能な値<br>
                    |パラメータ|説明|
                    |----|----|
                    |APPLY|申請日|
                    |CRITERION|基準日|
                    |APPROVED|承認完了日|
                    |REGISTRATION|作成日|
                    |MODIFY|最終適用終了日|
                rangeType:
                  description: |
                    日付範囲タイプ<br>
                    指定可能な値<br>
                    |パラメータ|説明|
                    |----|----|
                    |ABSOLUTE_DATE|日付指定|
                    |RELATIVE_DAY|日付指定(日)|
                    |RELATIVE_MONTH|日付指定(月)|
                from:
                  description: 日付指定の開始日
                  type: string
                  pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                to:
                  description: 日付指定の終了日
                  type: string
                  pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                dayFrom:
                  description: |
                    日付指定(日)の開始日数<br>
                    *0～9999
                  type: integer
                dayTo:
                  description: |
                    日付指定(日)の終了日数<br>
                    *0～9999
                  type: integer
                monthFrom:
                  description: |
                    日付指定(月)の開始月数<br>
                    *0～999
                  type: integer
                monthTo:
                  description: |
                    日付指定(月)の終了月数<br>
                    *0～999
                  type: integer
                monthDayFrom:
                  description: |
                    日付指定(月)の開始日<br>
                    *1～31<br>
                    *存在しない日の場合は月末に丸められます
                  type: integer
                monthDayTo:
                  description: |
                    日付指定(月)の終了日<br>
                    *1～31<br>
                    *存在しない日の場合は月末に丸められます
            relativeConditionList:
              description: ユーザー関連条件リスト
              type: object
              pattern: doc.RelativeConditionModel
            logicalOperatorType:
              description: |
                フィールド値条件全体の AND / OR<br>
                *AND または OR を指定
              type: string
            fieldValueConditionList:
              description: フィールド値条件リスト
              type: object
              pattern: doc.FieldValueConditionModel
              properties:
                type:
                  description: |
                    フィールド値タイプ<br>
                    指定可能な値<br>
                    |パラメータ|説明|
                    |----|----|
                    |FIELD|書類のフィールド|
                    |LISTNAME1～20|件名項目１～２０|
                fieldId:
                  description: フィールドID
                  type: string
                compareOperatorType:
                  allOf:
                    - $ref: "#/components/schemas/compareOperatorType"
                value:
                  description: 値
                  type: string
                valueFrom:
                  description: 値(From)
                  type: string
                valueTo:
                  description: 値(To)
                  type: string
            fulltextSearchCondition:
              description: 全文検索条件
              type: object
              pattern: doc.FulltextSearchConditionModel
              properties:
                logicalOperatorType:
                  description: |
                    全文検索条件全体の AND / OR<br>
                    *AND または OR を指定
                  type: string
                docContentQuery:
                  description: 書類内容[全文検索]
                  type: string
                attachmentFilenameQuery:
                  description: 添付ファイルの名称[全文検索]
                  type: string
                attachmentContentQuery:
                  description: 添付ファイルの内容[全文検索]
    
    GetDocPdfRequest:
      type: object
      pattern: doc.DocPdfRequestModel
      properties:
        instructionList:
          description: 書類PDF生成情報のリスト
          required:
            - entries
          type: object
          pattern: doc.DocPdfInstructionListModel
          properties:
            entries:
              description: 書類PDF生成情報
              type: array
              items:
                type: object
                pattern: doc.DocPdfInstructionModel
                required:
                  - docId
                properties:
                  docId:
                    description: 書類ID
                    type: string
                  isInsertTrail:
                    description: |
                      証跡PDFを挿入するかどうか<br>
                      *true または false
                    type: boolean
    
    AddDocCommentRequest:
      type: object
      pattern: doc.DocCommentModel
      properties:
        docId:
          description: 書類ID
          type: integer
        comment:
          description: コメント内容
          type: string
        operationInfo:
          description: 操作情報
          type: object
          pattern: common.OperationInfoModel
          required:
            - registrant
          properties:
            registrant:
              description: |
                登録ユーザー<br>
                *登録ユーザー(registrant)の userCode を null の値以外入力時に「登録ユーザー」へ反映される
              type: object
              pattern: common.OperatorModel
              required:
                - userCode
              properties:
                userCode:
                  description: |
                    ユーザーコード<br>
                    *登録ユーザー(registrant)の userCode は必須
    
    AddDocAttachmentRequest:
      type: object
      pattern: doc.DocAttachmentModel
      properties:
        docId:
          description: 書類ID
          type: integer
        type:
          description: |
            添付書類タイプ<br>
            指定可能な値<br>
            |パラメータ|説明|
            |----|----|
            |FILE|添付ファイル|
            |URL|URL|
        explanation:
          description: 添付の説明
          type: string
        name:
          description: |
            添付名称<br>
            *type が URL の場合に必須
          type: string
        url:
          description: |
            URL<br>
            *type が URL の場合に必須
          type: string
          pattern: rule.RuleStepHeaderModel
        storageFile:
          description: |
            添付ファイル<br>
            *type が FILE の場合に multipart/form-data の2つ目に設定します。
            *storageFileとして明示的に指定しても無視されます。
          type: string
          pattern: system.StorageFileModel
    
    UpdateDocAttachmentRequest:
      type: object
      pattern: doc.DocAttachmentModel
      properties:
        id:
          description: |
            添付ID<br>
            *「書類添付情報一覧取得API」で取得した書類添付IDを指定
          type: integer
        docId:
          description: 書類ID
          type: integer
        type:
          description: |
            添付書類タイプ<br>
            *変更不可<br>
            指定可能な値<br>
            |パラメータ|説明|
            |----|----|
            |FILE|添付ファイル|
            |URL|URL|
        explanation:
          description: 添付の説明
          type: string
        name:
          description: |
            添付名称<br>
            *type が URL の場合に必須
          type: string
        url:
          description: |
            URL<br>
            *type が URL の場合に必須
          type: string
          pattern: rule.RuleStepHeaderModel
        storageFile:
          description: |
            添付ファイル<br>
            *type が FILE の場合に multipart/form-data の2つ目に設定します。
            *storageFileとして明示的に指定しても無視されます。
          type: string
          pattern: system.StorageFileModel
    
    WorkflowMessageRequest:
      type: object
      pattern: workflow.WorkflowMessageConditionModel
      required:
        - userCode
        - workflowMessageType
      properties:
        userCode:
          description: ユーザーコード
          type: string
        workflowMessageType:
          description: |
            回付情報タイプ<br>
            指定可能な値<br>
            |パラメータ|説明|
            |----|----|
            |APPLY_REQUEST|申請依頼|
            |APPROVE_REQUEST|承認依頼|
            |CONFIRM_REQUEST|報告依頼|
            |PREPARE|下書き|
            |REMANDED|差戻し|
            |REMIND_EXIST|催促あり|
            |REQUEST_POSSIBLE|回付予定|
    
    DraftRequest:
      type: object
      pattern: workflow.DraftRequestModel
      properties:
        docId:
          description: |
            書類ID<br>
            *「書類データ取得API」、「新規書類データ保存API」、「書類データ更新」で取得した値を指定
          type: integer
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        applyUnitCode:
          description: 申請者組織コード
          type: string
        applyUserCode:
          description: 申請者コード
          type: string
        formCode:
          description: |
            フォームコード<br>
            *「書類データ取得API」、「新規書類データ保存API」、「書類データ更新API」で取得した値を指定
          type: string
        ruleCode:
          description: ルールコード
          type: string
    
    ApproveRequest:
      type: object
      pattern: workflow.ApproveRequestModel
      properties:
        docId:
          description: 書類ID
          type: integer
        operatorCode:
          description: |
            承認する処理者のユーザーコード<br>
            *未指定の場合は、指定ステップに設定されている任意の処理者で承認される（どの処理者で承認されるかは不定）
          type: string
        ruleStepCode:
          description: 承認するステップのコード
          type: string
        comment:
          description: コメント
          type: string
    
    RemandRequest:
      type: object
      pattern: workflow.RemandRequestModel
      properties:
        docId:
          description: 書類ID
          type: integer
        operatorCode:
          description: |
            差し戻す処理者のユーザーコード<br>
            *未指定の場合は、差戻し元ステップに設定されている任意の処理者で差戻される（どの処理者で差戻されるかは不定）
          type: string
        ruleStepCode:
          description: 差戻し元ステップのコード
          type: string
        comment:
          description: コメント
          type: string
        remandRuleStepCode:
          description: 差戻し先ステップのコード
          type: string
    
    RetractRequest:
      type: object
      pattern: workflow.RetractRequestModel
      properties:
        docId:
          description: 書類ID
          type: integer
        operatorCode:
          description: |
            引戻す処理者のユーザーコード<br>
            *未指定の場合は、引戻し元ステップに設定されている任意の処理者で引戻される（どの処理者で引戻されるかは不定）
          type: string
        ruleStepCode:
          description: 引戻し先ステップのコード
          type: string
    
    RejectRequest:
      type: object
      pattern: workflow.RejectRequestModel
      properties:
        docId:
          description: 書類ID
          type: integer
        operatorCode:
          description: |
            却下する処理者のユーザーコード<br>
            *未指定の場合は、却下ステップに設定されている任意の処理者で却下される（どの処理者で却下されるかは不定）
          type: string
        ruleStepCode:
          description: 却下ステップのコード
          type: string
        comment:
          description: コメント
          type: string
    
    AddUserRequest:
      type: object
      pattern: org.UserModel
      properties:
        name:
          description: ユーザー名称
          type: string
        diplayLanguage:
          description: |
            表示言語<br>
            以下のいずれかを指定<br>
            auto：ブラウザ設定に従う<br>
            ja：日本語<br>
            en：英語<br>
            zh_CN：中文（簡体）<br>
            zh_TW：中文（繁体）
          type: string
        localeName:
          description: ローカル名称の言語名
          type: string
        localizedName:
          description: ローカル名称
          type: string
        password:
          description: パスワード
          type: string
        reserveItems:
          allOf:
            - $ref: "#/components/schemas/reserveItems"
        validityDateTo:
          description: 履歴終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        loginId:
          description: ログインID
          type: string
        code:
          description: ユーザーコード
          type: string
        kana:
          description: ユーザー名称カナ
          type: string
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        stampName:
          description: 印影
          type: string
        mailAddress:
          description: メールアドレス
          type: string
        remarks:
          description: 備考
          type: string
        importCode:
          description: インポートコード
          type: string
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        validityDateFrom:
          description: 履歴開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        isNeedStampImage:
          type: string
        isForceChangePassword:
          description: |
            次回ログイン時にパスワード変更を求めるかどうか<br>
            *true の指定は無効
          type: boolean
        isAccountLock:
          description: アカウントロックフラグ
          type: boolean
            
    FindUserRequest:
      type: object
      pattern: org.FindUserRequestModel
      properties:
        condition:
          required:
              - criterionDate
          description: ユーザー検索条件
          type: object
          pattern: org.UserConditionModel
          properties:
            code:
              description: ユーザーコード
              type: string
            loginId:
              description: ログインID
              type: string
            name:
              description: ユーザー名
              type: string
            isAccountLock:
              description: アカウントロックされているかどうか
              type: boolean
            unitCode:
              description: 所属組織コード
              type: string
            sectionRoleCode:
              description: 所有セクションロールコード
              type: string
            universalRoleCode:
              description: 所有ユニバーサルロールコード
              type: string
            reserveItem1:
              description: 拡張項目1
              type: string
            reserveItem2:
              description: 拡張項目2
              type: string
            reserveItem3:
              description: 拡張項目3
              type: string
            reserveItem4:
              description: 拡張項目4
              type: string
            reserveItem5:
              description: 拡張項目5
              type: string
            reserveItem6:
              description: 拡張項目6
              type: string
            reserveItem7:
              description: 拡張項目7
              type: string
            reserveItem8:
              description: 拡張項目8
              type: string
            reserveItem9:
              description: 拡張項目9
              type: string
            reserveItem10:
              description: 拡張項目10
              type: string
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.UserColumnValueConditionListModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    pattern: org.UserColumnValueConditionModel
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |Code|コード|
                          |ImportId|インポートコード|
                          |Name|名称|
                          |LocalizedName|ローカル名称|
                          |LocaleName|ロケール名|
                          |Kana|カナ|
                          |LoginId|ログインID|
                          |MailAddress|メールアドレス|
                          |StampName|印影名|
                          |Remarks|備考|
                          |AvailableDateFrom|運用開始日|
                          |AvailableDateTo|運用終了日|
                          |ReserveItem1～10|拡張項目1～10|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator: 
                  description: |
                    任意検索全体のAND / OR<br>
                    *AND または OR を指定
                  type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    AddUnitRequest:
      type: object
      pattern: org.UnitModel
      properties:
        code:
          description: 組織コード
          type: string
        importCode:
          description: インポートコード
          type: string
        parentCode:
          description: |
            親組織コード<br>
            *ルート組織直下に組織を追加する場合は null
          type: string
        name:
          description: 組織名称
          type: string
        localizedName:
          description: ローカル名称
          type: string
        localeName:
          description: ローカル名
          type: string
        officialName:
          description: 組織正式名称
          type: string
        kana:
          description: 組織名称カナ
          type: string
        remarks:
          description: 備考
          type: string
        validityDateFrom:
          description: 履歴開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        validityDateTo:
          description: 履歴終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        reserveItems:
          allOf:
            - $ref: "#/components/schemas/reserveItems"
    
    FindUnitRequest:
      type: object
      pattern: org.FindUnitRequestModel
      properties:
        condition:
          description: 組織検索条件
          type: object
          pattern: org.UnitConditionModel
          properties:
            code:
              description: 組織コード
              type: string
            name:
              description: 組織名称
              type: string
            parentCode:
              description: 親組織コード
              type: string
            importCode:
              description: インポート組織コード
              type: string
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.UnitColumnValueConditionListModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |Code|コード|
                          |ImportId|インポートコード|
                          |Name|名称|
                          |LocalizedName|ローカル名称|
                          |LocaleName|ロケール名|
                          |Kana|カナ|
                          |LoginId|ログインID|
                          |MailAddress|メールアドレス|
                          |StampName|印影名|
                          |Remarks|備考|
                          |AvailableDateFrom|運用開始日|
                          |AvailableDateTo|運用終了日|
                          |ReserveItem1～10|拡張項目1～10|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator: 
                  description: |
                    任意検索全体のAND / OR<br>
                    *AND または OR を指定
                  type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    AddSectionRoleRequest:
      type: object
      pattern: org.SectionRoleModel
      properties:
        code:
          description: セクションロールコード
          type: string
        importCode:
          description: インポートコード
          type: string
        name:
          description: ロール名称
          type: string
        explanation:
          description: 備考
          type: string
        folderCode:
          description: |
            セクションロールフォルダ<br>
            *セクションロールフォルダ直下に作成する場合はnullを指定
          type: string
        rank:
          description: ランク
          type: integer
    
    FindSectionRoleRequest:
      type: object
      pattern: org.FindSectionRoleRequestModel
      properties:
        condition:
          description: セクションロール検索条件
          type: object
          pattern: org.SectionRoleConditionModel
          properties:
            code:
              description: セクションロールコード
              type: string
            name:
              description: セクションロール名称
              type: string
            userCode:
              description: ユーザーコード
              type: string
            unitCode:
              description: 組織コード
              type: string
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.SectionRoleColumnValueConditionListModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    pattern: org.SectionRoleColumnValueConditionModel
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |Code|コード|
                          |ImportId|インポートコード|
                          |Name|名称|
                          |Rank|ランク|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator: 
                  description: |
                    任意検索全体のAND / OR<br>
                    *AND または OR を指定
                  type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    AddSectionRoleGroupRequest:
      type: object
      pattern: org.SectionRoleGroupModel
      properties:
        code:
          description: セクションロールグループコード
          type: string
        name:
          description: セッションロールグループ名称
          type: string
        sortNo:
          description: ソート順序
          type: string
        explanation:
          description: 説明
          type: string
        roleCodeList:
          description: 所属しているセクションロールコードのリスト
          type: object
          pattern: common.CodeListModel
          properties:
            entries:
              description: セクションロールコード情報
              type: array
              items:
                type: object
                pattern: commonCodeModel
                properties:
                  code:
                    description: セクションロールコード
                    type: string
    
    FindSectionRoleGroupRequest:
      type: object
      pattern: org.FindSectionRoleGroupRequestModel
      properties:
        condition:
          description: セクションロールグループ検索条件
          type: object
          pattern: org.SectionRoleConditionModel
          properties:
            code:
              description: セクションロールグループコード
              type: string
            name:
              description: セクションロールグループ名称
              type: string
            roleCode:
              description: セクションロールコード
              type: string
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.SectionRoleGroupColumnValueConditionListModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    pattern: org.SectionRoleGroupColumnValueConditionModel
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |Code|コード|
                          |Name|名称|
                          |SectionRoleCode|セクションロールコード|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator: 
                  description: |
                    任意検索全体のAND / OR<br>
                    *AND または OR を指定
                  type: string
    
    AddUnitAppointmentRequest:
      type: object
      pattern: org.UnitAppointmentModel
      properties:
        unitCode:
          description: 組織コード
          type: string
        userCode:
          description: ユーザーコード
          type: string
        sectionRoleCode:
          description: セクションロールコード
          type: string
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    FindUnitAppointmentRequest:
      type: object
      pattern: org.FindUnitAppointmentRequestModel
      properties:
        condition:
          description: 組織所属検索条件
          type: object
          pattern: org.UnitAppointmentConditionModel
          properties:
            userCode:
              description: ユーザーコード
              type: string
            unitCode:
              description: |
                組織コード<br>
                *unitDirection と共に指定
              type: string
            unitDirection:
              description: |
                組織の検索種別<br>
                *unitCode と共に指定<br>
                *省略時は該当組織のみ<br>
                指定可能な値<br>
                |パラメータ|説明|
                |----|----|
                |ABSOLUTE|対象組織のみ|
                |ESCALATE|対象組織と、組織の上位にある 全ての組織 or 所属を返す|
                |CASCADE|対象組織と、対称組織の配下にある 全ての組織 or 所属を返す|
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.UnitAppointmentColumnValueConditionListModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    pattern: org.UnitAppointmentColumnValueConditionModel
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |UnitCode|組織コード|
                          |UnitName|インポートコード|
                          |UnitOfficialName|名称|
                          |UnitValidityDateFrom|ローカル名称|
                          |UnitValidityDateTo|ロケール名|
                          |UnitAvailableDateFrom|カナ|
                          |UnitAvailableDateTo|ログインID|
                          |UserCode|メールアドレス|
                          |UserName|印影名|
                          |UserKana|備考|
                          |UserLoginId|運用開始日|
                          |UserMailAddress|運用終了日|
                          |UserStampName|説明|
                          |UserAvailableDateFrom|コード|
                          |UserAvailableDateTo|インポートコード|
                          |RoleCode|名称|
                          |RoleName|ローカル名称|
                          |RoleRank|ロケール名|
                          |ValidityDateFrom|カナ|
                          |ValidityDateTo|ログインID|
                          |UnitReserveItem1～10|組織拡張項目1～10|
                          |UserReserveItem1～10|ユーザー拡張項目1～10|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator: 
                  description: |
                    任意検索全体のAND / OR<br>
                    *AND または OR を指定
                  type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    UpdateUnitAppointmentRequest:
      type: object
      pattern: org.UnitAppointmentModel
      properties:
        id:
          description: |
            更新対象組織所属のID<br>
            *「組織所属作成API」または「組織所属参照API」で取得した値を指定
          type: integer
        unitCode:
          description: 組織コード
          type: string
        userCode:
          description: ユーザーコード
          type: string
        sectionRoleCode:
          description: |
            セクションロールコード<br>
            *指定しない場合は null
          type: string
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    AddProxyApplyAppointmentRequest:
      type: object
      pattern: org.ProxyApplicationAppoitmentModel
      properties:
        principalUserCode:
          description: 被代理ユーザーコード
          type: string
        principalUnitCode:
          description: 被代理組織コード
          type: string
        proxyUserCode:
          description: 代理ユーザーコード
          type: string
        targetFormList:
          allOf:
            - $ref: "#/components/schemas/targetFormList"
        targetRuleList:
          allOf:
            - $ref: "#/components/schemas/targetRuleList"
        isDisplayCreateMenu:
          description: 書類作成画面に表示するかどうか
          type: boolean
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    FindProxyApplyAppointmentRequest:
      type: object
      pattern: FindProxyApplicationAppointmentRequestModel
      properties:
        condition:
          description: 代理申請検索条件
          type: object
          pattern: org.ProxyApplicationAppointmentConditionModel
          properties:
            principalUserCode:
              description: 被代理ユーザーコード
              type: string
            principalUnitCode:
              description: 被代理組織コード
              type: string
            proxyUserCode:
              description: 代理ユーザーコード
              type: string
            targetFormCode:
              description: 対象フォームコード
              type: string
            targetRuleCode:
              description: 対象回付ルールコード
              type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
            isDisplayCreateMenu:
              description: 書類作成画面に表示するかどうか
              type: boolean
    
    AddProxyAppointmentRequest:
      type: object
      pattern: org.ProxyAppointmentModel
      properties:
        principalUserCode:
          description: 被代理ユーザーコード
          type: string
        principalUnitCode:
          description: 被代理組織コード
          type: string
        proxyUserCode:
          description: 代理ユーザーコード
          type: string
        targetFormList:
          allOf:
            - $ref: "#/components/schemas/targetFormList"
        targetRuleList:
          allOf:
            - $ref: "#/components/schemas/targetRuleList"
        isSendNotification:
          description: 代理承認依頼を通知するかどうか
          type: boolean
        isDisplayTodoMenu:
          description: 処理待ち画面に表示するかどうか
          type: boolean
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    FindProxyAppointmentRequest:
      type: object
      pattern: org.FindProxyAppointmentRequestModel
      properties:
        condition:
          description: 代理承認検索条件
          type: object
          pattern: org.ProxyAppointmentConditionModel
          properties:
            principalUnitCode:
              description: 被代理組織コード
              type: string
            principalUserCode:
              description: 被代理ユーザーコード
              type: string
            proxyUserCode:
              description: 代理ユーザーコード
              type: string
            targetFormCode:
              description: 対象フォームコード
              type: string
            targetRuleCode:
              description: 対象回付ルールコード
              type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
            isSendNotification:
              description: 代理承認依頼を通知するかどうか
              type: boolean
            isDisplayTodoMenu:
              description: 処理待ち画面に表示するかどうか
              type: boolean
    
    AddDelegationAppointmentRequest:
      type: object
      pattern: org.DelegationAppointmentModel
      properties:
        fromUserCode:
          description: 委譲元ユーザーコード
          type: string
        fromUnitCode:
          description: 委譲元組織コード
          type: string
        toUserCode:
          description: 委譲先ユーザーコード
          type: string
        targetFormList:
          allOf:
            - $ref: "#/components/schemas/targetFormList"
        targetRuleList:
          allOf:
            - $ref: "#/components/schemas/targetRuleList"
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        taskUnitPolicy:
          description: |
            権限委譲時に処理者情報にセットされる組織情報の決定ポリシー<br>
            指定可能な値<br>
            |パラメータ|説明|
            |----|----|
            |FROM|委譲前の組織を維持|
            |TO|委譲後のユーザーの主務組織|
            |BLANK|表示しない|
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    FindDelegationAppointmentRequest:
      type: object
      pattern: org.FindDelegationAppointmentRequestModel
      properties:
        condition:
          description: 権限委譲検索条件
          type: object
          pattern: org.DelegationAppointmentConditionModel
          properties:
            fromUnitCode:
              description: 権限委譲元組織コード
              type: string
            fromUserCode:
              description: 権限委譲元ユーザーコード
              type: string
            toUserCode:
              description: 権限委譲先ユーザーコード
              type: string
            targetFormCode:
              description: 対象フォームコード
              type: string
            targetRuleCode:
              description: 対象回付ルールコード
              type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    AddDeprivationAppointmentRequest:
      type: object
      pattern: org.DeprivationAppointmentModel
      properties:
        userCode:
          description: ユーザーコード
          type: string
        targetFormList:
          allOf:
            - $ref: "#/components/schemas/targetFormList"
        targetRuleList:
          allOf:
            - $ref: "#/components/schemas/targetRuleList"
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    FindDeprivationAppointmentRequest:
      type: object
      pattern: org.FindDeprivationAppointmentRequestModel
      properties:
        condition:
          description: 引上げ権限検索条件
          type: object
          pattern: org.DeprivationAppointmentConditionModel
          properties:
            userCode:
              description: ユーザーコード
              type: string
            targetFormCode:
              description: 対象フォームコード
              type: string
            targetRuleCode:
              description: 対象回付ルールコード
              type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    AddPrivateRoleRequest:
      type: object
      pattern: org.PrivateRoleModel
      properties:
        code:
          description: プライベートロールコード
          type: string
        importCode:
          description: インポートコード
          type: string
        name:
          description: プライベートロール名称
          type: string
        explanation:
          description: 説明
          type: string
        folderCode:
          description: プライベートロールフォルダコード
          type: string
        isWarnIfCandidateNotAssigned:
          description: 対象ユーザー未指定時に警告表示するかどうか
          type: boolean
        candidateList:
          description: プライベートロール候補者リスト
          type: object
          pattern: org.PrivateRoleCandidateListModel
          properties:
            entries:
              description: プライベートロール候補者のリスト
              type: array
              items:
                type: object
                pattern: org.PrivateRoleCandidateModel
                properties:
                  type:
                    description: |
                      候補選出タイプ<br>
                      指定可能な値<br>
                      |パラメータ|説明|
                      |----|----|
                      |USER|ユーザー指定|
                      |UNIT|組織指定|
                      |UNIT_ESCALATE|組織指定（上位含める）|
                      |UNIT_CASCADE|組織指定（下位含める）|
                      |ROLE|ロール指定|
                      |ROLE_GROUP|ロールグループ指定|
                      |OWNER_UNIT|設定ユーザー所属組織|
                      |OWNER_ESCALATE|設定ユーザー所属上位組織|
                      |OWNER_CASCADE|設定ユーザー所属下位組織|
                  userCode:
                    description: ユーザーコード
                    type: string
                  unitCode:
                    description: 組織コード
                    type: string
                  roleCode:
                    description: ロールコード
                    type: string
                  roleType:
                    description: |
                      ロールタイプ<br>
                      指定可能な値<br>
                      |パラメータ|説明|
                      |----|----|
                      |SECTION|セクションロール|
                      |UNIVERSAL|ユニバーサルロール|
                      |PRIVATE|プライベートロール|
                  roleGroupCode:
                    description: ロールグループコード
                    type: string
                  criterionDate:
                    description: 基準日
                    type: string
                    pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        guidance:
          description: ユーザーサイトの説明文
          type: object
          pattern: common.GuidanceModel
          properties:
            subject:
              description: 件名
              type: string
            text:
              description: 内容
              type: string
    
    FindPrivateRoleRequest:
      type: object
      pattern: org.FindPrivateRoleRequestModel
      properties:
        condition:
          description: プライベートロール検索条件
          type: object
          pattern: org.PrivateRoleConditionModel
          properties:
            code:
              description: プライベートロールコード
              type: string
            name:
              description: プライベートロール名称
              type: string
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.PrivateRoleColumnValueConditionListModel
              properties:
                entries:
                  description: 任意検索条件
                  type: array
                  items:
                    type: object
                    pattern: org.PrivateRoleConditionModel
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |Code|コード|
                          |Name|名称|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator:
                  description: |
                    任意検索全体の AND / OR<br>
                    *AND または OR を指定
    
    AddPrivateRoleAppointmentRequest:
      type: object
      pattern: org.PrivateRoleAppointmentModel
      properties:
        userCode:
          description: ユーザーコード
          type: string
        privateRoleCode:
          description: プライベートロールコード
          type: string
        candidateCode:
          description: 候補者のユーザーコード
          type: string
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateto:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    FindPrivateRoleAppointmentRequest:
      type: object
      pattern: orgFindPrivateRoleAppointmentRequestModel
      properties:
        condition:
          description: プライベートロール所属検索条件
          type: object
          pattern: org.PrivateRoleAppointmentConditionModel
          properties:
            userCode:
              description: ユーザーコード
              type: string
            roleCode:
              description: プライベートロールコード
              type: string
            candidateCode:
              description: 候補者のユーザーコード
              type: string
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.PrivateRoleAppointmentColumnValueConditionListModel
              properties:
                entries:
                  description: 任意検索条件
                  type: array
                  items:
                    type: object
                    pattern: org.PrivateRoleAppointmentColumnValueConditionModel
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |ValidityDateFrom|プライベートロール所属履歴開始日|
                          |ValidityDateTo|プライベートロール所属履歴終了日|
                          |RoleCode|プライベートロールコード|
                          |RoleName|プライベートロール名称|
                          |UserCode|ユーザーコード|
                          |UserImportCode|ユーザーインポートコード|
                          |UserName|ユーザー名称|
                          |UserKana|ユーザーカナ|
                          |UserLoginId|ユーザーログインID|
                          |UserMailAddress|ユーザーメールアドレス|
                          |UserStampName|ユーザーの印影上の表示名称|
                          |UserAvailableDateFrom|ユーザー運用開始日|
                          |UserAvailableDateTo|ユーザー運用終了日|
                          |UserReserveItem1|ユーザーの拡張項目１|
                          |UserReserveItem2|ユーザーの拡張項目２|
                          |UserReserveItem3|ユーザーの拡張項目３|
                          |UserReserveItem4|ユーザーの拡張項目４|
                          |UserReserveItem5|ユーザーの拡張項目５|
                          |UserReserveItem6|ユーザーの拡張項目６|
                          |UserReserveItem7|ユーザーの拡張項目７|
                          |UserReserveItem8|ユーザーの拡張項目８|
                          |UserReserveItem9|ユーザーの拡張項目９|
                          |UserReserveItem10|ユーザーの拡張項目１０|
                          |CandidateCode|候補者のユーザーコード|
                          |CandidateImportCode|候補者インポートコード|
                          |CandidateName|候補者のユーザー名称|
                          |CandidateKana|候補者カナ|
                          |CandidateLoginId|候補者ログインID|
                          |CandidateMailAddress|候補者メールアドレス|
                          |CandidateStampName|候補者の印影上の表示名称|
                          |CandidateAvailableDateFrom|候補者運用開始日|
                          |CandidateAvailableDateTo|候補者運用終了日|
                          |CandidateReserveItem1|候補者のユーザー拡張項目１|
                          |CandidateReserveItem2|候補者のユーザー拡張項目２|
                          |CandidateReserveItem3|候補者のユーザー拡張項目３|
                          |CandidateReserveItem4|候補者のユーザー拡張項目４|
                          |CandidateReserveItem5|候補者のユーザー拡張項目５|
                          |CandidateReserveItem6|候補者のユーザー拡張項目６|
                          |CandidateReserveItem7|候補者のユーザー拡張項目７|
                          |CandidateReserveItem8|候補者のユーザー拡張項目８|
                          |CandidateReserveItem9|候補者のユーザー拡張項目９|
                          |CandidateReserveItem10|候補者のユーザー拡張項目１０|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator:
                  description: |
                    任意検索全体の AND / OR<br>
                    *AND または OR を指定
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    UpdatePrivateRoleAppointmentRequest:
      type: object
      pattern: org.FindPrivateRoleRequestModel
      properties:
        id:
          description: |
            更新対象プライベートロール所属のID<br>
            *「プライベートロール所属作成API」または「プライベートロール所属参照API」で取得した値を指定
          type: integer
        userCode:
          description: |
            ユーザーコード<br>
            *変更不可
          type: string
        privateRoleCode:
          description: |
            プライベートロールコード<br>
            *変更不可
          type: string
        candidateCode:
          description: |
            候補者のユーザーコード<br>
            *変更不可
          type: string
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateTo:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    AddUniversalRoleRequest:
      type: object
      pattern: org.UniversalRoleModel
      properties:
        code:
          description: ユニバーサルロールコード
          type: string
        importCode:
          description: インポートコード
          type: string
        name:
          description: ユニバーサルロール名称
          type: string
        explanation:
          description: 説明
          type: string
        folderCode:
          description: ユニバーサルロールフォルダコード
          type: string
    
    FindUniversalRoleRequest:
      type: object
      pattern: org.FindUniversalRoleRequestModel
      properties:
        condition:
          description: ユニバーサルロール検索条件
          type: object
          pattern: org.UniversalRoleConditionModel
          properties:
            code:
              description: ユニバーサルロールコード
              type: string
            name:
              description: ユニバーサルロール名称
              type: string
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.UniversalRoleColumnValueConditionListModel
              properties:
                entries:
                  description: 任意検索条件
                  type: array
                  items:
                    type: object
                    pattern: org.UniversalRoleColumnValueConditionModel
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |Code|コード|
                          |ImportId|インポートコード|
                          |Name|名称|
                          |Rank|ランク|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator:
                  description: |
                    任意検索全体の AND / OR<br>
                    *AND または OR を指定
    
    AddUniversalRoleAppointmentRequest:
      type: object
      pattern: org.UniversalRoleAppointmentModel
      properties:
        userCode:
          description: ユーザーコード
          type: string
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        universalRoleCode:
          description: ユニバーサルロールコード
          type: string
        availableDateFrom:
          description: 適用開始日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        availableDateto:
          description: 適用終了日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    FindUniversalRoleAppointmentRequest:
      type: object
      pattern: org.FindUniversalRoleAppointmentRequestModel
      properties:
        condition:
          description: ユニバーサルロール所属検索条件
          type: object
          pattern: org.UniversalRoleAppointmentConditionModel
          properties:
            userCode:
              description: ユーザーコード
              type: string
            roleCode:
              description: ユニバーサルロールコード
              type: string
            columnValueConditionList:
              description: 任意検索条件一覧
              type: object
              pattern: org.UniversalRoleAppointmentColumnValueConditionListModel
              properties:
                entries:
                  description: 任意検索条件
                  type: array
                  items:
                    type: object
                    pattern: org.UniversalRoleAppointmentColumnValueConditionModel
                    properties:
                      column:
                        description: |
                          フィールド値タイプ<br>
                          指定可能な値<br>
                          |パラメータ|説明|
                          |----|----|
                          |ValidityDateFrom|ユニバーサルロール所属履歴開始日|
                          |ValidityDateTo|ユニバーサルロール所属履歴終了日|
                          |RoleCode|ユニバーサルロールコード|
                          |RoleName|ユニバーサルロール名称|
                          |UserCode|ユーザーコード|
                          |UserImportCode|ユーザーインポートコード|
                          |UserName|ユーザー名称|
                          |UserKana|ユーザーカナ|
                          |UserLoginId|ユーザーログインID|
                          |UserMailAddress|ユーザーメールアドレス|
                          |UserStampName|ユーザーの印影上の表示名称|
                          |UserAvailableDateFrom|ユーザー運用開始日|
                          |UserAvailableDateTo|ユーザー運用終了日|
                          |UserReserveItem1|ユーザーの拡張項目１|
                          |UserReserveItem2|ユーザーの拡張項目２|
                          |UserReserveItem3|ユーザーの拡張項目３|
                          |UserReserveItem4|ユーザーの拡張項目４|
                          |UserReserveItem5|ユーザーの拡張項目５|
                          |UserReserveItem6|ユーザーの拡張項目６|
                          |UserReserveItem7|ユーザーの拡張項目７|
                          |UserReserveItem8|ユーザーの拡張項目８|
                          |UserReserveItem9|ユーザーの拡張項目９|
                          |UserReserveItem10|ユーザーの拡張項目１０|
                      compareOperatorType:
                        allOf:
                          - $ref: "#/components/schemas/compareOperatorType"
                      value:
                        description: 値
                        type: string
                logicalOperator:
                  description: |
                    任意検索全体の AND / OR<br>
                    *AND または OR を指定
            criterionDate:
              description: 検索基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
    
    GetDoc:
      type: object
      pattern: doc.DocHeaderModel
      properties:
        owner:
          description: 書類オーナー
          type: object
          pattern: doc.DocOwnerModel
          properties:
            type:
              description: |
                書類オーナータイプ<br>
                指定可能な値<br>
                |パラメータ|説明|
                |----|----|
                |UNIT|組織|
                |USER|ユーザー|
        id:
          description: 書類ID
          type: integer
        version:
          description: |
            バージョン<br>
            *書類履歴のバージョン
          type: string
        criterionDate:
          description: 基準日
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        formCode:
          description: フォームコード
          type: string
        listNames:
          allOf:
            - $ref: "#/components/schemas/listNames"
        adminNo:
          description: 書類管理番号
          type: string
    
    GetDocHeaderResponse:
      type: object
      pattern: doc.DocHeaderResponseModel
      properties:
        docHeader:
          description: 書類情報
          allOf:
            - $ref: "#/components/schemas/GetDoc"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListDocReferencerResponse:
      type: object
      pattern: doc.ListDocReferencerResponseModel
      properties:
        docHeaderList:
          description: 書類情報のリスト
          type: object
          pattern: doc.DocHeaderModel
          properties:
            entries:
              description: 書類情報
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/GetDoc"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    DocResponse:
      type: object
      pattern: doc.DocResponseModel
      properties:
        doc:
          description: 書類情報
          type: object
          pattern: doc.DocModel
          properties:
            docData:
              description: 書類データ
              type: object
              pattern: doc.DocDataModel
              properties:
                entryList:
                  description: 各フィールドのデータ
                  type: object
                  pattern: doc.DocDataEntryModel
                  properties:
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            description: フィールド名
                            type: string
                          fieldType:
                            description: フィールドタイプ
                            type: string
                          fieldId:
                            description: フィールドID
                            type: string
                          dataType:
                            description: データタイプ
                            type: string
                          dataValue:
                            description: フィールドの値
                            type: object
                            pattern: doc.DocDataValueModel
                            properties:
                              value:
                                description: |
                                  フィールドの値<br>
                                  *通常フィールドの場合のみ
                              entryList:
                                description: |
                                  表明細フィールドのリスト<br>
                                  *表明細フィールドの場合のみ
                                type: object
                                pattern: doc.DocDataEntryModel
            publicFormId:
              description: 公開フォームID
              type: integer
          allOf:
            - $ref: "#/components/schemas/GetDoc"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    SelectDocResponse:
      type: object
      pattern: common.SelectResponseModel
      properties:
        resultSet:
          description: 結果のセット
          type: object
          pattern: common.ResultSetModel
          properties:
            recordList:
              description: レコードのリスト
              type: object
              pattern: common.RecordListModel
              properties:
                entries:
                  description: レコード
                  type: array
                  items:
                    type: object
                    pattern: common.RecordModel
                    properties:
                      entryList:
                        description: エントリのリスト
                        type: object
                        pattern: common.EntryListModel
                        properties:
                          entries:
                            type: array
                            items:
                              type: object
                              pattern: common.EntryModel
                              properties:
                                name:
                                  description: 名称
                                  type: string
                                value:
                                  description: 値
                                  type: object
            fieldList:
              description: フィールドのリスト
              type: object
              pattern: common.FieldListModel
              properties:
                entries:
                  description: フィールド
                  type: array
                  items:
                    type: object
                    pattern: common.FieldModel
                    properties:
                      name:
                        description: フィールド名
                        type: string
                      type:
                        allOf:
                          - $ref: "#/components/schemas/enumDataType"
        resultStatus:
            allOf:
              - $ref: "#/components/schemas/resultStatus"
    
    ListDocCommentResponse:
      type: object
      pattern: doc.ListDocCommentResponseModel
      properties:
        docCommentList:
          description: 書類コメント一覧
          type: object
          pattern: doc.DocCommentListModel
          properties:
            entries:
              description: 書類コメント情報
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/docComment"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    AddDocCommentResponse:
      type: object
      pattern: doc.DocCommentResponseModel
      properties:
        docComment:
          description: 書類コメント情報
          allOf:
            - $ref: "#/components/schemas/docComment"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
   
    ruleStepHeader:
      type: object
      pattern: rule.RuleStepHeaderModel
      properties:
        name:
          description: ステップ名称
          type: string
        type:
          description: |
            ステップ種別<br>
            |パラメータ|説明|
            |----|----|
            |START|開始|
            |CREATE|作成|
            |APPLY|申請|
            |APPROVE|承認|
            |AUTOAPPLY|自動申請|
            |OUTPUTDOCDATA|自動出力|
            |CONFIRM|報告|
            |READ|閲覧|
            |STORE|保管|
            |SWITCH|分岐開始|
            |SYNC|分岐合流|
            |DISTRIBUTE|並列開始|
            |COLLECTION|並列合流|
            |END|終了|
        index:
          description: インデックス
          type: integer
        code:
          description: ステップコード
          type: string
   
    docComment:
      type: object
      pattern: doc.DocCommentModel
      properties:
        id:
          description: コメントID
          type: integer
        comment:
          description: コメント
          type: string
        ruleStepHeader:
          description: コメントが付加されているステップ
          allOf:
            - $ref: "#/components/schemas/ruleStepHeader"
        effectorType:
          allOf:
            - $ref: "#/components/schemas/effectorType"
        operationInfo:
          description: 操作情報
          allOf:
            - $ref: "#/components/schemas/operationInfo"
    
    effectorType:
      description: |
        作用種別<br>
        |パラメータ|説明|
        |----|----|
        |CREATE|作成|
        |APPLY|申請|
        |APPLY_PROXY|代理申請|
        |APPROVE|承認|
        |APPROVE_WITH_COMMENTS|コメント付き承認|
        |REMAND|差戻し|
        |REJECT|却下|
        |CANCEL|削除|
        |RETRACT|引戻し|
        |CONFIRM|確認|
        |DELETE|削除|
        |EDIT|編集|
        |SAVE|保存|
        |PDF|PDF|
        |COPY|コピーして新規|
        |REFERENCE|関連書類|
        |CUSTOM|カスタムメニュー|
        |DEPRIVE|引上げ|
        |SHARE|共有|
    
    operationInfo:
      type: object
      pattern: common.OperationInfoModel
      properties:
        registrationDate:
          description: 登録日時
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        modifyDate:
          description: 更新日時
          type: string
          pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        modifier:
          description: 更新ユーザー
          allOf:
            - $ref: "#/components/schemas/commonOperatorModel"
        registrant:
          description: 登録ユーザー
          allOf:
           - $ref: "#/components/schemas/commonOperatorModel"
        modifierOfShared:
          description: 更新ユーザー
          allOf:
            - $ref: "#/components/schemas/commonOperatorModel"
        registrantOfShared:
          description: 登録ユーザー
          allOf:
            - $ref: "#/components/schemas/commonOperatorModel"
    
    commonOperatorModel:
      type: object
      pattern: common.OperatorModel
      properties:
        userName:
          description: ユーザー名称
          type: string
        userCode:
          description: ユーザーコード
          type: string
        unitName:
          description: 組織名称
          type: string
        unitCode:
          description: 組織コード
          type: string
        roleName:
          description: ロール名称
          type: string
        roleCode:
          description: ロールコード
          type: string
    
    DocAttachmentResponse:
      type: object
      pattern: doc.DocAttachmentResponseModel
      properties:
        docAttachment:
          description: 書類添付情報
          allOf:
            - $ref: "#/components/schemas/docAttachment"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListDocAttachmentResponse:
      type: object
      pattern: doc.ListDocAttachmentResponseModel
      properties:
        docAttachmentList:
          description: 書類添付情報一覧
          type: object
          pattern: doc.DocAttachmentListModel
          properties:
            entries:
              description: 書類添付情報
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/docAttachment"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    docAttachment:
      type: object
      pattern: doc.DocAttachmentModel
      properties:
        name:
          description: ファイル名称
          type: string
        id:
          description: 書類添付ID
          type: integer
        type:
          description: |
            書類添付タイプ<br>
            |パラメータ|説明|
            |----|----|
            |FILE|添付ファイル|
            |URL|URL|
        size:
          description: ファイルサイズ
          type: integer
        path:
          description: エンコードされたパス情報
          type: string
        explanation:
          description: 添付書類の説明
          type: string
        ruleStepHeader:
          description: 添付書類が付加されているステップ
          allOf:
            - $ref: "#/components/schemas/ruleStepHeader"
        storageFile:
          description: 添付ファイル
          type: object
          pattern: system.StorageFileModel
          properties:
            name:
              description: ファイル名
              type: string
            key:
              description: ファイルキー
              type: string
            id:
              description: ファイルID
              type: string
            size:
              description: ファイルサイズ
              type: integer
            contentType:
              description: MIMEタイプ
              type: string
        url:
          description: URL
          type: string
        operationInfo:
          description: 操作情報
          allOf:
            - $ref: "#/components/schemas/operationInfo"
        docId:
          description: 書類ID
          type: integer
    
    SelectWorkflowMessageResponse:
      type: object
      pattern: common.SelectResponseModel
      properties:
        resultSet:
          description: 回付情報の検索結果
          type: object
          pattern: common.ResultSetModel
          properties:
            fieldList:
              description: フィールド情報一覧
              type: object
              pattern: common.FieldListModel
              properties:
                entries:
                  description: フィールド情報
                  type: array
                  items:
                    type: object
                    pattern: common.FieldModel
                    properties:
                      name:
                        description: フィールド名
                        type: string
                      type:
                        allOf:
                          - $ref: "#/components/schemas/enumDataType"
            recordList:
              description: レコード情報一覧
              type: object
              pattern: common.RecordListModel
              properties:
                entries:
                  description: レコード情報
                  type: array
                  items:
                    type: object
                    pattern: common.RecordModel
                    properties:
                      index:
                        description: レコードインデックス
                        type: integer
                      entryList:
                        description: エントリのリスト
                        type: object
                        pattern: common.EntryModel
                        properties:
                          entries:
                            description: エントリ
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  description: 名称
                                  type: string
                                value:
                                  description: 値
                                  type: object
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    GetWorkflowInfoResponse:
      type: object
      pattern: workflow.WorkflowInfoResponseModel
      properties:
        workflowInfo:
          type: object
          pattern: workflow.WorkflowInfoModel
          properties:
            createOperator:
              description: 作成者
              allOf:
                - $ref: "#/components/schemas/commonOperatorModel"
            currentRuleStepHeaderList:
              description: 現在ステップ情報リスト
              type: object
              pattern: rule.RuleStepHeaderListModel
              properties:
                entries:
                  description: 現在ステップヘッダ情報
                  type : array
                  items:
                    allOf:
                      - $ref: "#/components/schemas/ruleStepHeader"
            applyOperator:
              description: 申請者
              allOf:
                - $ref: "#/components/schemas/commonOperatorModel"
            formName:
              description: フォーム名
              type: string
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
            createDate:
              description: 作成日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
            lastOperator:
              description: 最終処理者
              allOf:
                - $ref: "#/components/schemas/commonOperatorModel"
            docId:
              description: 書類ID
              type: integer
            approvedDate:
              description: 承認完了日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
            applyDate:
              description: 申請日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
            formCode:
              description: フォームコード
              type: string
            workflowState:
              description: |
                状態<br>
                |パラメータ|説明|
                |----|----|
                |PREPARE|下書き|
                |ACTIVE|回付中|
                |APPROVED|承認完了|
                |REJECTED|却下|
                |CANCELED|取り下げ|
                |DELETED|削除|
            proxyApplyOperator:
              description: 代理申請者
              allOf:
                - $ref: "#/components/schemas/commonOperatorModel"
            ruleCode:
              description: ルールコード
              type: string
            ruleName:
              description: ルール名
              type: string
            lastOperateDate:
              description: 最終処理日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindWorkflowTaskResponse:
      type: object
      pattern: workflow.FindWorkflowTaskResponseModel
      properties:
        workflowTaskList:
          description: 回付情報タスク検索結果
          type: object
          pattern: workflow.WorkflowTaskListModel
          properties:
            entries:
              description: 回付情報タスク一覧
              type: array
              items:
                type: object
                pattern: workflow.WorkflowTaskModel
                properties:
                  state:
                    description: |
                      タスクの状態<br>
                      |パラメータ|説明|
                      |----|----|
                      |NOTHING|予定無し|
                      |FORECAST|予定されている|
                      |ACTIVE|有効|
                      |DONE|終了|
                      |CANCELED|取り消し|
                  reserveItems:
                    description: |
                      拡張項目<br>
                      *未使用
                  operator:
                    description: タスク処理者
                    allOf:
                      - $ref: "#/components/schemas/commonOperatorModel"
                  ruleEffector:
                    description: タスク作用
                    type: object
                    pattern: rule.RuleEffectorHeaderModel
                    properties:
                      name:
                        description: 作用名称
                        type: string
                      type:
                        allOf:
                          - $ref: "#/components/schemas/effectorType"
                  isProxy:
                    description: 代理タスクフラグ
                    type: boolean
                  effectDate:
                    description: 作用日
                    type: string
                    pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                  deprivedRuleStepHeader:
                    description: 引上げ元ルールステップ
                    allOf:
                      - $ref: "#/components/schemas/ruleStepHeader"
                  ruleStepHeader:
                    description: ステップ情報
                    allOf:
                      - $ref: "#/components/schemas/ruleStepHeader"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListWorkflowJournalResponse:
      type: object
      pattern: workflow.ListWorkflowJournalResponseModel
      properties:
        workflowJournalList:
          description: 回付情報タスク検索結果
          type: object
          pattern: workflow.WorkflowJournalListModel
          properties:
            entries:
              description: 回付情報タスク一覧
              type: array
              items:
                type: object
                pattern: workflow.WorkflowJournalModel
                properties:
                  comment:
                    description: コメント
                    type: string
                  createDate:
                    description: 登録日時
                    type: string
                    pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                  leadTime:
                    description: リードタイム
                    type: integer
                  docId:
                    description: 書類ID
                    type: integer
                  operator:
                    description: タスク処理者
                    allOf:
                      - $ref: "#/components/schemas/commonOperatorModel"
                  ruleEffector:
                    description: タスク作用
                    type: object
                    pattern: rule.RuleEffectotHeaderModel
                    properties:
                      name:
                        description: 作用名称
                        type: string
                      type:
                        allOf:
                          - $ref: "#/components/schemas/effectorType"
                  ruleStepHeader:
                    description: ステップ情報
                    allOf:
                      - $ref: "#/components/schemas/ruleStepHeader"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListElectJournalResponse:
      type: object
      pattern: workflow.ListElectJournalResponseModel
      properties:
        electJournalList:
          description: 処理者変更履歴検索結果
          type: object
          pattern: workflow.ElectJournalListModel
          properties:
            entries:
              description: 処理者変更履歴一覧
              type: array
              items:
                type: object
                pattern: workflow.ElectJournalModel
                properties:
                  createDate:
                    description: 登録日時
                    type: string
                    pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                  addOperator:
                    description: 追加ユーザー
                    allOf:
                      - $ref: "#/components/schemas/commonOperatorModel"
                  actionType:
                    description: |
                      操作内容<br>
                      |パラメータ|説明|
                      |----|----|
                      |ADD|追加|
                      |SELECT_APPLY_USER|申請ユーザー選択（申請ステップ用）|
                      |DELETE|削除|
                      |DELEGATE|委譲|
                  eventType:
                    description: |
                      イベント<br>
                      |パラメータ|説明|
                      |----|----|
                      |USER_SELECT|ユーザー選択|
                      |ADMIN_SELECT|管理者選択|
                      |DELEGATION|権限委譲|
                  docId:
                    description: 書類ID
                    type: integer
                  deletedOperator:
                    description: 削除ユーザー
                    allOf:
                      - $ref: "#/components/schemas/commonOperatorModel"
                  ruleStepHeader:
                    description: ステップ情報
                    allOf:
                      - $ref: "#/components/schemas/ruleStepHeader"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListShareJournalResponse:
      type: object
      pattern: workflow.ListShareJournalResponseModel
      properties:
        shareJournalList:
          description: 共有履歴検索結果
          type: object
          pattern: workflow.ShareJournalListModel
          properties:
            entries:
              description: 共有履歴一覧
              type: array
              items:
                type: object
                pattern: workflow.ShareJournalModel
                properties:
                  createDate:
                    description: 登録日時
                    type: string
                    pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                  addOperator:
                    description: 追加ユーザー
                    allOf:
                      - $ref: "#/components/schemas/commonOperatorModel"
                  actionType:
                    description: |
                      操作内容<br>
                      |パラメータ|説明|
                      |----|----|
                      |ADD|追加|
                      |SELECT_APPLY_USER|申請ユーザー選択（申請ステップ用）|
                      |DELETE|削除|
                      |DELEGATE|委譲|
                  docId:
                    description: 書類ID
                    type: integer
                  deletedOperator:
                    description: 削除ユーザー
                    allOf:
                      - $ref: "#/components/schemas/commonOperatorModel"
                  sharedOperator:
                    description: 共有ユーザー
                    allOf:
                      - $ref: "#/components/schemas/commonOperatorModel"
                  workflowShareOperatorType:
                    description: |
                      回付履歴上の処理者<br>
                      |パラメータ|説明|
                      |----|----|
                      |RECIVER|被共有者|
                      |SENDER|共有者|
                  ruleStepHeader:
                    description: ステップ情報
                    allOf:
                      - $ref: "#/components/schemas/ruleStepHeader"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    UserResponse:
      type: object
      pattern: org.UserResponseModel
      properties:
        user:
          description: ユーザー情報
          type: object
          properties:
            id:
              description: ユーザーのid
              type: integer
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
          allOf:
            - $ref: "#/components/schemas/AddUserRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindUserResponse:
      type: object
      pattern: org.FindUserResponseModel
      properties:
        userList:
          description: ユーザー参照結果一覧
          type: object
          pattern: org.UserListModel
          properties:
            entries:
              description: ユーザー参照一覧
              type: array
              items:
                type: object
                pattern: org.UserModel
                properties:
                  id:
                    description: ユーザーのid
                    type: integer
                  criterionDate:
                    description: 基準日
                    type: string
                    pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                allOf:
                  - $ref: "#/components/schemas/AddUserRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    UnitResponse:
      type: object
      pattern: org.UnitResponseModel
      properties:
        unit:
          description: 組織情報
          type: object
          properties:
            id:
              description: 組織のid
              type: integer
            criterionDate:
              description: 基準日
              type: string
              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
          allOf:
            - $ref: "#/components/schemas/AddUnitRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindUnitResponse:
      type: object
      pattern: org.FindUnitResponseModel
      properties:
        unitList:
          description: 組織情報一覧
          type: object
          pattern: org.UnitListModel
          properties:
            entries:
              description: 組織情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: 組織のid
                    type: integer
                  criterionDate:
                    description: 基準日
                    type: string
                    pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                allOf:
                  - $ref: "#/components/schemas/AddUnitRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    SectionRoleResponse:
      type: object
      pattern: org.SectionRoleResponseModel
      properties:
        sectionRole:
          description: セクションロール情報
          type: object
          properties:
            id:
              description: セクションロールのid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddSectionRoleRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindSectionRoleResponse:
      type: object
      pattern: org.FindSectionRoleResponseModel
      properties:
        sectionRoleList:
          description: セクションロール情報一覧
          type: object
          pattern: org.SectionRoleListModel
          properties:
            entries:
              description: セクションロール情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: セクションロールのid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddSectionRoleRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    SectionRoleGroupResponse:
      type: object
      pattern: org.SectionRoleGroupResponseModel
      properties:
        sectionRoleGroup:
          description: セクションロールグループ情報
          type: object
          properties:
            id:
              description: セクションロールグループのid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddSectionRoleGroupRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindSectionRoleGroupResponse:
      type: object
      pattern: org.FindSectionRoleGroupResponseModel
      properties:
        sectionRoleGroupList:
          description: セクションロールグループ情報一覧
          type: object
          pattern: org.SectionRoleGroupListModel
          properties:
            entries:
              description: セクションロールグループ情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: セクションロールグループのid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddSectionRoleGroupRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    UnitAppointmentResponse:
      type: object
      pattern: org.UnitAppointmentResponseModel
      properties:
        unitAppointment:
          description: 組織所属情報
          type: object
          properties:
            id:
              description: 組織所属のid
              type: integer
            sortNo:
              description: 組織所属の並び順序
          allOf:
            - $ref: "#/components/schemas/AddUnitAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindUnitAppointmentResponse:
      type: object
      pattern: org.FindUnitAppointmentResponseModel
      properties:
        unitAppointmentList:
          description: 組織所属情報一覧
          type: object
          pattern: org.UnitAppointmentListModel
          properties:
            entries:
              description: 組織所属情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: 組織所属のid
                    type: integer
                  sortNo:
                    description: 組織所属の並び順序
                    type: string
                allOf:
                  - $ref: "#/components/schemas/AddUnitAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ProxyApplyAppointmentResponse:
      type: object
      pattern: org.ProxyApplicationAppointmentResponseModel
      properties:
        proxyApplicationAppointment:
          description: 代理申請情報
          type: object
          properties:
            id:
              description: 代理申請のid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddProxyApplyAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindProxyApplyAppointmentResponse:
      type: object
      pattern: org.FindProxyApplicationAppointmentResponseModel
      properties:
        proxyApplicationAppointmentList:
          description: 代理申請情報一覧
          type: object
          pattern: org.ProxyApplicationAppointmentListModel
          properties:
            entries:
              description: 代理申請情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: 代理申請のid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddProxyApplyAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ProxyAppointmentResponse:
      type: object
      pattern: org.ProxyAppointmentResponseModel
      properties:
        proxyAppointment:
          description: 代理承認情報
          type: object
          properties:
            id:
              description: 代理承認のid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddProxyAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindProxyAppointmentResponse:
      type: object
      pattern: org.FindProxyAppointmentResponseModel
      properties:
        proxyAppointmentList:
          description: 代理承認情報一覧
          type: object
          pattern: org.ProxyAppointmentListModel
          properties:
            entries:
              description: 代理承認情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: 代理承認のid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddProxyAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    DelegationAppointmentResponse:
      type: object
      pattern: org.DelegationAppointmentResponseModel
      properties:
        delegationAppointment:
          description: 権限委譲情報
          type: object
          properties:
            id:
              description: 権限委譲のid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddDelegationAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindDelegationAppointmentResponse:
      type: object
      pattern: org.FindDelegationAppointmentResponseModel
      properties:
        delegationAppointmentList:
          description: 権限委譲情報一覧
          type: object
          pattern: org.DelegationAppointmentListModel
          properties:
            entries:
              description: 権限委譲情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: 権限委譲のid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddDelegationAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    DeprivationAppointmentResponse:
      type: object
      pattern: org.DeprivationAppointmentResponseModel
      properties:
        deprivationAppointment:
          description: 引上げ権限情報
          type: object
          properties:
            id:
              description: 引上げ権限のid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddDeprivationAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindDeprivationAppointmentResponse:
      type: object
      pattern: org.FindDeprivationAppointmentResponseModel
      properties:
        deprivationAppointmentList:
          description: 引上げ権限情報一覧
          type: object
          pattern: org.DeprivationAppointmentListModel
          properties:
            entries:
              description: 引上げ権限情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: 引上げ権限のid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddDeprivationAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    PrivateRoleResponse:
      type: object
      pattern: org.PrivateRoleResponseModel
      properties:
        privateRole:
          description: プライベートロール情報
          type: object
          properties:
            id:
              description: プライベートロールのid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddPrivateRoleRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindPrivateRoleResponse:
      type: object
      pattern: org.FindPrivateRoleResponseModel
      properties:
        privateRoleList:
          description: プライベートロール一覧
          type: object
          pattern: org.PrivateRoleListModel
          properties:
            entries:
              description: プライベートロール情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: プライベートロールのid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddPrivateRoleRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    PrivateRoleAppointmentResponse:
      type: object
      pattern: org.PrivateRoleAppointmentResponseModel
      properties:
        privateRoleAppointment:
          description: プライベートロール所属情報
          type: object
          properties:
            id:
              description: プライベートロール所属のid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddPrivateRoleAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindPrivateRoleAppointmentResponse:
      type: object
      pattern: org.FindPrivateRoleAppointmentResponseModel
      properties:
        privateRoleAppointmentList:
          description: プライベートロール所属一覧
          type: object
          pattern: org.PrivateRoleAppointmentListModel
          properties:
            entries:
              description: プライベートロール所属情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: プライベートロール所属のid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddPrivateRoleAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    UniversalRoleResponse:
      type: object
      pattern: org.UniversalRoleResponseModel
      properties:
        universalRole:
          description: ユニバーサルロール情報
          type: object
          properties:
            id:
              description: ユニバーサルロールのid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddUniversalRoleRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindUniversalRoleResponse:
      type: object
      pattern: org.FindUniversalRoleResponseModel
      properties:
        universalRoleList:
          description: ユニバーサルロール一覧
          type: object
          pattern: org.UnivarsalRoleListModel
          properties:
            entries:
              description: ユニバーサルロール情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: ユニバーサルロールのid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddUniversalRoleRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    UniversalRoleAppointmentResponse:
      type: object
      pattern: org.UniversalRoleAppointmentResponseModel
      properties:
        universalRoleAppointment:
          description: ユニバーサルロール所属情報
          type: object
          properties:
            id:
              description: ユニバーサルロール所属のid
              type: integer
          allOf:
            - $ref: "#/components/schemas/AddUniversalRoleAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindUniversalRoleAppointmentResponse:
      type: object
      pattern: org.FindUniversalRoleAppointmentResponseModel
      properties:
        universalRoleAppointmentList:
          description: ユニバーサルロール所属一覧
          type: object
          pattern: org.UniversalRoleAppointmentListModel
          properties:
            entries:
              description: ユニバーサルロール所属情報
              type: array
              items:
                type: object
                properties:
                  id:
                    description: ユニバーロール所属のid
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/AddUniversalRoleAppointmentRequest"
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindProjectResponse:
      type: object
      pattern: site.ListProjectResponseModel
      properties:
        projectList:
          description: 業務カテゴリ一覧
          type: object
          properties:
            entries:
              type: array
              items:
                type: object
                properties:
                  name:
                    description: 業務カテゴリ名称
                    type: string
                  code:
                    description: 業務カテゴリコード
                    type: string
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListComponentMasterWindowResponse:
      type: object
      pattern: form.ListMasterWindowComponetResponseModel
      properties:
        masterWindow:
          description: マスタ参照コンポーネント
          type: object
          pattern: form.MasterWindowComponentProjectListModel
          properties:
            entries:
              type: array
              items:
                type: object
                pattern: form.MasterWindowComponentProjectModel
                properties:
                  name:
                    description: 業務カテゴリ名
                    type: string
                  id:
                    description: 業務カテゴリID
                    type: integer
                  code:
                    description: 業務カテゴリコード
                    type: string
                  componentList:
                    description: マスタ参照コンポーネントリスト
                    type: object
                    pattern: form.MasterWindowComponentListModel
                    properties:
                      entries:
                        type: array
                        items:
                          type: object
                          pattern: form.MasterWindowComponentModel
                          properties:
                            name:
                              description: コンポーネント名称
                              type: string
                            id:
                              description: コンポーネントID
                              type: integer
                            code:
                              description: コンポーネントコード
                              type: string
                            masterData:
                              description: マスタデータ名
                              type: string
                            column:
                              description: 列項目
                              type: object
                              pattern: form.MasterComponentColumnListModel
                              properties:
                                entries:
                                  type: array
                                  items:
                                    type: object
                                    pattern: form.MasterComponentColumnModel
                                    properties:
                                      name:
                                        description: 見出し名称
                                        type: string
                                      columnName:
                                        description: DB項目名
                                        type: string
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListComponentAutoNumberResponse:
      type: object
      pattern: form.ListAutoNumberComponentResponseModel
      properties:
        autoNumber:
          description: 自動採番コンポーネント
          type: object
          pattern: form.AutoNumberComponentProjectListModel
          properties:
            entries:
              type: array
              items:
                type: object
                pattern: form.AutoNumberComponentProjectModel
                properties:
                  name:
                    description: 業務カテゴリ名
                    type: string
                  id:
                    description: 業務カテゴリID
                    type: integer
                  code:
                    description: 業務カテゴリコード
                    type: string
                  componentList:
                    description: 自動採番コンポーネントリスト
                    type: object
                    pattern: form.AutoNumberComponentListModel
                    properties:
                      entries:
                        type: array
                        items:
                          type: object
                          pattern: form.AutoNumberComponentModel
                          properties:
                            name:
                              description: コンポーネント名称
                              type: string
                            id:
                              description: コンポーネントID
                              type: integer
                            code:
                              description: コンポーネントコード
                              type: string
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListFormResponse:
      type: object
      pattern: form.ListFormResponseModel
      properties:
        formProject:
          description: フォーム設定情報
          type: object
          pattern: form.FormProjectListModel
          properties:
            entries:
              type: array
              items:
                type: object
                pattern: form.FormProjectModel
                properties:
                  name:
                    description: |
                      業務カテゴリ名称<br>
                      *テンプレート(TEMPLATE)も業務カテゴリである
                    type: string
                  id:
                    description: |
                      業務カテゴリID<br>
                      *管理プロジェクトIDを使用
                    type: integer
                  form:
                    description: フォーム
                    type: object
                    pattern: form.FormListModel
                    properties:
                      entries:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              description: フォーム名称
                              type: string
                            id:
                              description: フォームID
                              type: integer
                            type:
                              description: |
                                フォーム種別<br>
                                *MAIN / TEMPLATE
                            version:
                              description: バージョン
                              type: string
                            fieldList:
                              description: |
                                フォームフィールド一覧<br>
                                *空を出力。フォーム定義情報取得APIで表示。
                              type: object
                              pattern: form.FormFieldListModel
                            explanation:
                              description: 備考
                              type: string
                            minorVersion:
                              description: マイナーバージョン
                              type: integer
                            majorVersion:
                              description: メジャーバージョン
                              type: integer
                            code:
                              description: フォームコード
                              type: string
                            projectCode:
                              description: |
                                業務カテゴリコード<br>
                                *formProject/entries 配下の code と同じ
                              type: string
                            isForceAutoCalc:
                              description: |
                                書類保存時に再計算するかどうか<br>
                                詳細タブ>動作設定 欄の「計算式設定」内のチェックボックス<br>
                                チェックあり：true<br>
                                チェックなし：false
                              type: boolean
                            isReferenceOnly:
                              description: |
                                関連書類専用フォームかどうか<br>
                                *使用していないので、falseのみ出力
                              type: boolean
                            isInsertTrailRequired:
                              description: |
                                証跡PDF挿入を必須とするかどうか<br>
                                PDFタブ>「挿入するタイミング」のラジオボタン<br>
                                常に挿入する：true<br>
                                PDFを作成する度に指定する：false
                              type: boolean
                            validityDateTo:
                              description: 適用終了日
                              type: string
                              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                            xwfFileName:
                              description: XWFファイル名称
                              type: string
                            latestVersion:
                              description: 最新バージョン
                              type: string
                            trailFormCode:
                              description: 証跡PDFとして利用するフォームのフォームコード
                              type: string
                            insertTrailPosition:
                              description: |
                                証跡PDF挿入位置<br>
                                PDFタブ>「挿入する位置」のラジオボタン<br>
                                書類の前：FRONT<br>
                                書類の後：BACK
                              type: string
                            validityDateFrom:
                              description: 適用開始日
                              type: string
                              pattern: ^((?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) (2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9]) ([A-Z]{3})$
                            tableName:
                              description: DBテーブル名一覧
                              type: object
                              pattern: form.FormTableNameListModel
                              properties:
                                entries:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        description: |
                                          DBテーブル名<br>
                                          *表明細の内容も表示される
                            isInsertTrail:
                              description: |
                                証跡PDFを挿入するかどうか<br>
                                PDFタブ>「PDF作成時に証跡PDFを挿入する」内のチェックボックス<br>
                                チェックあり：true<br>
                                チェックなし：false
                              type: boolean
                            pageCount:
                              description: フォーム構成ページ数
                              type: integer
                  code:
                    description: 業務カテゴリコード
                    type: string
                  formCount:
                    description: 所属フォーム数
                    type: integer
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    FindFormDefinitionResponse:
      type: object
      pattern: form.findFormDefinitionResponseModel
      properties:
        form:
          type: object
          properties:
            code:
              description: フォームコード
              type: string
            name:
              description: フォーム名称
              type: string
            rule:
              description: |
                回付ルール情報<br>
                *ない場合は、空白配列
              type: object
              pattern: form.RuleStepNameListModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    pattern: form.RuleStepNameModel
                    properties:
                      code:
                        description: 回付ルールコード
                        type: string
                      name:
                        description: 回付ルール名称
                        type: string
                      ruleField:
                        description: |
                          項目ルール<br>
                          *リクエストのルールコードが未指定の場合は、空
                          *リクエストのルールコードが設定された場合、設定したルールコードの内容のみ表示
                        type: object
                        pattern: form.StepFieldListModel
                        properties:
                          entries:
                            type: array
                            items:
                              type: object
                              properties:
                                fieldName:
                                  description: フィールド名
                                  type: string
                                id:
                                  description: ID
                                  type: string
                                invisible:
                                  description: |
                                    閲覧可<br>
                                    false：不可<br>
                                    true：可
                                  type: boolean
                                disable:
                                  description: |
                                    編集可<br>
                                    false：不可<br>
                                    true：可
                                  type: boolean
                                necessary:
                                  description: |
                                    必須<br>
                                    false：不可<br>
                                    true：可
                                  type: boolean
            pages:
              description: フォームページ情報
              type: object
              pattern: form.FormPageListModel
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    properties:
                      fields:
                        description: フィールド情報
                        type: object
                        pattern: form.FormFieldListModel
                        properties:
                          entries:
                            type: array
                            items:
                              type: object
                              pattern: form.FormFieldModel
                              properties:
                                name:
                                  description: フィールド名称
                                  type: string
                                fieldNo:
                                  description: フィールド番号
                                  type: integer
                                fieldId:
                                  description: フィールドID
                                  type: string
                                fieldTypeNo:
                                  description: |
                                    フィールドタイプ番号<br>
                                    *詳細はfieldTypeを参照
                                  type: integer
                                fieldType:
                                  description: |
                                    フィールドタイプ<br>
                                    |フィールドタイプ番号|フィールドタイプ名|意味|備考|
                                    |----|----|----|----|
                                    |9|TEXTFIELD|文字フィールド||
                                    |10|NUMBERFIELD|数値フィールド||
                                    |11|INTEGERFIELD|整数フィールド||
                                    |12|TEXTAREA|テキストエリア||
                                    |14|BUTTON|ボタン|AWでは表示されない|
                                    |15|RADIOBUTTON|ラジオボタン||
                                    |16|CHECKBOX|チェックボックス||
                                    |17|COMBOBOX|コンボボックス||
                                    |18|LISTBOX|リストボックス||
                                    |23|BARCODEFIELD|バーコード|AWでは画面に表示されないため、出力しない|
                                    |24|IMAGE|イメージ|AWでは表示されない|
                                    |25|YEARFIELD|西暦フィールド||
                                    |26|MONTHFIELD|月フィールド||
                                    |27|DAYFIELD|日フィールド||
                                    |28|WEEKFIELD|曜日フィールド||
                                    |29|STAMPFIELD|印影フィールド||
                                    |34|DATEFIELD|日時フィールド||
                                dataType:
                                  description: |
                                    データタイプ<br>
                                    *既存モデルのフィールド<br>
                                    |値|意味|
                                    |----|----|
                                    |STRING|文字列|
                                    |DECIMAL|数値|
                                    |INT|整数値(int)|
                                    |TEXT|テキスト|
                                length:
                                  description: フィールド最大値
                                  type: integer
                                tagName:
                                  description: タグ名
                                  type: string
                                groupIdName:
                                  description: |
                                    グループID名<br>
                                    *グループ(表明細)を作った場合にID名が必須。グループでない、ラジオボタンなど一括設定の場合はnull。
                                  type: string
                                isRequired:
                                  description: |
                                    必須フィールドフラグ<br>
                                    true：必須フィールド<br>
                                    false：非必須フィールド
                                  type: boolean
                                isEditable:
                                  description: |
                                    編集禁止<br>
                                    false：無し<br>
                                    true：有り
                                  type: boolean
                                isDisabled:
                                  description: |
                                    無効<br>
                                    false：無し<br>
                                    true：有り
                                  type: boolean
                                isComma:
                                  description: |
                                    カンマ区切り<br>
                                    false：無し<br>
                                    true：有り
                                  type: boolean
                                lookupValue:
                                  description: |
                                    ルックアップ設定<br>
                                    *ない場合は null<br>
                                    |値|意味|
                                    |----|----|
                                    |DOCUMENT_ID|書類ID|
                                    |LOGIN_USER_CODE|ログインユーザーコード|
                                    |LOGIN_USER_NAME|ログインユーザー名|
                                    |LOGIN_USER_LOCALIZED_NAME|ログインユーザーローカル名|
                                    |LOGIN_USER_KANA|ログインユーザーカナ|
                                    |LOGIN_USER_STAMPNAME|ログインユーザーの印影上の表示名|
                                    |LOGIN_USER_LOGINID|ログインユーザーログインID|
                                    |LOGIN_USER_MAILADDRESS|ログインユーザーメールアドレス|
                                    |LOGIN_USER_RESERVE1～20|ログインユーザー予備項目1～20|
                                    |LOGIN_UNIT_CODE|ログインユーザー組織コード|
                                    |LOGIN_UNIT_OFFICIAL_NAME|ログインユーザー組織名称|
                                    |LOGIN_UNIT_NAME|ログインユーザー組織画面表示名称|
                                    |LOGIN_UNIT_LOCALIZED_NAME|ログインユーザー組織ローカル表示名称|
                                    |LOGIN_UNIT_RESERVE1～20|ログインユーザー組織予備項目1～20|
                                    |LOGIN_SECTIONROLE_CODE|ログインユーザーセクションロールコード|
                                    |LOGIN_SECTIONROLE_NAME|ログインユーザーセクションロール名称|
                                    |LOGIN_SECTIONROLE_RANK|ログインユーザーセクションロールランク|
                                    |USER_CODE|申請ユーザーコード|
                                    |USER_NAME|申請ユーザー名|
                                    |USER_LOCALIZED_NAME|申請ユーザーローカル名|
                                    |USER_KANA|申請ユーザーカナ|
                                    |USER_STAMPNAME|申請ユーザーの印影上の表示名|
                                    |USER_LOGINID|申請ユーザーログインID|
                                    |USER_MAILADDRESS|申請ユーザーメールアドレス|
                                    |USER_RESERVE1～20|申請ユーザー予備項目1～20|
                                    |UNIT_CODE|申請組織コード|
                                    |UNIT_OFFICIAL_NAME|背院生組織名称|
                                    |UNIT_NAME|申請組織画面表示名称|
                                    |UNIT_LOCALIZED_NAME|申請組織ローカル表示名称|
                                    |UNIT_RESERVE1～20|申請組織予備項目1～20|
                                    |SECTIONROLE_CODE|申請組織セクションロールコード|
                                    |SECTIONROLE_NAME|申請組織セクションロール名称|
                                    |SECTIONROLE_RANK|申請組織セクションロールランク|
                                    |FORM_CODE|フォームコード|
                                    |FORM_NAME|フォーム名称|
                                    |RULE_CODE|回付ルールコード|
                                    |RULE_NAME|回付ルール名称|
                                    |BAGGAGE_CREATE_DATE|申請日|
                                    |APLLY_CRITERION_DATE|申請基準日|
                                    |BAGGAGE_FIX_DATE|承認完了日|
                                    |DOC_REGIST_DATE|作成日|
                                    |DOC_ID|書類ID|
                                    |DOC_VERSION|書類バージョン|
                                    |DOC_LISTNAME1～20|件名1～20|
                                    |DOC_ADMINNO|書類管理番号|
                                    |DOC_OWNER_NAME|書類オーナー名称|
                                    |DOC_FORM_CODE|フォームコード|
                                    |DOC_FORM_NAME|フォーム名称|
                                    |TASK_SEQUENCE|順序|
                                    |TASK_NODE_CLASS|ステップ種類|
                                    |TASK_NODE_NAME|ステップ名称|
                                    |TASK_UNIT_CODE|組織コード|
                                    |TASK_UNIT_NAME|組織名称|
                                    |TASK_ROLE_CODE|ロールコード|
                                    |TASK_ROLE_NAME|ロール名称|
                                    |TASK_USER_CODE|ユーザーコード|
                                    |TASK_USER_NAME|ユーザー名称|
                                    |TASK_PRINCIPAL_UNIT_CODE|被代理組織コード|
                                    |TASK_PRINCIPAL_UNIT_NAME|被代理組織名称|
                                    |TASK_PRINCIPAL_ROLE_CODE|被代理ロールコード|
                                    |TASK_PRINCIPAL_ROLE_NAME|被代理ロール名称|
                                    |TASK_PRINCIPAL_USER_CODE|被代理ユーザーコード|
                                    |TASK_PRINCIPAL_USER_NAME|被代理ユーザー名称|
                                    |TASK_EFFECTNAME|処理名称|
                                    |TASK_EFFECTDATE|処理日時|
                                    |TASK_ISPROXYUSER|代理ユーザーかどうか|
                                    |TASK_ISDEPRIVED|引上げされたかどうか|
                                    |TASK_DEPRIVED_NODE_NAME|引上げステップ名称|
                                    |TASK_COMMENT|処理時コメント|
                                    |TASK_RESERVE1～20|タスク予備項目1～10|
                                defaultValue:
                                  description: |
                                    初期値<br>
                                    *ない場合は空白("")
                                  type: string
                                dateFormat:
                                  description: | 
                                    日付書式<br>
                                    *ない場合は null<br>
                                    |値|意味|
                                    |----|----|
                                    |YYYYMMDD_ZERO|yyyy年MM月dd日(前0あり)|
                                    |YYYYMMDD_NONZERO|yyyy年MM月dd日(前0なし)|
                                    |YYYYMMDD_ZERO_SLASH|yyyy/MM/dd(前0あり)|
                                    |YYYYMMDD_ZERO_HYPHEN|yyyy-MM-dd(前0あり)|
                                    |YYYYMMDD_NONZERO_SLASH|yyyy/MM/dd(前0なし)|
                                    |YYYYMMDD_NONZERO_HYPHEN|yyyy-MM-dd(前0なし)|
                                    |YYYYMMDD_ZERO_DEF|yyyyMMdd(前0あり)|
                                    |YYYYMMDD_NONZERO_DEF|yyyyMMdd(前0なし)|
                                    |YYYYMM_ZERO_SLASH|yyyy/MM(前0あり)|
                                    |YYYYMM_ZERO_HYPHEN|yyyy-MM(前0あり)|
                                    |YYYYMM_NONZERO_SLASH|yyyy/MM(前0なし)|
                                    |YYYYMM_NONZERO_HYPHEN|yyyy-MM(前0なし)|
                                    |MMDD_ZERO_SLASH|MM/DD(前0あり)|
                                    |MMDD_ZERO_HYHPEN|MM-dd(前0あり)|
                                    |MMDD_NONZERO_SLASH|MM/DD(前0なし)|
                                    |MMDD_NONZERO_HYHPEN|MM-dd(前0なし)|
                                    |YYYYMM_ZERO_DEF|yyyyMM(前0あり)|
                                    |YYYYMM_NONZERO_DEF|yyyyMM(前0なし)|
                                    |MMDD_ZERO_DEF|MMDD(前0あり)|
                                    |MMDD_NONZERO_DEF|MMDD(前0なし)|
                                fieldList:
                                  description: |
                                    フィールド一覧<br>
                                    *空で表示、本APIではグループID名を使用するため表明細も判断可能
                                  type: object
                                maxRows:
                                  description: |
                                    表明細行数<br>
                                    *ない場合は 0
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
    ListPublicFolderInfoResponse:
      type: object
      pattern: publication.ListPublicFolderInfoResponseModel
      properties:
        publicFolderList:
          description: 公開フォルダのリスト
          type: object
          pattern: publication.PublicFolderInfoListModel
          properties:
            entries:
              type: array
              items:
                type: object
                properties:
                  name:
                    description: 公開フォルダ名称
                    type: string
                  id:
                    description: 公開フォルダID
                    type: integer
                  code:
                    description: 公開フォルダコード
                    type: string
                  publicFormList:
                    description: 公開フォームのリスト
                    type: object
                    pattern: publication.PublicFormListModel
                    properties:
                      entries:
                        type: array
                        items:
                          type: object
                          properties:
                            formCode:
                              description: フォームコード
                              type: string
                            formName:
                              description: フォーム名称
                              type: string
                            ruleCode:
                              description: 回付ルールコード
                              type: string
                            ruleName:
                              description: 回付ルール名称
                              type: string
                  publicFolderList:
                    description: 公開フォルダのリスト
                    type: object
                    pattern: publication.PublicFolderListModel
        resultStatus:
          allOf:
            - $ref: "#/components/schemas/resultStatus"
    
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
    oauth2Auth:
      type: http
      scheme: oauth2

  # -----------------------------------------------
  # 例 components/examples
  # -----------------------------------------------

  examples:
    
    response_errorRequest:
      value: 
        resultStatus: 
          status: FAIL
          messageList: 
            entries: []
          text: 公開APIの実行時にエラーが発生しました。
          code: APIPAP_W0003
  
  # -----------------------------------------------
  # パラメータ components/parameters
  # -----------------------------------------------

  parameters:
    
    model_name:
      description: |
        名前空間<br>
        common, doc, workflow, org, site, usermaster, form, publication
      name: model_name
      in: path
      schema:
        type: string
        example: doc
      required: true
    
    model_model:
      description: |
        モデル名<br>
        APIの各ページのスキーマを参照
      name: model_model
      in: path
      schema:
        type: string
        example: PrepareDocRequestModel
      required: true
    
    service_name:
      description: |
        名前空間<br>
        doc, workflow, org, site, usermaster, form, publication
      name: service_name
      in: path
      schema:
        type: string
        example: doc
      required: true
    
    service_service:
      description: |
        サービス名<br>
        Doc, Workflow, Org, Site, UserMaster, Form, Publication
      name: service_service
      in: path
      schema:
        type: string
        example: Doc
      required: true
    service_method:
      description: |
        メソッド名<br>
        APIの各ページを参照
      name: service_method
      in: path
      schema:
        type: string
        example: getDocHeader
      required: true
    
    download_s:
      description: |
        ファイルID<br>
        事前に他のAPIで取得した system.StorageFileModel 型の値を指定してください。<br>
        ・ファイルID : ファイルを特定する識別子。他のAPIで事前に取得する
      name: download_s
      in: path
      schema:
        type: string
        example: xxxxxxxxx
      required: true
